/*
	Based on rgbcolor.js by Stoyan Stefanov <sstoo@gmail.com>
	http://www.phpied.com/rgb-color-parser-in-javascript/
*/

/*
  options.target      - name of the target object
  options.global      - target is the global object
  options.stat        - export as static methods of target
  options.proto       - export as prototype methods of target
  options.real        - real prototype method for the `pure` version
  options.forced      - export even if the native feature is available
  options.bind        - bind methods to the target, required for the `pure` version
  options.wrap        - wrap constructors to preventing global pollution, required for the `pure` version
  options.unsafe      - use the simple assignment of property instead of delete + defineProperty
  options.sham        - add a flag to not completely full polyfills
  options.enumerable  - export as enumerable property
  options.noTargetGet - prevent calling a getter on target
*/

/* , ...args */

/* , fromIndex = 0 */

/* , init */

/* , initialValue */

/* , mapfn = undefined, thisArg = undefined */

/* , newTarget */

/* , position = 0 */

/* , receiver */

/* , start = 0, end = @length */

/* , that = undefined */

/* , thisArg */

/* binding */

/* empty */

/* eslint-disable no-bitwise -- used for calculations */

/* eslint-disable no-proto */

/* eslint-disable unicorn/prefer-query-selector -- aiming at
  backward-compatibility */

/* global ActiveXObject */

/* harmony default export */

/* ignore */

/*#__PURE__*/

/**
     * Create Canvg instance from SVG source string.
     * @param ctx - Rendering context.
     * @param svg - SVG source string.
     * @param options - Rendering options.
     */

/**
     * Create new Canvg instance with inherited options.
     * @param ctx - Rendering context.
     * @param svg - SVG source string or URL.
     * @param options - Rendering options.
     */

/**
     * Create new Canvg instance with inherited options.
     * @param ctx - Rendering context.
     * @param svg - SVG source string.
     * @param options - Rendering options.
     */

/**
     * Document is ready promise.
     */

/**
     * Document is ready value.
     */

/**
     * Render only first frame, ignoring animations and mouse.
     * @param options - Rendering options.
     */

/**
     * Resize SVG to fit in given size.
     * @param width
     * @param height
     * @param preserveAspectRatio
     */

/**
     * Start rendering.
     * @param options - Render options.
     */

/**
     * Stop rendering.
     */

/**
   * Create Canvg instance from SVG source string or URL.
   * @param ctx - Rendering context.
   * @param svg - SVG source string or URL.
   * @param options - Rendering options.
   */

/**
   * Main constructor.
   * @param ctx - Rendering context.
   * @param svg - SVG Document.
   * @param options - Rendering options.
   */

/**
 *
 */

/**
 * @param {HTMLCanvasElement} canvas
 * @param {Integer} topX
 * @param {Integer} topY
 * @param {Integer} width
 * @param {Integer} height
 * @param {Float} radius
 * @returns {undefined}
 */

/**
 * @param {ImageData} imageData
 * @param {Integer} topX
 * @param {Integer} topY
 * @param {Integer} width
 * @param {Integer} height
 * @param {Float} radius
 * @returns {ImageData}
 */

/**
 * @param {string|HTMLCanvasElement} canvas
 * @param {Integer} topX
 * @param {Integer} topY
 * @param {Integer} width
 * @param {Integer} height
 * @throws {Error|TypeError}
 * @returns {ImageData} See {@link https://html.spec.whatwg.org/multipage/canvas.html#imagedata}
 */

/**
 * Angle between two vectors.
 */

/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

/**
 * HTML-safe compress white-spaces.
 * @param str - String to compress.
 */

/**
 * HTML-safe left trim.
 * @param str - String to trim.
 */

/**
 * HTML-safe right trim.
 * @param str - String to trim.
 */

/**
 * Measure selector specificity.
 * @param selector - Selector to measure.
 */

/**
 * Normalize attribute name.
 * @param name - Attribute name.
 */

/**
 * Options preset for `OffscreenCanvas`.
 * @param config - Preset requirements.
 * @param config.DOMParser - XML/HTML parser from string into DOM Document.
 */

/**
 * Options preset for `node-canvas`.
 * @param config - Preset requirements.
 * @param config.DOMParser - XML/HTML parser from string into DOM Document.
 * @param config.canvas - `node-canvas` exports.
 * @param config.fetch - WHATWG-compatible `fetch` function.
 */

/**
 * Parse external URL.
 * @param url - CSS url string.
 */

/**
 * Ratio between two vectors.
 */

/**
 * SVG renderer on canvas.
 */

/**
 * Set properties.
 */

/**
 * String to numbers array.
 * @param str - Numbers string.
 */

/**
 * Transform floats to integers in rgb colors.
 * @param color - Color to normalize.
 */

/**
 * Vector magnitude.
 */

/**
 * https://developer.mozilla.org/en-US/docs/Web/CSS/font-style
 */

/**
 * https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight
 */

/**
* StackBlur - a fast almost Gaussian Blur For Canvas
*
* In case you find this class useful - especially in commercial projects -
* I am not totally unhappy for a small donation to my PayPal account
* mario@quasimondo.de
*
* Or support me on flattr:
* {@link https://flattr.com/thing/72791/StackBlur-a-fast-almost-Gaussian-Blur-Effect-for-CanvasJavascript}.
*
* @module StackBlur
* @author Mario Klingemann
* Contact: mario@quasimondo.com
* Website: {@link http://www.quasimondo.com/StackBlurForCanvas/StackBlurDemo.html}
* Twitter: @quasimondo
*
* @copyright (c) 2010 Mario Klingemann
*
* Permission is hereby granted, free of charge, to any person
* obtaining a copy of this software and associated documentation
* files (the "Software"), to deal in the Software without
* restriction, including without limitation the rights to use,
* copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the
* Software is furnished to do so, subject to the following
* conditions:
*
* The above copyright notice and this permission notice shall be
* included in all copies or substantial portions of the Software.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
* OTHER DEALINGS IN THE SOFTWARE.
*/

/***/

// 	kern + width / 2.0,

// 	segment.p0.x,

// 	segment.p0.x, segment.p0.y, segment.p1.x, segment.p1.y

// 	segment.p0.y,

// 	segment.p1.x,

// 	segment.p1.y

//                                   single quotes [2]

//                                   v           double quotes [3]

//                                   v           v        no quotes [4]

//                                   v           v        v

//  && !nodeEnv

// "consumed" by the delegate iterator. If context.method was

// "return" to "throw", let that override the TypeError below.

// "return", allow the original .return call to continue in the

// );

// .constructor.prototype properties for functions that return Generator

// .throw, and .return (see defineIteratorMethods).

// .throw, and .return methods.

// 1 degree resolution

// 2 ** 53 - 1 == 9007199254740991

// 23.1.3.1 Map.prototype.clear()

// 23.1.3.3 Map.prototype.delete(key)

// 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11

// 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)

// 23.1.3.6 Map.prototype.get(key)

// 23.1.3.7 Map.prototype.has(key)

// 23.1.3.9 Map.prototype.set(key, value)

// 23.2.3.1 Set.prototype.add(value)

// 23.2.3.2 Set.prototype.clear()

// 23.2.3.4 Set.prototype.delete(value)

// 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)

// 23.2.3.7 Set.prototype.has(value)

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()

// 25.4.1.5 NewPromiseCapability(C)

// 25.4.3.1 Promise(executor)

// 4 = theta

// 7.4.6 IteratorClose(iterator, completion)

// ?

// ? alpha

// @@iterator function is called on it. Some browsers' implementations of the

// A .throw or .return when the delegate iterator has no .throw

// A Generator should always return itself as the iterator object when the

// Approximates by breaking curve into 100 line segments

// Approximates by breaking curve into line segments

// Array#includes uses SameValueZero equality algorithm

// Array#indexOf ignores holes, Array#includes - not

// Assign the result of the finished delegate to the temporary

// AsyncIterator objects; they just return a Promise for the value of

// Avoid propagating failures to Promises returned by later

// Be forgiving, per 25.3.3.3.3 of the spec:

// Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should

// CONCATENATED MODULE: ./node_modules/canvg/lib/index.es.js

// CONCATENATED MODULE: ./node_modules/stackblur-canvas/dist/stackblur-es.js

// CP1 = QP0 + 2/3 *(QP1-QP0)

// CP2 = CP1 + 1/3 *(QP2-QP0)

// CSP to forbid Function, and you're not willing to fix either of those

// Calculate points

// Call delegate.iterator[context.method](context.arg) and handle the

// Can foresee having a rough pair table built in that the developer can override as needed.

// Chrome 38 Symbol has incorrect toString conversion

// Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives

// Clear queue here to prevent

// Define Generator.prototype.{next,throw,return} in terms of the

// Define the unified helper method that is used to implement .next,

// Deliberately forget the last sent value so that we don't

// Detect correctness of subclassing with @@species support

// Dispatch the exception by looping back around to the

// Do not calc bounding box if mouse is not working.

// Don't enum bug & hidden keys

// Dummy constructor functions that we use as the .constructor and

// ELEMENT_NODE

// ESM COMPAT FLAG

// EXPORTS

// EXTERNAL MODULE: ./node_modules/@babel/runtime-corejs3/core-js-stable/instance/starts-with.js

// EXTERNAL MODULE: ./node_modules/@babel/runtime-corejs3/core-js-stable/reflect/delete-property.js

// Exception thrown outside of any try block that could handle

// Find such segment what distance between p0 and p1 is approx. width of glyph

// For the native GeneratorFunction constructor, the best we can

// GenStateExecuting and loop back for another invocation.

// Generated by CoffeeScript 1.12.2

// Helper for a popular repeating case of the spec:

// Helper for defining the .next, .throw, and .return methods of the

// IE 8 has a broken Object.defineProperty that only works on DOM objects.

// IE8 returns string on undefined

// IE8- don't enum bug keys

// If a rejected Promise was yielded, throw the rejection back

// If an exception is thrown from innerFn, we leave state ===

// If context.method was "throw" but the delegate handled the

// If enqueue has been called before, then we want to wait until

// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).

// If maybeInvokeDelegate(context) changed context.method from

// If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.

// If some font will be loaded after this method call, <textPath> will not be rendered correctly.

// If the delegate iterator has a return method, give it a

// If the dispatched exception was caught by a catch block,

// Ignore the finally entry if control is not jumping to a

// Iterator interface in terms of a single ._invoke method.

// JSON[@@toStringTag] property

// Let integer be ? ToInteger(index).

// MS Edge converts symbol values to JSON as {}

// Math[@@toStringTag] property

// Microsoft Edge fix

// NO RENDER

// NOOP

// Node.js

// Node.js 0.8-

// Node.js 0.9+ & IE10+ has setImmediate, otherwise:

// Not sure about the optimal order of these conditions:

// Note that simple async functions are implemented on top of

// Note: Since glyphs are rendered one at a time, any kerning pair data built into the font will not be used.

// Note: ["return"] must be used for ES3 parsing compatibility.

// Note: for purpose of calculating arc length, not going to worry about rotating X-axis by angle psi

// Or use "dx" attribute of the <text> node as a naive replacement

// Prepare cache

// Promise.resolve without an argument throws an error in LG WebOS 2

// Rather than returning an object with a next method, we keep

// Regardless of whether this script is executing as a CommonJS module

// Resetting context._sent for legacy support of Babel's

// Resume execution at the desired location (see delegateYield).

// Return an iterator with no values.

// Safari 8 has buggy iterators w/o `next`

// See https://github.com/facebook/regenerator/issues/274 for more details.

// Set @@toStringTag to native iterators

// Setting context._sent for legacy support of Babel's

// Simulate old RGBColor version, which can't parse rgba.

// Some versions of FF have rAF but not cAF

// StackBlur requires canvas be on document

// TODO need some optimisations. possibly build cache only for curved segments?

// TODO: Remove from `core-js@4`

// TODO: applyToPoint unused ... remove?

// TODO: compute?

// TODO: implement

// TODO: refactor out apply from feColorMatrix

// TODO: this is too naive, make it better

// Thank's IE8 for his funny defineProperty

// The ._invoke method unifies the implementations of the .next,

// The context.catch method must only be called with a location

// The delegate iterator is finished, so forget it and continue with

// The root entry object (effectively a try statement without a catch

// This environment has a native %IteratorPrototype%; use it instead

// This is a polyfill for %IteratorPrototype% for environments that

// This method supposes what all custom fonts already loaded.

// This module should not be running in strict mode, so the above

// To avoid creating an additional object, we just hang the .value

// Try/catch helper to minimize deoptimizations. Returns a completion

// Unhandled rejections tracking support, NodeJS Promise without it fails @@species test

// V8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables

// We can't detect it synchronously, so just check versions

// We can't use @@species feature detection in V8 since it causes

// We can't use this feature detection in V8 since it causes

// We need Promise#finally in the pure version for preventing prototype pollution

// When a yielded Promise is resolved, its final value becomes

// Within the body of any async function, `await x` is transformed to

// Workaround for node-canvas

// Works with __proto__ only. Old v8 can't work with null proto objects.

// Wrap fontFamily only on nodejs and only for canvas.ctx

// Wrap in a new function to prevent

// You need to call this method manually to update glyphs cache.

// `%ArrayIteratorPrototype%.next` method

// `%StringIteratorPrototype%.next` method

// `Array.from` method

// `Array.from` method implementation

// `Array.isArray` method

// `Array.prototype.concat` method

// `Array.prototype.entries` method

// `Array.prototype.every` method

// `Array.prototype.fill` method

// `Array.prototype.fill` method implementation

// `Array.prototype.filter` method

// `Array.prototype.findIndex` method

// `Array.prototype.find` method

// `Array.prototype.forEach` method

// `Array.prototype.forEach` method implementation

// `Array.prototype.includes` method

// `Array.prototype.indexOf` method

// `Array.prototype.keys` method

// `Array.prototype.map` method

// `Array.prototype.reduceRight` method

// `Array.prototype.reduce` method

// `Array.prototype.reverse` method

// `Array.prototype.slice` method

// `Array.prototype.some` method

// `Array.prototype.values` method

// `Array.prototype[@@iterator]` method

// `ArraySpeciesCreate` abstract operation

// `CreateArrayIterator` internal method

// `Date.now` method

// `Function.prototype.bind` method

// `Function.prototype.bind` method implementation

// `IsArray` abstract operation

// `IsRegExp` abstract operation

// `JSON.stringify` method behavior with symbols

// `Map` constructor

// `Object.create` method

// `Object.defineProperties` method

// `Object.defineProperty` method

// `Object.getOwnPropertyDescriptor` method

// `Object.getOwnPropertyDescriptors` method

// `Object.getOwnPropertyNames` method

// `Object.getOwnPropertySymbols` method

// `Object.getPrototypeOf` method

// `Object.keys` method

// `Object.prototype.propertyIsEnumerable` method implementation

// `Object.prototype.toString` method implementation

// `Object.setPrototypeOf` method

// `Promise.allSettled` method

// `Promise.all` method

// `Promise.any` method

// `Promise.prototype.catch` method

// `Promise.prototype.finally` method

// `Promise.prototype.then` method

// `Promise.race` method

// `Promise.reject` method

// `Promise.resolve` method

// `Promise.try` method

// `Reflect.apply` method

// `Reflect.deleteProperty` method

// `Reflect.getPrototypeOf` method

// `Reflect.get` method

// `RequireObjectCoercible` abstract operation

// `SpeciesConstructor` abstract operation

// `String.prototype.at` method

// `String.prototype.codePointAt` method

// `String.prototype.includes` method

// `String.prototype.startsWith` method

// `String.prototype.trim` method

// `String.prototype.{ trimLeft, trimStart }` methods

// `String.prototype.{ trimRight, trimEnd }` methods

// `String.prototype[@@iterator]` method

// `Symbol.asyncDispose` well-known symbol

// `Symbol.asyncIterator` well-known symbol

// `Symbol.dispose` well-known symbol

// `Symbol.for` method

// `Symbol.hasInstance` well-known symbol

// `Symbol.isConcatSpreadable` well-known symbol

// `Symbol.iterator` well-known symbol

// `Symbol.keyFor` method

// `Symbol.matchAll` well-known symbol

// `Symbol.match` well-known symbol

// `Symbol.observable` well-known symbol

// `Symbol.patternMatch` well-known symbol

// `Symbol.prototype[@@toPrimitive]` method

// `Symbol.prototype[@@toStringTag]` property

// `Symbol.replace` well-known symbol

// `Symbol.search` well-known symbol

// `Symbol.species` well-known symbol

// `Symbol.split` well-known symbol

// `Symbol.toPrimitive` well-known symbol

// `Symbol.toStringTag` well-known symbol

// `Symbol.unscopables` well-known symbol

// `Symbol` constructor

// `ToInteger` abstract operation

// `ToLength` abstract operation

// `ToObject` abstract operation

// `ToPrimitive` abstract operation

// `cancel` potentially being assigned

// `hasOwn.call(value, "__await")` to determine if the yielded value is

// `parseFloat` method

// `parseInt` method

// `yield regeneratorRuntime.awrap(x)`, so that the runtime can test

// a string of all valid unicode whitespaces

// accidentally pass it on to the delegate.

// add "__proto__" for Object.getPrototypeOf polyfill

// add .keys, .values, .entries, [@@iterator]

// add [@@species], 23.1.2.2, 23.2.2.2

// add a flag to not completely full polyfills

// add attributes

// add id

// add inline styles

// add missing metadata

// add regexps

// add to index

// add type-in colors

// all object keys, includes non-enumerable and symbols

// all previous Promises have been resolved before calling invoke,

// already have an existing method we want to call, so there's no need

// also ensures that the minifier will not anonymize the function.

// always start the path so we don't fill prior paths

// and .done properties off the next function object itself. This

// and overwrite the input

// and the second argument - flag - preferred type is a string

// any necessary setup in a predictable way. This predictability

// apply filters

// argument that corresponds to a known catch block.

// argumentsList[@@iterator] is %ArrayProto_values%

// array of color definition objects

// aspect ratio - http://www.w3.org/TR/SVG/coords.html#PreserveAspectRatioAttribute

// assignment should always work unless something is misconfigured. Just

// assuming x==0 && y==0 for now

// async functions in terms of async generators, it is especially

// avoid memory leak

// before getting into regexps, try simple matches

// bind timers to global for call from export context

// call invoke immediately, without waiting on a callback to fire,

// call something on iterator step with safe closing on error

// callbacks from appending listeners

// can throw

// can't set metadata to uncaught frozen object

// causes stack overflow when measuring text with gradients

// chance to clean up.

// change existing entry

// check on default Array iterator

// check that a method works with the correct list

// clear and render

// clip

// clockwise

// const kern = 0;

// const midpoint = this.getPointOnLine(

// const width = this.getLineLength(

// constructor polyfill

// contains in native

// context.dispatchException(context.arg) call above.

// context.method was "next", forget context.arg since it has been

// convert l, H, h, V, and v to L

// convert mask to alpha with a fake node

// counter-clockwise

// create collection constructor

// create new view port

// cross-realm fallback

// current iteration.

// cx', cy'

// cx, cy

// define iterator

// delegate iterator, or by modifying context.method and context.arg,

// deoptimization and performance degradation

// deoptimization and serious performance degradation

// do is to check its .name property.

// don't natively support it.

// don't render display=none

// don't render visibility=hidden

// done running, clear

// effects

// element is still the parent of the children

// emd of simple type-in colors

// enqueue has not been called before, then it is important to

// eslint-disable-line no-unused-vars

// eslint-disable-next-line max-len

// eslint-disable-next-line no-new-func

// eslint-disable-next-line no-prototype-builtins

// eslint-disable-next-line no-self-assign

// eslint-disable-next-line no-self-compare

// eslint-disable-next-line no-throw-literal

// eslint-disable-next-line no-undef

// eslint-disable-next-line no-unused-vars

// eslint-disable-next-line no-useless-call,no-throw-literal

// every

// exception, let the outer generator proceed normally. If

// execute code before the first await. Since we implement simple

// executor callback, and why async functions synchronously

// export additional methods

// export native or implementation

// export real prototype methods

// export virtual prototype methods

// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window

// fallback for non-array-like ES3 and non-enumerable old V8 strings

// fallback for not array-like ES3 strings and DOM objects

// fast case

// fill

// fill letter-spacing cache

// filter

// find

// findIndex

// fix Array#{values, @@iterator}.name in V8 / FF

// fix for Safari 12.0 bug

// fix native

// flag - `iterable` interface - 'entries', 'keys', 'values', 'forEach' methods

// font

// for transform, etc.

// from http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html

// frozen object case

// function.sent implementation.

// get next entry

// getting tag from ES6+ `Object.prototype.toString`

// gradient

// handle <use />

// has a stable shape and so hopefully should be cheap to allocate.

// have been (and was previously) designed to take a closure to be

// help

// http://www.w3.org/TR/SVG/filters.html#feColorMatrixElement

// https://bugs.chromium.org/p/chromium/issues/detail?id=830565

// https://bugs.chromium.org/p/v8/issues/detail?id=3443

// https://bugs.webkit.org/show_bug.cgi?id=188794

// https://github.com/mathiasbynens/String.prototype.at

// https://github.com/tc39/proposal-Symbol-description

// https://github.com/tc39/proposal-observable

// https://github.com/tc39/proposal-pattern-matching

// https://github.com/tc39/proposal-promise-allSettled

// https://github.com/tc39/proposal-promise-any

// https://github.com/tc39/proposal-promise-try

// https://github.com/tc39/proposal-using-statement

// https://github.com/zloirock/core-js/issues/475

// https://github.com/zloirock/core-js/issues/640

// https://github.com/zloirock/core-js/issues/677

// https://github.com/zloirock/core-js/issues/679

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028

// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume

// https://tc39.github.io/ecma262/#sec-%arrayiteratorprototype%.next

// https://tc39.github.io/ecma262/#sec-%stringiteratorprototype%.next

// https://tc39.github.io/ecma262/#sec-array.from

// https://tc39.github.io/ecma262/#sec-array.isarray

// https://tc39.github.io/ecma262/#sec-array.prototype-@@iterator

// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables

// https://tc39.github.io/ecma262/#sec-array.prototype.concat

// https://tc39.github.io/ecma262/#sec-array.prototype.entries

// https://tc39.github.io/ecma262/#sec-array.prototype.every

// https://tc39.github.io/ecma262/#sec-array.prototype.fill

// https://tc39.github.io/ecma262/#sec-array.prototype.filter

// https://tc39.github.io/ecma262/#sec-array.prototype.find

// https://tc39.github.io/ecma262/#sec-array.prototype.findIndex

// https://tc39.github.io/ecma262/#sec-array.prototype.foreach

// https://tc39.github.io/ecma262/#sec-array.prototype.includes

// https://tc39.github.io/ecma262/#sec-array.prototype.indexof

// https://tc39.github.io/ecma262/#sec-array.prototype.keys

// https://tc39.github.io/ecma262/#sec-array.prototype.map

// https://tc39.github.io/ecma262/#sec-array.prototype.reduce

// https://tc39.github.io/ecma262/#sec-array.prototype.reduceright

// https://tc39.github.io/ecma262/#sec-array.prototype.reverse

// https://tc39.github.io/ecma262/#sec-array.prototype.slice

// https://tc39.github.io/ecma262/#sec-array.prototype.some

// https://tc39.github.io/ecma262/#sec-array.prototype.values

// https://tc39.github.io/ecma262/#sec-arrayspeciescreate

// https://tc39.github.io/ecma262/#sec-createarrayiterator

// https://tc39.github.io/ecma262/#sec-createmappedargumentsobject

// https://tc39.github.io/ecma262/#sec-createunmappedargumentsobject

// https://tc39.github.io/ecma262/#sec-date.now

// https://tc39.github.io/ecma262/#sec-function.prototype.bind

// https://tc39.github.io/ecma262/#sec-isarray

// https://tc39.github.io/ecma262/#sec-isregexp

// https://tc39.github.io/ecma262/#sec-json-@@tostringtag

// https://tc39.github.io/ecma262/#sec-json.stringify

// https://tc39.github.io/ecma262/#sec-map-objects

// https://tc39.github.io/ecma262/#sec-math-@@tostringtag

// https://tc39.github.io/ecma262/#sec-object.create

// https://tc39.github.io/ecma262/#sec-object.defineproperties

// https://tc39.github.io/ecma262/#sec-object.defineproperty

// https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptor

// https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptors

// https://tc39.github.io/ecma262/#sec-object.getownpropertynames

// https://tc39.github.io/ecma262/#sec-object.getownpropertysymbols

// https://tc39.github.io/ecma262/#sec-object.getprototypeof

// https://tc39.github.io/ecma262/#sec-object.keys

// https://tc39.github.io/ecma262/#sec-object.prototype.propertyisenumerable

// https://tc39.github.io/ecma262/#sec-object.prototype.tostring

// https://tc39.github.io/ecma262/#sec-object.setprototypeof

// https://tc39.github.io/ecma262/#sec-parsefloat-string

// https://tc39.github.io/ecma262/#sec-parseint-string-radix

// https://tc39.github.io/ecma262/#sec-promise.all

// https://tc39.github.io/ecma262/#sec-promise.prototype.catch

// https://tc39.github.io/ecma262/#sec-promise.prototype.finally

// https://tc39.github.io/ecma262/#sec-promise.prototype.then

// https://tc39.github.io/ecma262/#sec-promise.race

// https://tc39.github.io/ecma262/#sec-promise.reject

// https://tc39.github.io/ecma262/#sec-promise.resolve

// https://tc39.github.io/ecma262/#sec-reflect.apply

// https://tc39.github.io/ecma262/#sec-reflect.deleteproperty

// https://tc39.github.io/ecma262/#sec-reflect.get

// https://tc39.github.io/ecma262/#sec-reflect.getprototypeof

// https://tc39.github.io/ecma262/#sec-requireobjectcoercible

// https://tc39.github.io/ecma262/#sec-speciesconstructor

// https://tc39.github.io/ecma262/#sec-string.prototype-@@iterator

// https://tc39.github.io/ecma262/#sec-string.prototype.codepointat

// https://tc39.github.io/ecma262/#sec-string.prototype.includes

// https://tc39.github.io/ecma262/#sec-string.prototype.startswith

// https://tc39.github.io/ecma262/#sec-string.prototype.trim

// https://tc39.github.io/ecma262/#sec-string.prototype.trimend

// https://tc39.github.io/ecma262/#sec-string.prototype.trimstart

// https://tc39.github.io/ecma262/#sec-symbol-constructor

// https://tc39.github.io/ecma262/#sec-symbol.asynciterator

// https://tc39.github.io/ecma262/#sec-symbol.for

// https://tc39.github.io/ecma262/#sec-symbol.hasinstance

// https://tc39.github.io/ecma262/#sec-symbol.isconcatspreadable

// https://tc39.github.io/ecma262/#sec-symbol.iterator

// https://tc39.github.io/ecma262/#sec-symbol.keyfor

// https://tc39.github.io/ecma262/#sec-symbol.match

// https://tc39.github.io/ecma262/#sec-symbol.prototype-@@toprimitive

// https://tc39.github.io/ecma262/#sec-symbol.prototype-@@tostringtag

// https://tc39.github.io/ecma262/#sec-symbol.replace

// https://tc39.github.io/ecma262/#sec-symbol.search

// https://tc39.github.io/ecma262/#sec-symbol.species

// https://tc39.github.io/ecma262/#sec-symbol.split

// https://tc39.github.io/ecma262/#sec-symbol.toprimitive

// https://tc39.github.io/ecma262/#sec-symbol.tostringtag

// https://tc39.github.io/ecma262/#sec-symbol.unscopables

// https://tc39.github.io/ecma262/#sec-tointeger

// https://tc39.github.io/ecma262/#sec-tolength

// https://tc39.github.io/ecma262/#sec-toobject

// https://tc39.github.io/ecma262/#sec-toprimitive

// if a Content Security Policy forbids using Function, but in that case

// if symbol or svg, inherit width/height from me

// if the last angle isn't filled in because we didn't have this point yet ...

// if the target is not iterable or it's an array with the default iterator - use a simple case

// if this node has children, then they own the text

// if we're past the begin time

// if we're past the end time

// important to get this right, even though it requires care.

// in case runtime.js accidentally runs in strict mode, we can escape

// in every case, so we don't have to touch the arguments object. The

// initial values and defaults

// injected easily by `bin/regenerator --include-runtime script.js`.

// instead of the ES6 spec version, we didn't implement @@toPrimitive case

// into the async generator function so it can be handled there.

// invocations of the iterator.

// invoked without arguments, but in all the cases we care about we

// is why the Promise constructor synchronously invokes its

// it, so set the completion value of the entire function to

// iterable DOM collections

// iterator prototype chain incorrectly implement this, causing the Generator

// lgtm [js/useless-assignment-to-local]

// location outside the try/catch block.

// locations where there is no enclosing try statement.

// loop for indefinitely repeating animations

// map

// mask

// meant to be awaited.

// method always terminates the yield* loop.

// minifier not to mangle the names of these two functions.

// modern engines have queueMicrotask method

// move up to me to cache

// need update from animations?

// need update from redraw?

// next index

// no ancestors on style call

// not a text node?

// not necessary to add metadata

// object ID

// object to not be returned from this call. This ensures that doesn't happen.

// objects. For full spec compliance, you may wish to configure your

// of the polyfill.

// of whitespaces and has a correct name

// old engines have not location.origin

// only additional allocation required is the completion record, which

// opacity

// optimisation for array iterators

// optional / simple context binding

// or a finally block) gives us a place to store values thrown from

// or finish the iteration

// or not, return the runtime object so that we can declare the variable

// outer generator.

// patch native Promise.prototype for native async functions

// pattern

// placeholder for future implementation

// problems, please detail your unique predicament in a GitHub issue.

// reassign mask

// record like context.tryEntries[i].completion. This interface could

// reflect point

// regeneratorRuntime in the outer scope, which allows this module to be

// remove # if any

// render 3x3 grid so when we transform there's no white space on edges

// render as temp svg

// render as temporary group

// render as text element

// render as transformed pattern on temporary canvas

// render me using a temporary svg element

// render me using a temporary svg element in symbol cases (http://www.w3.org/TR/SVG/struct.html#UseElement)

// render on me

// reset path length

// result, either by returning a { value, done } result from the

// return a primitive with prefix

// return step by kind

// revert to the last existing entry

// scale

// search through the definitions to find a match

// set canvas size

// set initial value

// setting context.delegate to null, and returning the ContinueSentinel.

// slightly modified version of https://github.com/keeganstreet/specificity/blob/master/specificity.js

// so that results are always delivered in the correct order. If

// so that the async generator function has the opportunity to do

// some

// some getters

// statics

// strange IE + webpack dev server bug - use .call(global)

// strict mode using a global Function call. This could conceivably fail

// strip any leading #

// stroke

// target

// the .value of the Promise<{value,done}> result for the

// the final result produced by the iterator.

// the method takes exactly one argument, since that happens to be true

// the outer generator.

// the proper solution is to fix the accidental strict mode problem. If

// then let that catch block handle the exception normally.

// things simple and return the next function itself.

// this helper broken in `3.4.1-3.4.4`, so we can't use `shared` helper

// throw the exception.

// throws an error in rhino, see https://github.com/mozilla/rhino/issues/346

// to create a new function object. We can even get away with assuming

// to the current frame's queue

// to the native rAF function

// toObject with fallback for non-array-like ES3 strings

// transform

// translate

// transposeX: midpoint.x,

// transposeY: midpoint.y,

// tslint:disable-next-line: no-this-assignment

// tween

// tween color linearly

// tween value linearly

// unified ._invoke helper method.

// validate/cleanup values

// variable length - can't use forEach

// variable specified by delegate.resultName (see delegateYield).

// vertical line

// w/o altered newTarget, lot of arguments case

// w/o altered newTarget, optimization for 0-4 arguments

// with adding support of @@isConcatSpreadable and @@species

// with adding support of @@species

// with altered newTarget, not support built-in constructors

// wrap fetch result

// wrap native Promise#then for native async functions

// you've misconfigured your bundler to force strict mode and applied a

// Δθ

//# sourceMappingURL=SVGPathData.module.js.map

//# sourceMappingURL=data:application/json;charset=utf-8;base64,

//# sourceMappingURL=performance-now.js.map
