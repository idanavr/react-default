/*
   * |     | Unit                           |     | Unit                           |
   * |-----|--------------------------------|-----|--------------------------------|
   * |  a  | AM, PM                         |  A* | Milliseconds in day            |
   * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |
   * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |
   * |  d  | Day of month                   |  D  | Day of year                    |
   * |  e  | Local day of week              |  E  | Day of week                    |
   * |  f  |                                |  F* | Day of week in month           |
   * |  g* | Modified Julian day            |  G  | Era                            |
   * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |
   * |  i! | ISO day of week                |  I! | ISO week of year               |
   * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |
   * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |
   * |  l* | (deprecated)                   |  L  | Stand-alone month              |
   * |  m  | Minute                         |  M  | Month                          |
   * |  n  |                                |  N  |                                |
   * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |
   * |  p! | Long localized time            |  P! | Long localized date            |
   * |  q  | Stand-alone quarter            |  Q  | Quarter                        |
   * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |
   * |  s  | Second                         |  S  | Fraction of second             |
   * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |
   * |  u  | Extended year                  |  U* | Cyclic year                    |
   * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |
   * |  w  | Local week of year             |  W* | Week of month                  |
   * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |
   * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |
   * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |
   *
   * Letters marked by * are not implemented but reserved by Unicode standard.
   *
   * Letters marked by ! are non-standard, but implemented by date-fns:
   * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)
   * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,
   *   i.e. 7 for Sunday, 1 for Monday, etc.
   * - `I` is ISO week of year, as opposed to `w` which is local week of year.
   * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.
   *   `R` is supposed to be used in conjunction with `I` and `i`
   *   for universal ISO week-numbering date, whereas
   *   `Y` is supposed to be used in conjunction with `w` and `e`
   *   for week-numbering date specific to the locale.
   * - `P` is long localized date format
   * - `p` is long localized time format
   */

/*
  connect is a facade over connectAdvanced. It turns its args into a compatible
  selectorFactory, which has the signature:

    (dispatch, options) => (nextState, nextOwnProps) => nextFinalProps
  
  connect passes its args to connectAdvanced as options, which will in turn pass them to
  selectorFactory each time a Connect component instance is instantiated or hot reloaded.

  selectorFactory returns a final props selector from its mapStateToProps,
  mapStateToPropsFactories, mapDispatchToProps, mapDispatchToPropsFactories, mergeProps,
  mergePropsFactories, and pure args.

  The resulting final props selector is called by the Connect component instance whenever
  it receives new props or store state.
 */

/*
  selectorFactory is a func that is responsible for returning the selector function used to
  compute new props from state, props, and dispatch. For example:
     export default connectAdvanced((dispatch, options) => (state, props) => ({
      thing: state.things[props.thingId],
      saveThing: fields => dispatch(actionCreators.saveThing(props.thingId, fields)),
    }))(YourComponent)
   Access to dispatch is provided to the factory so selectorFactories can bind actionCreators
  outside of their selector as an optimization. Options passed to connectAdvanced are passed to
  the selectorFactory, along with displayName and WrappedComponent, as the second argument.
   Note that selectorFactory is responsible for all caching/memoization of inbound and outbound
  props. Do not use connectAdvanced directly without memoizing results between calls to your
  selector, otherwise the Connect component will re-render on every state or props change.
*/

/*
 * Helper to detect borders of a given element
 * @method
 * @memberof Popper.Utils
 * @param {CSSStyleDeclaration} styles
 * Result of `getStyleComputedProperty` on the given element
 * @param {String} axis - `x` or `y`
 * @return {number} borders - The borders size of the given axis
 */

/*
 * Sum or subtract the element scroll values (left and top) from a given rect object
 * @method
 * @memberof Popper.Utils
 * @param {Object} rect - Rect object you want to change
 * @param {HTMLElement} element - The element from the function reads the scroll values
 * @param {Boolean} subtract - set to true if you want to subtract the scroll values
 * @return {Object} rect - The modifier rect object
 */

/*
 * This is a dummy function to check if the function name has been altered by minification.
 * If the function has been minified and NODE_ENV !== 'production', warn the user.
 */

/*
 * |     | Unit                           |     | Unit                           |
 * |-----|--------------------------------|-----|--------------------------------|
 * |  a  | AM, PM                         |  A* |                                |
 * |  d  | Day of month                   |  D  |                                |
 * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |
 * |  m  | Minute                         |  M  | Month                          |
 * |  s  | Second                         |  S  | Fraction of second             |
 * |  y  | Year (abs)                     |  Y  |                                |
 *
 * Letters marked by * are not implemented but reserved by Unicode standard.
 */

/*
 * |     | Unit                           |     | Unit                           |
 * |-----|--------------------------------|-----|--------------------------------|
 * |  a  | AM, PM                         |  A* | Milliseconds in day            |
 * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |
 * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |
 * |  d  | Day of month                   |  D  | Day of year                    |
 * |  e  | Local day of week              |  E  | Day of week                    |
 * |  f  |                                |  F* | Day of week in month           |
 * |  g* | Modified Julian day            |  G  | Era                            |
 * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |
 * |  i! | ISO day of week                |  I! | ISO week of year               |
 * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |
 * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |
 * |  l* | (deprecated)                   |  L  | Stand-alone month              |
 * |  m  | Minute                         |  M  | Month                          |
 * |  n  |                                |  N  |                                |
 * |  o! | Ordinal number modifier        |  O* | Timezone (GMT)                 |
 * |  p  |                                |  P  |                                |
 * |  q  | Stand-alone quarter            |  Q  | Quarter                        |
 * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |
 * |  s  | Second                         |  S  | Fraction of second             |
 * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |
 * |  u  | Extended year                  |  U* | Cyclic year                    |
 * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |
 * |  w  | Local week of year             |  W* | Week of month                  |
 * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |
 * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |
 * |  z* | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |
 *
 * Letters marked by * are not implemented but reserved by Unicode standard.
 *
 * Letters marked by ! are non-standard, but implemented by date-fns:
 * - `o` modifies the previous token to turn it into an ordinal (see `parse` docs)
 * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,
 *   i.e. 7 for Sunday, 1 for Monday, etc.
 * - `I` is ISO week of year, as opposed to `w` which is local week of year.
 * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.
 *   `R` is supposed to be used in conjunction with `I` and `i`
 *   for universal ISO week-numbering date, whereas
 *   `Y` is supposed to be used in conjunction with `w` and `e`
 *   for week-numbering date specific to the locale.
 */

/*
 Modernizr 3.0.0pre (Custom Build) | MIT
*/

/*
object-assign
(c) Sindre Sorhus
@license MIT
*/

/* .SheetsRegistry */

/* .create */

/* .darken */

/* .default */

/* .default.Provider */

/* .default.muiName */

/* .duration.enteringScreen */

/* .duration.leavingScreen */

/* .fade */

/* .getTransitionProps */

/* .handleBreakpoints */

/* .isAdornedStart */

/* .isFilled */

/* .keys.indexOf */

/* .lighten */

/* .reflow */

/* .useFormControl */

/* 0 */

/* 1 */

/* 10 */

/* 11 */

/* 12 */

/* 13 */

/* 14 */

/* 15 */

/* 16 */

/* 2 */

/* 3 */

/* 4 */

/* 5 */

/* 6 */

/* 7 */

/* 8 */

/* 9 */

/* = width / sqrt(2) = (length of the hypotenuse) */

/* Ignore */

/* Provider */

/* Pseudo-class applied to child elements if `disabled={true}`. */

/* Pseudo-class applied to the ButtonBase root element if the action area is keyboard focused. */

/* Pseudo-class applied to the ButtonBase root element if the button is keyboard focused. */

/* Pseudo-class applied to the `Typography` component if `active={true}`. */

/* Pseudo-class applied to the `Typography` component if `completed={true}`. */

/* Pseudo-class applied to the `component`'s `focusVisibleClassName` prop if `button={true}`. */

/* Pseudo-class applied to the asterisk element. */

/* Pseudo-class applied to the inner `component` element if `disabled={true}`. */

/* Pseudo-class applied to the internal SwitchBase component's disabled class. */

/* Pseudo-class applied to the internal `SwitchBase` component's `checked` class. */

/* Pseudo-class applied to the root and icon container and `Typography` if `alternativeLabel={true}`. */

/* Pseudo-class applied to the root and thumb element if `disabled={true}`. */

/* Pseudo-class applied to the root element and `Typography` component if `disabled={true}`. */

/* Pseudo-class applied to the root element and `Typography` component if `error={true}`. */

/* Pseudo-class applied to the root element if `active={true}`. */

/* Pseudo-class applied to the root element if `checked={true}`. */

/* Pseudo-class applied to the root element if `completed={true}`. */

/* Pseudo-class applied to the root element if `disabled={true}` (controlled by the Tabs component). */

/* Pseudo-class applied to the root element if `disabled={true}`. */

/* Pseudo-class applied to the root element if `error={true}`. */

/* Pseudo-class applied to the root element if `filled={true}`. */

/* Pseudo-class applied to the root element if `focused={true}`. */

/* Pseudo-class applied to the root element if `hover={true}`. */

/* Pseudo-class applied to the root element if `indeterminate={true}`. */

/* Pseudo-class applied to the root element if `orientation="vertical"`. */

/* Pseudo-class applied to the root element if `required={true}`. */

/* Pseudo-class applied to the root element if `selected={true}` (controlled by the Tabs component). */

/* Pseudo-class applied to the root element if `selected={true}`. */

/* Pseudo-class applied to the root element if `showLabel={false}` and not selected. */

/* Pseudo-class applied to the root element if keyboard focused. */

/* Pseudo-class applied to the root element if selected. */

/* Pseudo-class applied to the root element if the component is focused. */

/* Pseudo-class applied to the root element if the link is keyboard focused. */

/* Pseudo-class applied to the root element, children wrapper element and `IconButton` component if `expanded={true}`. */

/* Pseudo-class applied to the select component `disabled` class. */

/* Pseudo-class applied to the thumb element if it's active. */

/* Pseudo-class applied to the thumb element if keyboard focused. */

/* Pseudo-class to the badge `span` element if `invisible={true}`. */

/* RuleList */

/* Styles applied if the adornment is used inside <FormControl hiddenLabel />. */

/* Styles applied if the adornment is used inside <FormControl margin="dense" />. */

/* Styles applied to a dot if `variant="dots"` and this is the active step. */

/* Styles applied to an `img` element child, if needed to ensure it covers the tile. */

/* Styles applied to each dot if `variant="dots"`. */

/* Styles applied to the (normally root) `component` element. May be wrapped by a `container`. */

/* Styles applied to the Linear Progress component if `variant="progress"`. */

/* Styles applied to the MenuItem component. */

/* Styles applied to the Popper component if `arrow={true}`. */

/* Styles applied to the Popper component if `interactive={true}`. */

/* Styles applied to the Popper component. */

/* Styles applied to the SVG text element. */

/* Styles applied to the Select component `icon` class. */

/* Styles applied to the Select component `select` class. */

/* Styles applied to the Select component root element. */

/* Styles applied to the Toolbar component. */

/* Styles applied to the Transition component. */

/* Styles applied to the `ButtonBase` touch-ripple. */

/* Styles applied to the `IconButton` component when `expandIcon` is supplied. */

/* Styles applied to the `InputBase` component. */

/* Styles applied to the `List` component via `MenuList`. */

/* Styles applied to the `Modal` component. */

/* Styles applied to the `NotchedOutline` element. */

/* Styles applied to the `Paper` component if `anchor="bottom"` and `variant` is not "temporary". */

/* Styles applied to the `Paper` component if `anchor="bottom"`. */

/* Styles applied to the `Paper` component if `anchor="left"` and `variant` is not "temporary". */

/* Styles applied to the `Paper` component if `anchor="left"`. */

/* Styles applied to the `Paper` component if `anchor="right"` and `variant` is not "temporary". */

/* Styles applied to the `Paper` component if `anchor="right"`. */

/* Styles applied to the `Paper` component if `anchor="top"` and `variant` is not "temporary". */

/* Styles applied to the `Paper` component if `anchor="top"`. */

/* Styles applied to the `Paper` component if `fullScreen={true}`. */

/* Styles applied to the `Paper` component if `fullWidth={true}`. */

/* Styles applied to the `Paper` component if `maxWidth="lg"`. */

/* Styles applied to the `Paper` component if `maxWidth="md"`. */

/* Styles applied to the `Paper` component if `maxWidth="sm"`. */

/* Styles applied to the `Paper` component if `maxWidth="xl"`. */

/* Styles applied to the `Paper` component if `maxWidth="xs"`. */

/* Styles applied to the `Paper` component if `maxWidth=false`. */

/* Styles applied to the `Paper` component if `scroll="body"`. */

/* Styles applied to the `Paper` component if `scroll="paper"`. */

/* Styles applied to the `Paper` component. */

/* Styles applied to the `ScrollButtonComponent` component if `scrollButtons="auto"` or scrollButtons="desktop"`. */

/* Styles applied to the `ScrollButtonComponent` component. */

/* Styles applied to the `TabIndicator` component. */

/* Styles applied to the `Typography` component which wraps `children`. */

/* Styles applied to the `Typography` components if dense. */

/* Styles applied to the `Typography` components if primary and secondary are set. */

/* Styles applied to the `avatar` element if `color="primary"`. */

/* Styles applied to the `avatar` element if `color="secondary"`. */

/* Styles applied to the `avatar` element if `size="small"`. */

/* Styles applied to the `avatar` element. */

/* Styles applied to the `circle` svg path if `disableShrink={true}`. */

/* Styles applied to the `circle` svg path if `variant="indeterminate"`. */

/* Styles applied to the `circle` svg path if `variant="static"`. */

/* Styles applied to the `circle` svg path. */

/* Styles applied to the `component` element if `alignItems="flex-start"`. */

/* Styles applied to the `component` element if `children` includes `ListItemSecondaryAction`. */

/* Styles applied to the `component` element if dense. */

/* Styles applied to the `container` element if `children` includes `ListItemSecondaryAction`. */

/* Styles applied to the `deleteIcon` element if `size="small"`. */

/* Styles applied to the `deleteIcon` element. */

/* Styles applied to the `div` element that wraps the children. */

/* Styles applied to the `icon` and `label`'s wrapper element. */

/* Styles applied to the `icon` container element. */

/* Styles applied to the `icon` element if `color="primary"`. */

/* Styles applied to the `icon` element if `color="secondary"`. */

/* Styles applied to the `icon` element if `size="small"`. */

/* Styles applied to the `icon` element. */

/* Styles applied to the `input` element if `disableAnimation={false}`. */

/* Styles applied to the `input` element if `endAdornment` is provided. */

/* Styles applied to the `input` element if `hiddenLabel={true}`. */

/* Styles applied to the `input` element if `margin="dense"`. */

/* Styles applied to the `input` element if `multiline={true}`. */

/* Styles applied to the `input` element if `shrink={true}`. */

/* Styles applied to the `input` element if `startAdornment` is provided. */

/* Styles applied to the `input` element if `type="search"`. */

/* Styles applied to the `input` element. */

/* Styles applied to the `input` if in `<FormControl hiddenLabel />`. */

/* Styles applied to the `svg` element. */

/* Styles applied to the action element. */

/* Styles applied to the action wrapper element if `action` is provided. */

/* Styles applied to the actionIcon if `actionPosition="left"`. */

/* Styles applied to the actionIcon if supplied. */

/* Styles applied to the additional bar element if `variant="buffer"` and `color="primary"`. */

/* Styles applied to the additional bar element if `variant="buffer"` and `color="secondary"`. */

/* Styles applied to the additional bar element if `variant="buffer"`. */

/* Styles applied to the arrow element. */

/* Styles applied to the asterisk element. */

/* Styles applied to the avatar element. */

/* Styles applied to the badge `span` element. */

/* Styles applied to the bar elements if `color="primary"`; bar2 if `variant` not "buffer". */

/* Styles applied to the bar elements if `color="secondary"`; bar2 if `variant` not "buffer". */

/* Styles applied to the bar1 element if `variant="buffer"`. */

/* Styles applied to the bar1 element if `variant="determinate"`. */

/* Styles applied to the bar1 element if `variant="indeterminate or query"`. */

/* Styles applied to the bar2 element if `variant="buffer"`. */

/* Styles applied to the bar2 element if `variant="indeterminate or query"`. */

/* Styles applied to the caption Typography components if `variant="caption"`. */

/* Styles applied to the children container element. */

/* Styles applied to the children if `orientation="horizontal"`. */

/* Styles applied to the children if `orientation="vertical"`. */

/* Styles applied to the children if `variant="contained"` and `color="primary"`. */

/* Styles applied to the children if `variant="contained"` and `color="secondary"`. */

/* Styles applied to the children if `variant="contained"` and `orientation="horizontal"`. */

/* Styles applied to the children if `variant="contained"` and `orientation="vertical"`. */

/* Styles applied to the children if `variant="contained"`. */

/* Styles applied to the children if `variant="outlined"` and `color="primary"`. */

/* Styles applied to the children if `variant="outlined"` and `color="secondary"`. */

/* Styles applied to the children if `variant="outlined"` and `orientation="horizontal"`. */

/* Styles applied to the children if `variant="outlined"` and `orientation="vertical"`. */

/* Styles applied to the children if `variant="outlined"`. */

/* Styles applied to the children if `variant="text"` and `color="primary"`. */

/* Styles applied to the children if `variant="text"` and `color="secondary"`. */

/* Styles applied to the children if `variant="text"` and `orientation="horizontal"`. */

/* Styles applied to the children if `variant="text"` and `orientation="vertical"`. */

/* Styles applied to the children if `variant="text"`. */

/* Styles applied to the children wrapper element. */

/* Styles applied to the children. */

/* Styles applied to the container element if `actionPosition="left"`. */

/* Styles applied to the container element if `actionPosition="right"`. */

/* Styles applied to the container element if `scroll="body"`. */

/* Styles applied to the container element if `scroll="paper"`. */

/* Styles applied to the container element when the transition has entered. */

/* Styles applied to the container element when the transition has exited and `collapsedHeight` != 0px. */

/* Styles applied to the container element which wraps `Typography` and `optional`. */

/* Styles applied to the container element. */

/* Styles applied to the content wrapper element. */

/* Styles applied to the deleteIcon element if `color="primary"` and `variant="default"`. */

/* Styles applied to the deleteIcon element if `color="primary"` and `variant="outlined"`. */

/* Styles applied to the deleteIcon element if `color="secondary"` and `variant="default"`. */

/* Styles applied to the deleteIcon element if `color="secondary"` and `variant="outlined"`. */

/* Styles applied to the dots container if `variant="dots"`. */

/* Styles applied to the endIcon element if supplied. */

/* Styles applied to the fallback icon */

/* Styles applied to the flex container element if `centered={true}` & `!variant="scrollable"`. */

/* Styles applied to the flex container element if `orientation="vertical"`. */

/* Styles applied to the flex container element. */

/* Styles applied to the icon component if `direction="asc"`. */

/* Styles applied to the icon component if `direction="desc"`. */

/* Styles applied to the icon component if `variant="filled"`. */

/* Styles applied to the icon component if `variant="outlined"`. */

/* Styles applied to the icon component if the popup is open. */

/* Styles applied to the icon component. */

/* Styles applied to the icon element if supplied and `size="large"`. */

/* Styles applied to the icon element if supplied and `size="medium"`. */

/* Styles applied to the icon element if supplied and `size="small"`. */

/* Styles applied to the img element if either `src` or `srcSet` is defined. */

/* Styles applied to the inner `component` element if `button={true}`. */

/* Styles applied to the inner `component` element if `disableGutters={false}`. */

/* Styles applied to the inner `component` element if `divider={true}`. */

/* Styles applied to the inner wrapper element. */

/* Styles applied to the internal SwitchBase component's input element. */

/* Styles applied to the internal SwitchBase component's root element if `color="primary"`. */

/* Styles applied to the internal SwitchBase component's root element if `color="secondary"`. */

/* Styles applied to the internal `Ripple` components `childLeaving` class. */

/* Styles applied to the internal `Ripple` components `childPulsate` class. */

/* Styles applied to the internal `Ripple` components `child` class. */

/* Styles applied to the internal `Ripple` components `ripplePulsate` class. */

/* Styles applied to the internal `Ripple` components `rippleVisible` class. */

/* Styles applied to the internal `Ripple` components `ripple` class. */

/* Styles applied to the internal `SwitchBase` component's `root` class. */

/* Styles applied to the internal `TablePaginationActions` component. */

/* Styles applied to the label `span` element if `size="small"`. */

/* Styles applied to the label `span` element. */

/* Styles applied to the label's Typography component. */

/* Styles applied to the label's span element. */

/* Styles applied to the layered bar1 and bar2 elements. */

/* Styles applied to the legend element is notched. */

/* Styles applied to the legend element when `labelWidth` is provided. */

/* Styles applied to the legend element. */

/* Styles applied to the li element. */

/* Styles applied to the line element. */

/* Styles applied to the mark element if active (depending on the value). */

/* Styles applied to the mark element. */

/* Styles applied to the mark label element if active (depending on the value). */

/* Styles applied to the mark label element. */

/* Styles applied to the message wrapper element. */

/* Styles applied to the ol element. */

/* Styles applied to the outer wrapper element. */

/* Styles applied to the overlay that covers the action area when it is keyboard focused. */

/* Styles applied to the primary `Typography` component. */

/* Styles applied to the rail element. */

/* Styles applied to the root and bar2 element if `color="primary"`; bar2 if `variant="buffer"`. */

/* Styles applied to the root and bar2 elements if `color="secondary"`; bar2 if `variant="buffer"`. */

/* Styles applied to the root element if `absolute={true}`. */

/* Styles applied to the root element if `align="center"`. */

/* Styles applied to the root element if `align="justify"`. */

/* Styles applied to the root element if `align="left"`. */

/* Styles applied to the root element if `align="right"`. */

/* Styles applied to the root element if `alignContent="center"`. */

/* Styles applied to the root element if `alignContent="flex-end"`. */

/* Styles applied to the root element if `alignContent="flex-start"`. */

/* Styles applied to the root element if `alignContent="space-around"`. */

/* Styles applied to the root element if `alignContent="space-between"`. */

/* Styles applied to the root element if `alignItems="baseline"`. */

/* Styles applied to the root element if `alignItems="center"`. */

/* Styles applied to the root element if `alignItems="flex-end"`. */

/* Styles applied to the root element if `alignItems="flex-start"`. */

/* Styles applied to the root element if `alternativeLabel={true}`. */

/* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'center' }}`. */

/* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'left' }} overlap="circle"`. */

/* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'left' }} overlap="rectangle"`. */

/* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'left' }}`. */

/* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'right' }} overlap="circle"`. */

/* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'right' }} overlap="rectangle"`. */

/* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'right' }}`. */

/* Styles applied to the root element if `anchorOrigin={{ 'top', 'center' }}`. */

/* Styles applied to the root element if `anchorOrigin={{ 'top', 'left' }} overlap="circle"`. */

/* Styles applied to the root element if `anchorOrigin={{ 'top', 'left' }} overlap="rectangle"`. */

/* Styles applied to the root element if `anchorOrigin={{ 'top', 'left' }}`. */

/* Styles applied to the root element if `anchorOrigin={{ 'top', 'right' }} overlap="circle"`. */

/* Styles applied to the root element if `anchorOrigin={{ 'top', 'right' }} overlap="rectangle"`. */

/* Styles applied to the root element if `anchorOrigin={{ 'top', 'right' }}`. */

/* Styles applied to the root element if `color="action"`. */

/* Styles applied to the root element if `color="default"`. */

/* Styles applied to the root element if `color="disabled"`. */

/* Styles applied to the root element if `color="error"`. */

/* Styles applied to the root element if `color="inherit"`. */

/* Styles applied to the root element if `color="primary"`. */

/* Styles applied to the root element if `color="secondary"`. */

/* Styles applied to the root element if `color="textPrimary"`. */

/* Styles applied to the root element if `color="textSecondary"`. */

/* Styles applied to the root element if `color="transparent"`. */

/* Styles applied to the root element if `component="button"`. */

/* Styles applied to the root element if `component="picture or img"`. */

/* Styles applied to the root element if `component="video, audio, picture, iframe, or img"`. */

/* Styles applied to the root element if `container={true}`. */

/* Styles applied to the root element if `context.table.stickyHeader={true}`. */

/* Styles applied to the root element if `direction="column"`. */

/* Styles applied to the root element if `direction="column-reverse"`. */

/* Styles applied to the root element if `direction="row-reverse"`. */

/* Styles applied to the root element if `disableElevation={true}`. */

/* Styles applied to the root element if `disableGutters={false}`. */

/* Styles applied to the root element if `disableGutters={true}`. */

/* Styles applied to the root element if `disablePadding={false}`. */

/* Styles applied to the root element if `disablePointerEvents=true`. */

/* Styles applied to the root element if `disableSpacing={false}`. */

/* Styles applied to the root element if `disableSticky={false}`. */

/* Styles applied to the root element if `disableUnderline={false}`. */

/* Styles applied to the root element if `disabled={true}`. */

/* Styles applied to the root element if `display="block"`. */

/* Styles applied to the root element if `display="inline"`. */

/* Styles applied to the root element if `dividers={true}`. */

/* Styles applied to the root element if `edge="end"`. */

/* Styles applied to the root element if `edge="start"`. */

/* Styles applied to the root element if `endAdornment` is provided. */

/* Styles applied to the root element if `expanded={true}`. */

/* Styles applied to the root element if `fixed={true}`. */

/* Styles applied to the root element if `flexItem={true}`. */

/* Styles applied to the root element if `fontSize="inherit"`. */

/* Styles applied to the root element if `fontSize="large"`. */

/* Styles applied to the root element if `fontSize="small"`. */

/* Styles applied to the root element if `fullWidth={true}` (controlled by the Tabs component). */

/* Styles applied to the root element if `fullWidth={true}`. */

/* Styles applied to the root element if `gutterBottom={true}`. */

/* Styles applied to the root element if `inset={true}`. */

/* Styles applied to the root element if `invisible={true}`. */

/* Styles applied to the root element if `item={true}`. */

/* Styles applied to the root element if `justify="center"`. */

/* Styles applied to the root element if `justify="flex-end"`. */

/* Styles applied to the root element if `justify="space-around"`. */

/* Styles applied to the root element if `justify="space-between"`. */

/* Styles applied to the root element if `justify="space-evenly"`. */

/* Styles applied to the root element if `labelPlacement="bottom"`. */

/* Styles applied to the root element if `labelPlacement="start"`. */

/* Styles applied to the root element if `labelPlacement="top"`. */

/* Styles applied to the root element if `last={true}` (controlled by `Step`). */

/* Styles applied to the root element if `light={true}`. */

/* Styles applied to the root element if `margin="dense"`. */

/* Styles applied to the root element if `margin="normal"`. */

/* Styles applied to the root element if `marks` is provided with at least one label. */

/* Styles applied to the root element if `maxWidth="lg"`. */

/* Styles applied to the root element if `maxWidth="md"`. */

/* Styles applied to the root element if `maxWidth="sm"`. */

/* Styles applied to the root element if `maxWidth="xl"`. */

/* Styles applied to the root element if `maxWidth="xs"`. */

/* Styles applied to the root element if `multiline={true}`. */

/* Styles applied to the root element if `nowrap={true}`. */

/* Styles applied to the root element if `onClick` and `color="primary"` is defined or `clickable={true}`. */

/* Styles applied to the root element if `onClick` and `color="secondary"` is defined or `clickable={true}`. */

/* Styles applied to the root element if `onClick` is defined or `clickable={true}`. */

/* Styles applied to the root element if `onDelete` and `color="primary"` is defined. */

/* Styles applied to the root element if `onDelete` and `color="secondary"` is defined. */

/* Styles applied to the root element if `onDelete` is defined. */

/* Styles applied to the root element if `orientation="horizontal"`. */

/* Styles applied to the root element if `orientation="vertical"`. */

/* Styles applied to the root element if `padding="checkbox"`. */

/* Styles applied to the root element if `padding="none"`. */

/* Styles applied to the root element if `paragraph={true}`. */

/* Styles applied to the root element if `position="absolute"`. */

/* Styles applied to the root element if `position="bottom"`. */

/* Styles applied to the root element if `position="end"`. */

/* Styles applied to the root element if `position="fixed"`. */

/* Styles applied to the root element if `position="relative"`. */

/* Styles applied to the root element if `position="start"`. */

/* Styles applied to the root element if `position="static"`. */

/* Styles applied to the root element if `position="sticky"`. */

/* Styles applied to the root element if `position="top"`. */

/* Styles applied to the root element if `row={true}`. */

/* Styles applied to the root element if `selected={true}`. */

/* Styles applied to the root element if `size="large"` and `variant="contained"`. */

/* Styles applied to the root element if `size="large"` and `variant="outlined"`. */

/* Styles applied to the root element if `size="large"` and `variant="text"`. */

/* Styles applied to the root element if `size="large"`. */

/* Styles applied to the root element if `size="medium"``. */

/* Styles applied to the root element if `size="small"` and `variant="contained"`. */

/* Styles applied to the root element if `size="small"` and `variant="outlined"`. */

/* Styles applied to the root element if `size="small"` and `variant="text"`. */

/* Styles applied to the root element if `size="small"`. */

/* Styles applied to the root element if `size="small"``. */

/* Styles applied to the root element if `square={false}`. */

/* Styles applied to the root element if `startAdornment` is provided. */

/* Styles applied to the root element if `stickyHeader={true}`. */

/* Styles applied to the root element if `titlePosition="bottom"`. */

/* Styles applied to the root element if `titlePosition="top"`. */

/* Styles applied to the root element if `underline="always"`. */

/* Styles applied to the root element if `underline="hover"`. */

/* Styles applied to the root element if `underline="none"`. */

/* Styles applied to the root element if `variant="body"` or `context.table.body`. */

/* Styles applied to the root element if `variant="body1"`. */

/* Styles applied to the root element if `variant="body2"`. */

/* Styles applied to the root element if `variant="buffer"`. */

/* Styles applied to the root element if `variant="button"`. */

/* Styles applied to the root element if `variant="caption"`. */

/* Styles applied to the root element if `variant="circle"`. */

/* Styles applied to the root element if `variant="contained"` and `color="primary"`. */

/* Styles applied to the root element if `variant="contained"` and `color="secondary"`. */

/* Styles applied to the root element if `variant="contained"`. */

/* Styles applied to the root element if `variant="dense"`. */

/* Styles applied to the root element if `variant="determinate"`. */

/* Styles applied to the root element if `variant="dot"`. */

/* Styles applied to the root element if `variant="extended"`. */

/* Styles applied to the root element if `variant="filled"` or `variant="outlined"`. */

/* Styles applied to the root element if `variant="filled"`. */

/* Styles applied to the root element if `variant="footer"` or `context.table.footer`. */

/* Styles applied to the root element if `variant="h1"`. */

/* Styles applied to the root element if `variant="h2"`. */

/* Styles applied to the root element if `variant="h3"`. */

/* Styles applied to the root element if `variant="h4"`. */

/* Styles applied to the root element if `variant="h5"`. */

/* Styles applied to the root element if `variant="h6"`. */

/* Styles applied to the root element if `variant="head"` or `context.table.head`. */

/* Styles applied to the root element if `variant="indeterminate"`. */

/* Styles applied to the root element if `variant="inset"`. */

/* Styles applied to the root element if `variant="middle"`. */

/* Styles applied to the root element if `variant="outlined"` and `color="primary"`. */

/* Styles applied to the root element if `variant="outlined"` and `color="secondary"`. */

/* Styles applied to the root element if `variant="outlined"`. */

/* Styles applied to the root element if `variant="overline"`. */

/* Styles applied to the root element if `variant="permanent or persistent"`. */

/* Styles applied to the root element if `variant="query"`. */

/* Styles applied to the root element if `variant="regular"`. */

/* Styles applied to the root element if `variant="rounded"`. */

/* Styles applied to the root element if `variant="square"`. */

/* Styles applied to the root element if `variant="srOnly"`. Only accessible to screen readers. */

/* Styles applied to the root element if `variant="static"`. */

/* Styles applied to the root element if `variant="subtitle1"`. */

/* Styles applied to the root element if `variant="subtitle2"`. */

/* Styles applied to the root element if `variant="text"` and `color="primary"`. */

/* Styles applied to the root element if `variant="text"` and `color="secondary"`. */

/* Styles applied to the root element if `variant="text"`. */

/* Styles applied to the root element if `wrap="nowrap"`. */

/* Styles applied to the root element if `wrap="reverse"`. */

/* Styles applied to the root element if `wrapped={true}`. */

/* Styles applied to the root element if `zeroMinWidth={true}`. */

/* Styles applied to the root element if a `subheader` is provided. */

/* Styles applied to the root element if a `subtitle` is provided. */

/* Styles applied to the root element if both `icon` and `label` are provided. */

/* Styles applied to the root element if color secondary. */

/* Styles applied to the root element if dense. */

/* Styles applied to the root element if not `src` or `srcSet`. */

/* Styles applied to the root element if table variant="footer". */

/* Styles applied to the root element if table variant="head". */

/* Styles applied to the root element if the `Modal` has exited. */

/* Styles applied to the root element if the color is secondary. */

/* Styles applied to the root element if the component is a descendant of `FormControl`. */

/* Styles applied to the root element if the component is focused. */

/* Styles applied to the root element if the parent [`Tabs`](/api/tabs/) has `textColor="inherit"`. */

/* Styles applied to the root element if the parent [`Tabs`](/api/tabs/) has `textColor="primary"`. */

/* Styles applied to the root element if the parent [`Tabs`](/api/tabs/) has `textColor="secondary"`. */

/* Styles applied to the root element when the parent `ListItem` uses `alignItems="flex-start"`. */

/* Styles applied to the root element. */

/* Styles applied to the secondary `Typography` component. */

/* Styles applied to the select component `root` class. */

/* Styles applied to the select component `selectMenu` class. */

/* Styles applied to the select component `select` class. */

/* Styles applied to the select component if `variant="filled"`. */

/* Styles applied to the select component if `variant="outlined"`. */

/* Styles applied to the separator element. */

/* Styles applied to the spacer element. */

/* Styles applied to the span element that wraps the children. */

/* Styles applied to the span element that wraps the icon and label. */

/* Styles applied to the startIcon element if supplied. */

/* Styles applied to the subheader Typography element. */

/* Styles applied to the subtitle container element. */

/* Styles applied to the tablist element if `!variant="scrollable"`. */

/* Styles applied to the tablist element if `variant="scrollable"`. */

/* Styles applied to the tablist element. */

/* Styles applied to the thumb element if `color="primary"`. */

/* Styles applied to the thumb element if `color="secondary"`. */

/* Styles applied to the thumb element. */

/* Styles applied to the thumb label element. */

/* Styles applied to the title Typography element. */

/* Styles applied to the title and subtitle container element. */

/* Styles applied to the title container element. */

/* Styles applied to the tooltip (label wrapper) element if `arrow={true}`. */

/* Styles applied to the tooltip (label wrapper) element if `placement` contains "bottom". */

/* Styles applied to the tooltip (label wrapper) element if `placement` contains "left". */

/* Styles applied to the tooltip (label wrapper) element if `placement` contains "right". */

/* Styles applied to the tooltip (label wrapper) element if `placement` contains "top". */

/* Styles applied to the tooltip (label wrapper) element if the tooltip is opened by touch. */

/* Styles applied to the tooltip (label wrapper) element. */

/* Styles applied to the track element if `track="inverted"`. */

/* Styles applied to the track element if `track={false}`. */

/* Styles applied to the track element. */

/* Styles applied to the underlying native input component. */

/* Styles used to create the thumb passed to the internal `SwitchBase` component `icon` prop. */

/* StylesContext */

/* Sunday */

/* TouchRipple is only needed client-side, x2 boost on the server. */

/* applyMiddleware */

/* applyMiddleware.apply */

/* ariaHidden */

/* bindActionCreators */

/* binding */

/* combineReducers */

/* compose */

/* connect */

/* createRule */

/* createStore */

/* createUnarySpacing */

/* darken */

/* decomposeColor */

/* default */

/* default.300 */

/* default.50 */

/* default.500 */

/* default.700 */

/* default.800 */

/* default.A200 */

/* default.A400 */

/* default.A700 */

/* default.Provider */

/* default.apply */

/* default.styles */

/* default.white */

/* duration */

/* duration.enteringScreen */

/* duration.leavingScreen */

/* duration.standard */

/* easing */

/* emphasize */

/* eslint no-undefined: 0 */

/* eslint react/display-name:0 */

/* eslint-disable */

/* eslint-disable @typescript-eslint/no-unused-vars */

/* eslint-disable consistent-return, jsx-a11y/no-noninteractive-tabindex, camelcase */

/* eslint-disable import/export */

/* eslint-disable import/no-unresolved */

/* eslint-disable jsx-a11y/aria-role */

/* eslint-disable no-restricted-syntax */

/* eslint-disable no-unused-expressions */

/* eslint-disable no-unused-vars */

/* eslint-disable no-use-before-define */

/* eslint-disable no-useless-escape */

/* eslint-disable no-var, prefer-template */

/* eslint-disable prefer-template */

/* eslint-disable react-hooks/rules-of-hooks, react-hooks/exhaustive-deps */

/* eslint-disable react/display-name */

/* eslint-disable react/forbid-foreign-prop-types */

/* eslint-disable-next-line jsx-a11y/anchor-has-content */

/* eslint-enable no-unused-vars */

/* eslint-enable no-useless-escape */

/* eslint-enable prefer-template */

/* eslint-enable react/display-name */

/* eslint-enable react/forbid-foreign-prop-types */

/* export default binding */

/* fade */

/* getContrastRatio */

/* getDynamicStyles */

/* getLuminance */

/* getTransitionProps */

/* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */

/* global define */

/* handleBreakpoints */

/* harmony default export */

/* harmony export */

/* harmony import */

/* hasCSSTOMSupport */

/* hexToRgb */

/* hslToRgb */

/* import() */

/* isFilled */

/* isProtectedDayOfYearToken */

/* isProtectedWeekYearToken */

/* isWidthDown */

/* isWidthUp */

/* lighten */

/* module decorator */

/* recomposeColor */

/* reexport */

/* reexport safe */

/* reflow */

/* rgbToHex */

/* sheetsManager */

/* styles */

/* throwProtectedError */

/* toCssValue */

/* unused harmony export __DO_NOT_USE__ActionTypes */

/* unused harmony export hasValue */

/* unused harmony export isBrowser */

/* unused harmony export isPlainObject */

/* unused harmony export styles */

/* unused harmony export teardown */

/* unused harmony exports SheetsManager, createGenerateId, sheets */

/* unused harmony exports displayPrint, displayRaw, overflow, textOverflow, visibility, whiteSpace */

/* unused harmony exports getOffsetTop, getOffsetLeft, styles */

/* unused harmony exports styles, testReset */

/* useDispatch */

/* useSelector */

/* webpack/runtime/jsonp chunk loading */

/* webpack/runtime/load script */

/* withThemeCreator */

/*!
  Copyright (c) 2017 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/

/*!
 * 
 *             jsPDF AutoTable plugin v3.5.9
 *             
 *             Copyright (c) 2020 Simon Bengtsson, https://github.com/simonbengtsson/jsPDF-AutoTable
 *             Licensed under the MIT License.
 *             http://opensource.org/licenses/mit-license
 *         
 */

/*#__PURE__*/

/**
       * The minimal observable subscription method.
       * @param {Object} observer Any object that can be used as an observer.
       * The observer object should have a `next` method.
       * @returns {subscription} An object with an `unsubscribe` method that can
       * be used to unsubscribe the observable from the store, and prevent further
       * emission of values from the observable.
       */

/**
       * innerWidth |xs      sm      md      lg      xl
       *            |-------|-------|-------|-------|------>
       * width      |  xs   |  sm   |  md   |  lg   |  xl
       */

/**
     * @deprecated
     */

/**
     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier
     * @prop {Boolean} gpuAcceleration=true
     * If true, it uses the CSS 3D transformation to position the popper.
     * Otherwise, it will use the `top` and `left` properties
     */

/**
     * @prop {Array} [priority=['left','right','top','bottom']]
     * Popper will try to prevent overflow following these priorities by default,
     * then, it could overflow on the left and on top of the `boundariesElement`
     */

/**
     * @prop {Boolean} flipVariations=false
     * The popper will switch placement variation between `-start` and `-end` when
     * the reference element overlaps its boundaries.
     *
     * The original placement should have a set variation.
     */

/**
     * @prop {Boolean} flipVariationsByContent=false
     * The popper will switch placement variation between `-start` and `-end` when
     * the popper element overlaps its reference boundaries.
     *
     * The original placement should have a set variation.
     */

/**
     * @prop {Boolean} gpuAcceleration=true
     * If true, it uses the CSS 3D transformation to position the popper.
     * Otherwise, it will use the `top` and `left` properties
     */

/**
     * @prop {String|Array} behavior='flip'
     * The behavior used to change the popper's placement. It can be one of
     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid
     * placements (with optional variations)
     */

/**
     * @prop {String|HTMLElement} boundariesElement='scrollParent'
     * Boundaries used by the modifier. Can be `scrollParent`, `window`,
     * `viewport` or any DOM element.
     */

/**
     * @prop {String|HTMLElement} boundariesElement='viewport'
     * The element which will define the boundaries of the popper position.
     * The popper will never be placed outside of the defined boundaries
     * (except if `keepTogether` is enabled)
     */

/**
     * @prop {number} padding=5
     * Amount of pixel used to define a minimum distance between the boundaries
     * and the popper. This makes sure the popper always has a little padding
     * between the edges of its container
     */

/**
     * @prop {number} padding=5
     * The popper will flip if it hits the edges of the `boundariesElement`
     */

/**
     * @prop {string} [x='bottom']
     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.
     * Change this if your popper should grow in a direction different from `bottom`
     */

/**
     * @prop {string} [x='left']
     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.
     * Change this if your popper should grow in a direction different from `right`
     */

/**
     * Collection of utilities useful when writing custom modifiers.
     * Starting from version 1.7, this method is available only if you
     * include `popper-utils.js` before `popper.js`.
     *
     * **DEPRECATION**: This way to access PopperUtils is deprecated
     * and will be removed in v2! Use the PopperUtils module directly instead.
     * Due to the high instability of the methods contained in Utils, we can't
     * guarantee them to follow semver. Use them at your own risk!
     * @static
     * @private
     * @type {Object}
     * @deprecated since version 1.8
     * @member Utils
     * @memberof Popper
     */

/**
     * Current highest index number.
     */

/**
     * Get selector string.
     */

/**
     * Schedules an update. It will run on the next UI update available.
     * @method scheduleUpdate
     * @memberof Popper
     */

/**
    * Determine if a URL shares the same origin as the current location
    *
    * @param {String} requestURL The URL to test
    * @returns {boolean} True if URL shares the same origin, otherwise false
    */

/**
    * Parse a URL to discover it's components
    *
    * @param {String} url The URL to be parsed
    * @returns {Object}
    */

/**
   * @ignore
   * width prop provided by withWidth decorator.
   */

/**
   * @ignore
   */

/**
   * A timeout in milliseconds to abort a request. If set to 0 (default) a
   * timeout is not created.
   */

/**
   * Add a rule to the current stylesheet.
   * Will insert a rule also after the stylesheet has been rendered first time.
   */

/**
   * Adds a change listener. It will be called any time an action is dispatched,
   * and some part of the state tree may potentially have changed. You may then
   * call `getState()` to read the current state tree inside the callback.
   *
   * You may call `dispatch()` from a change listener, with the following
   * caveats:
   *
   * 1. The subscriptions are snapshotted just before every `dispatch()` call.
   * If you subscribe or unsubscribe while the listeners are being invoked, this
   * will not have any effect on the `dispatch()` that is currently in progress.
   * However, the next `dispatch()` call, whether nested or not, will use a more
   * recent snapshot of the subscription list.
   *
   * 2. The listener should not expect to see all state changes, as the state
   * might have been updated multiple times during a nested `dispatch()` before
   * the listener is called. It is, however, guaranteed that all subscribers
   * registered before the `dispatch()` started will be called with the latest
   * state by the time it exits.
   *
   * @param {Function} listener A callback to be invoked on every dispatch.
   * @returns {Function} A function to remove this change listener.
   */

/**
   * Applies the computed styles to the popper element.
   *
   * All the DOM manipulations are limited to this modifier. This is useful in case
   * you want to integrate Popper.js inside a framework or view library and you
   * want to delegate all the DOM manipulations to it.
   *
   * Note that if you disable this modifier, you must make sure the popper element
   * has its position set to `absolute` before Popper.js can do its work!
   *
   * Just disable this modifier and define your own to achieve the desired effect.
   *
   * @memberof modifiers
   * @inner
   */

/**
   * Apply rule to an element inline.
   */

/**
   * Attach renderable to the render tree.
   */

/**
   * Call `onChangeValue` hooks.
   */

/**
   * Call `onCreateRule` hooks and return an object if returned by a hook.
   */

/**
   * Call `onProcessRule` hooks.
   */

/**
   * Call `onProcessSheet` hooks.
   */

/**
   * Call `onProcessStyle` hooks.
   */

/**
   * Call `onUpdate` hooks.
   */

/**
   * Callback called when the popper is created.<br />
   * By default, it is set to no-op.<br />
   * Access Popper.js instance with `data.instance`.
   * @prop {onCreate}
   */

/**
   * Callback called when the popper is updated. This callback is not called
   * on the initialization/creation of the popper, but only on subsequent
   * updates.<br />
   * By default, it is set to no-op.<br />
   * Access Popper.js instance with `data.instance`.
   * @prop {onUpdate}
   */

/**
   * Computes the style that will be applied to the popper element to gets
   * properly positioned.
   *
   * Note that this modifier will not touch the DOM, it just prepares the styles
   * so that `applyStyle` modifier can apply it. This separation is useful
   * in case you need to replace `applyStyle` with a custom implementation.
   *
   * This modifier has `850` as `order` value to maintain backward compatibility
   * with previous versions of Popper.js. Expect the modifiers ordering method
   * to change in future major versions of the library.
   *
   * @memberof modifiers
   * @inner
   */

/**
   * Contains rules objects and allows adding/removing etc.
   * Is used for e.g. by `StyleSheet` or `ConditionalRule`.
   */

/**
   * Convert all attached sheets to a CSS string.
   */

/**
   * Convert rules to a CSS string.
   */

/**
   * Create a Style Sheet.
   */

/**
   * Create a rule without a Style Sheet.
   * [Deprecated] will be removed in the next major version.
   */

/**
   * Create and add rules.
   * Will render also after Style Sheet was rendered the first time.
   */

/**
   * Create and register rule, run plugins.
   */

/**
   * Create and register rule.
   *
   * Will not render after Style Sheet was rendered the first time.
   */

/**
   * Creates a new Popper.js instance.
   * @class Popper
   * @param {Element|referenceObject} reference - The reference element used to position the popper
   * @param {Element} popper - The HTML / XML element used as the popper
   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)
   * @return {Object} instance - The generated Popper.js instance
   */

/**
   * Delete a rule by name.
   * Returns `true`: if rule has been deleted from the DOM.
   */

/**
   * Delete a rule.
   */

/**
   * Deploy pure CSS string to a renderable.
   */

/**
   * Detach the Style Sheet and remove it from the registry.
   */

/**
   * Dispatches an action. It is the only way to trigger a state change.
   *
   * The `reducer` function, used to create the store, will be called with the
   * current state tree and the given `action`. Its return value will
   * be considered the **next** state of the tree, and the change listeners
   * will be notified.
   *
   * The base implementation only supports plain object actions. If you want to
   * dispatch a Promise, an Observable, a thunk, or something else, you need to
   * wrap your store creating function into the corresponding middleware. For
   * example, see the documentation for the `redux-thunk` package. Even the
   * middleware will eventually dispatch plain object actions using this method.
   *
   * @param {Object} action A plain object representing “what changed”. It is
   * a good idea to keep actions serializable so you can record and replay user
   * sessions, or use the time travelling `redux-devtools`. An action must have
   * a `type` property which may not be `undefined`. It is a good idea to use
   * string constants for action types.
   *
   * @returns {Object} For convenience, the same action object you dispatched.
   *
   * Note that, if you use a custom middleware, it may wrap `dispatch()` to
   * return something else (for example, a Promise you can await).
   */

/**
   * Execute plugins, update rule props.
   */

/**
   * Generate a new CSS rule and replace the existing one.
   *
   * Only used for some old browsers because they can't set a selector.
   */

/**
   * Generates a CSS string.
   */

/**
   * Get a rule by name.
   */

/**
   * Get a rule.
   */

/**
   * Get all rules elements.
   */

/**
   * Get index of a CSS Rule.
   */

/**
   * Get index of a rule.
   */

/**
   * Get or set a style property.
   */

/**
   * Hide the given breakpoint(s).
   */

/**
   * If `true`, screens this size and down will be hidden.
   */

/**
   * If `true`, screens this size and up will be hidden.
   */

/**
   * Inject CSS string into element.
   */

/**
   * Insert RuleList into an element.
   */

/**
   * Insert a rule into element.
   */

/**
   * Insert rule into the StyleSheet
   */

/**
   * Insert style element into render tree.
   */

/**
   * Interoperability point for observable/reactive libraries.
   * @returns {observable} A minimal observable of state changes.
   * For more information, see the observable proposal:
   * https://github.com/tc39/proposal-observable
   */

/**
   * List of modifiers used to modify the offsets before they are applied to the popper.
   * They provide most of the functionalities of Popper.js.
   * @prop {modifiers}
   */

/**
   * Modifier used to flip the popper's placement when it starts to overlap its
   * reference element.
   *
   * Requires the `preventOverflow` modifier before it in order to work.
   *
   * **NOTE:** this modifier will interrupt the current update cycle and will
   * restart it if it detects the need to flip the placement.
   * @memberof modifiers
   * @inner
   */

/**
   * Modifier used to hide the popper when its reference element is outside of the
   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can
   * be used to hide with a CSS selector the popper when its reference is
   * out of boundaries.
   *
   * Requires the `preventOverflow` modifier before it in order to work.
   * @memberof modifiers
   * @inner
   */

/**
   * Modifier used to make sure the reference and its popper stay near each other
   * without leaving any gap between the two. Especially useful when the arrow is
   * enabled and you want to ensure that it points to its reference element.
   * It cares only about the first axis. You can still have poppers with margin
   * between the popper and its reference element.
   * @memberof modifiers
   * @inner
   */

/**
   * Modifier used to make the popper flow toward the inner of the reference element.
   * By default, when this modifier is disabled, the popper will be placed outside
   * the reference element.
   * @memberof modifiers
   * @inner
   */

/**
   * Modifier used to prevent the popper from being positioned outside the boundary.
   *
   * A scenario exists where the reference itself is not within the boundaries.<br />
   * We can say it has "escaped the boundaries" — or just "escaped".<br />
   * In this case we need to decide whether the popper should either:
   *
   * - detach from the reference and remain "trapped" in the boundaries, or
   * - if it should ignore the boundary and "escape with its reference"
   *
   * When `escapeWithReference` is set to`true` and reference is completely
   * outside its boundaries, the popper will overflow (or completely leave)
   * the boundaries in order to remain attached to the edge of the reference.
   *
   * @memberof modifiers
   * @inner
   */

/**
   * Modifier used to shift the popper on the start or end of its reference
   * element.<br />
   * It will read the variation of the `placement` property.<br />
   * It can be one either `-end` or `-start`.
   * @memberof modifiers
   * @inner
   */

/**
   * Popper's placement.
   * @prop {Popper.placements} placement='bottom'
   */

/**
   * Prepares various options, applies plugins.
   * Should not be used twice on the same instance, because there is no plugins
   * deduplication logic.
   */

/**
   * Reads the state tree managed by the store.
   *
   * @returns {any} The current state tree of your application.
   */

/**
   * Register a Style Sheet.
   */

/**
   * Register a plugin.
   */

/**
   * Register a rule in `.map`, `.classes` and `.keyframes` maps.
   */

/**
   * Register plugin. Passed function will be invoked with a rule instance.
   */

/**
   * Remove a Style Sheet.
   */

/**
   * Remove renderable from render tree.
   */

/**
   * Remove style element from render tree.
   */

/**
   * Replaces the reducer currently used by the store to calculate the state.
   *
   * You might need this if your app implements code splitting and you want to
   * load some of the reducers dynamically. You might also need this if you
   * implement a hot reloading mechanism for Redux.
   *
   * @param {Function} nextReducer The reducer for the store to use instead.
   * @returns {void}
   */

/**
   * Reset the registry.
   */

/**
   * Returns JSON representation of the rule.
   * Fallbacks are not supported.
   * Useful for inline styles.
   */

/**
   * Run `onProcessRule()` plugins on every rule.
   */

/**
   * Set selector string.
   * Attention: use this with caution. Most browsers didn't implement
   * selectorText setter, so this may result in rerendering of entire Style Sheet.
   */

/**
   * Set this to true if you want popper to position it self in 'fixed' mode
   * @prop {Boolean} positionFixed=false
   */

/**
   * Set to true if you want to automatically remove the popper when
   * you call the `destroy` method.
   * @prop {Boolean} removeOnDestroy=false
   */

/**
   * Specify which implementation to use.  'js' is the default, 'css' works better for
   * server-side rendering.
   */

/**
   * The `offset` modifier can shift your popper on both its axis.
   *
   * It accepts the following units:
   * - `px` or unit-less, interpreted as pixels
   * - `%` or `%r`, percentage relative to the length of the reference element
   * - `%p`, percentage relative to the length of the popper element
   * - `vw`, CSS viewport width unit
   * - `vh`, CSS viewport height unit
   *
   * For length is intended the main axis relative to the placement of the popper.<br />
   * This means that if the placement is `top` or `bottom`, the length will be the
   * `width`. In case of `left` or `right`, it will be the `height`.
   *
   * You can provide a single value (as `Number` or `String`), or a pair of values
   * as `String` divided by a comma or one (or more) white spaces.<br />
   * The latter is a deprecated method because it leads to confusion and will be
   * removed in v2.<br />
   * Additionally, it accepts additions and subtractions between different units.
   * Note that multiplications and divisions aren't supported.
   *
   * Valid examples are:
   * ```
   * 10
   * '10%'
   * '10, 10'
   * '10%, 10'
   * '10 + 10%'
   * '10 - 5vh + 3%'
   * '-10px + 5vh, 5px - 6%'
   * ```
   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap
   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.
   * > You can read more on this at this [issue](https://github.com/FezVrasta/popper.js/issues/373).
   *
   * @memberof modifiers
   * @inner
   */

/**
   * The content of the component.
   */

/**
   * This makes a shallow copy of currentListeners so we can use
   * nextListeners as a temporary list while dispatching.
   *
   * This prevents any bugs around consumers calling
   * subscribe/unsubscribe in the middle of a dispatch.
   */

/**
   * This modifier is used to move the `arrowElement` of the popper to make
   * sure it is positioned between the reference element and its popper element.
   * It will read the outer size of the `arrowElement` node to detect how many
   * pixels of conjunction are needed.
   *
   * It has no effect if no `arrowElement` is provided.
   * @memberof modifiers
   * @inner
   */

/**
   * This will create a new function if the ref props change and are defined.
   * This means react will call the old forkRef with `null` and the new forkRef
   * with the ref. Cleanup naturally emerges from this behavior
   */

/**
   * Unregister a rule.
   */

/**
   * Update the function values with a new data.
   */

/**
   * Updates a single rule.
   */

/**
   * Whether events (resize, scroll) are initially enabled.
   * @prop {Boolean} eventsEnabled=true
   */

/**
   * You can use this prop when choosing the `js` implementation with server-side rendering.
   *
   * As `window.innerWidth` is unavailable on the server,
   * we default to rendering an empty component during the first mount.
   * You might want to use an heuristic to approximate
   * the screen width of the client browser screen width.
   *
   * For instance, you could be using the user-agent or the client-hints.
   * https://caniuse.com/#search=client%20hint
   */

/**
   * execute:
   * GA execute action for plugin
   * Takes variable number of arguments
   * @param pluginName {String} e.g. 'ecommerce' or 'myplugin'
   * @param action {String} e.g. 'addItem' or 'myCustomAction'
   * @param actionType {String} optional e.g. 'detail'
   * @param payload {Object} optional e.g { id: '1x5e', name : 'My product to track' }
   */

/**
   * require:
   * GA requires a plugin
   * @param name {String} e.g. 'ecommerce' or 'myplugin'
   * @param options {Object} optional e.g {path: '/log', debug: true}
   * @param trackerName {String} optional e.g 'trackerName'
   */

/**
 * ## ARIA
 *
 * If the progress bar is describing the loading progress of a particular region of a page,
 * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`
 * attribute to `true` on that region until it has finished loading.
 */

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} data.styles - List of style properties - values to apply to popper element
 * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The same data object
 */

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @argument {Number|String} options.offset=0
 * The offset value as described in the modifier description
 * @returns {Object} The data object, properly modified
 */

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */

/**
 * @function
 * @memberof Popper.Utils
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Boolean} shouldRound - If the offsets should be rounded at all
 * @returns {Object} The popper's position offsets rounded
 *
 * The tale of pixel-perfect positioning. It's still not 100% perfect, but as
 * good as it can be within reason.
 * Discussion here: https://github.com/FezVrasta/popper.js/pull/715
 *
 * Low DPI screens cause a popper to be blurry if not using full pixels (Safari
 * as well on High DPI screens).
 *
 * Firefox prefers no rounding for positioning and does not have blurriness on
 * high DPI screens.
 *
 * Only horizontal placement and left/right values need to be considered.
 */

/**
 * @ignore - do not document.
 *
 * Proper state management for containers and the modals in those containers.
 * Simplified, but inspired by react-overlay's ModalManager class.
 * Used by the Modal to ensure proper styling of containers.
 */

/**
 * @ignore - internal component.
 * @type {React.Context<{} | {expanded: boolean, disabled: boolean, toggle: () => void}>}
 */

/**
 * @ignore - internal component.
 * The component originates from https://github.com/STORIS/react-scrollbar-size.
 * It has been moved into the core in order to minimize the bundle size.
 */

/**
 * @ignore - internal component.
 */

/**
 * @license
  Copyright (c) 2008, Adobe Systems Incorporated
  All rights reserved.

  Redistribution and use in source and binary forms, with or without 
  modification, are permitted provided that the following conditions are
  met:

  * Redistributions of source code must retain the above copyright notice, 
    this list of conditions and the following disclaimer.
  
  * Redistributions in binary form must reproduce the above copyright
    notice, this list of conditions and the following disclaimer in the 
    documentation and/or other materials provided with the distribution.
  
  * Neither the name of Adobe Systems Incorporated nor the names of its 
    contributors may be used to endorse or promote products derived from 
    this software without specific prior written permission.

  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
  IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
  THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
  PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR 
  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

/**
 * @license
 *
 * Copyright (c) 2014 James Robb, https://github.com/jamesbrobb
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 * ====================================================================
 */

/**
 * @license
 *
 * Licensed under the MIT License.
 * http://opensource.org/licenses/mit-license
 */

/**
 * @license
 * (c) Dean McNamee <dean@gmail.com>, 2013.
 *
 * https://github.com/deanm/omggif
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to
 * deal in the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 *
 * omggif is a JavaScript implementation of a GIF 89a encoder and decoder,
 * including animation and compression.  It does not rely on any specific
 * underlying system, so should run in the browser, Node, or Plask.
 */

/**
 * @license
 * ====================================================================
 * Copyright (c) 2013 Youssef Beddad, youssef.beddad@gmail.com
 *               2013 Eduardo Menezes de Morais, eduardo.morais@usp.br
 *               2013 Lee Driscoll, https://github.com/lsdriscoll
 *               2014 Juan Pablo Gaviria, https://github.com/juanpgaviria
 *               2014 James Hall, james@parall.ax
 *               2014 Diego Casorran, https://github.com/diegocr
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 * ====================================================================
 */

/**
 * @license
 * Copyright (c) 2012 chick307 <chick307@gmail.com>
 *
 * Licensed under the MIT License.
 * http://opensource.org/licenses/mit-license
 */

/**
 * @license
 * Copyright (c) 2014 Steven Spungin (TwelveTone LLC)  steven@twelvetone.tv
 *
 * Licensed under the MIT License.
 * http://opensource.org/licenses/mit-license
 */

/**
 * @license
 * Copyright (c) 2017 Aras Abbasi
 *
 * Licensed under the MIT License.
 * http://opensource.org/licenses/mit-license
 */

/**
 * @license
 * Copyright (c) 2018 Aras Abbasi
 *
 * Licensed under the MIT License.
 * http://opensource.org/licenses/mit-license
 */

/**
 * @license
 * Copyright (c) 2018 Erik Koopmans
 * Released under the MIT License.
 *
 * Licensed under the MIT License.
 * http://opensource.org/licenses/mit-license
 */

/**
 * @license
 * Copyright (c) 2019 Aras Abbasi
 *
 * Licensed under the MIT License.
 * http://opensource.org/licenses/mit-license
 */

/**
 * @license
 * Extracted from pdf.js
 * https://github.com/andreasgal/pdf.js
 *
 * Copyright (c) 2011 Mozilla Foundation
 *
 * Contributors: Andreas Gal <gal@mozilla.com>
 *               Chris G Jones <cjones@mozilla.com>
 *               Shaon Barman <shaon.barman@gmail.com>
 *               Vivien Nicolas <21@vingtetun.org>
 *               Justin D'Arcangelo <justindarc@gmail.com>
 *               Yury Delendik
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

/**
 * @license
 * FileSaver.js
 * A saveAs() FileSaver implementation.
 *
 * By Eli Grey, http://eligrey.com
 *
 * License : https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md (MIT)
 * source  : http://purl.eligrey.com/github/FileSaver.js
 */

/**
 * @license
 * Licensed under the MIT License.
 * http://opensource.org/licenses/mit-license
 */

/**
 * @license
 * Unicode Bidi Engine based on the work of Alex Shensis (@asthensis)
 * MIT License
 */

/**
 * @license
 * jsPDF fileloading PlugIn
 * Copyright (c) 2018 Aras Abbasi (aras.abbasi@gmail.com)
 *
 * Licensed under the MIT License.
 * http://opensource.org/licenses/mit-license
 */

/**
 * @license
 * jsPDF filters PlugIn
 * Copyright (c) 2014 Aras Abbasi
 *
 * Licensed under the MIT License.
 * http://opensource.org/licenses/mit-license
 */

/**
 * @license
 * jsPDF virtual FileSystem functionality
 *
 * Licensed under the MIT License.
 * http://opensource.org/licenses/mit-license
 */

/**
 * @license
 Copyright (c) 2013 Gildas Lormeau. All rights reserved.

 Redistribution and use in source and binary forms, with or without
 modification, are permitted provided that the following conditions are met:

 1. Redistributions of source code must retain the above copyright notice,
 this list of conditions and the following disclaimer.

 2. Redistributions in binary form must reproduce the above copyright 
 notice, this list of conditions and the following disclaimer in 
 the documentation and/or other materials provided with the distribution.

 3. The names of the authors may not be used to endorse or promote products
 derived from this software without specific prior written permission.

 THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,
 INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
 FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,
 INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,
 INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
 OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/**
 * @name addDays
 * @category Day Helpers
 * @summary Add the specified number of days to the given date.
 *
 * @description
 * Add the specified number of days to the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of days to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
 * @returns {Date} the new date with the days added
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Add 10 days to 1 September 2014:
 * var result = addDays(new Date(2014, 8, 1), 10)
 * //=> Thu Sep 11 2014 00:00:00
 */

/**
 * @name addMilliseconds
 * @category Millisecond Helpers
 * @summary Add the specified number of milliseconds to the given date.
 *
 * @description
 * Add the specified number of milliseconds to the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of milliseconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
 * @returns {Date} the new date with the milliseconds added
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Add 750 milliseconds to 10 July 2014 12:45:30.000:
 * var result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)
 * //=> Thu Jul 10 2014 12:45:30.750
 */

/**
 * @name addMonths
 * @category Month Helpers
 * @summary Add the specified number of months to the given date.
 *
 * @description
 * Add the specified number of months to the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of months to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
 * @returns {Date} the new date with the months added
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Add 5 months to 1 September 2014:
 * var result = addMonths(new Date(2014, 8, 1), 5)
 * //=> Sun Feb 01 2015 00:00:00
 */

/**
 * @name addYears
 * @category Year Helpers
 * @summary Add the specified number of years to the given date.
 *
 * @description
 * Add the specified number of years to the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of years to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
 * @returns {Date} the new date with the years added
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Add 5 years to 1 September 2014:
 * var result = addYears(new Date(2014, 8, 1), 5)
 * //=> Sun Sep 01 2019 00:00:00
 */

/**
 * @name differenceInMilliseconds
 * @category Millisecond Helpers
 * @summary Get the number of milliseconds between the given dates.
 *
 * @description
 * Get the number of milliseconds between the given dates.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} dateLeft - the later date
 * @param {Date|Number} dateRight - the earlier date
 * @returns {Number} the number of milliseconds
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // How many milliseconds are between
 * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?
 * var result = differenceInMilliseconds(
 *   new Date(2014, 6, 2, 12, 30, 21, 700),
 *   new Date(2014, 6, 2, 12, 30, 20, 600)
 * )
 * //=> 1100
 */

/**
 * @name eachDayOfInterval
 * @category Interval Helpers
 * @summary Return the array of dates within the specified time interval.
 *
 * @description
 * Return the array of dates within the specified time interval.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * - The function was renamed from `eachDay` to `eachDayOfInterval`.
 *   This change was made to mirror the use of the word "interval" in standard ISO 8601:2004 terminology:
 *
 *   ```
 *   2.1.3
 *   time interval
 *   part of the time axis limited by two instants
 *   ```
 *
 *   Also, this function now accepts an object with `start` and `end` properties
 *   instead of two arguments as an interval.
 *   This function now throws `RangeError` if the start of the interval is after its end
 *   or if any date in the interval is `Invalid Date`.
 *
 *   ```javascript
 *   // Before v2.0.0
 *
 *   eachDay(new Date(2014, 0, 10), new Date(2014, 0, 20))
 *
 *   // v2.0.0 onward
 *
 *   eachDayOfInterval(
 *     { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) }
 *   )
 *   ```
 *
 * @param {Interval} interval - the interval. See [Interval]{@link docs/types/Interval}
 * @param {Object} [options] - an object with options.
 * @param {Number} [options.step=1] - the step to increment by. The value should be more than 1.
 * @returns {Date[]} the array with starts of days from the day of the interval start to the day of the interval end
 * @throws {TypeError} 1 argument required
 * @throws {RangeError} `options.step` must be a number greater than 1
 * @throws {RangeError} The start of an interval cannot be after its end
 * @throws {RangeError} Date in interval cannot be `Invalid Date`
 *
 * @example
 * // Each day between 6 October 2014 and 10 October 2014:
 * var result = eachDayOfInterval({
 *   start: new Date(2014, 9, 6),
 *   end: new Date(2014, 9, 10)
 * })
 * //=> [
 * //   Mon Oct 06 2014 00:00:00,
 * //   Tue Oct 07 2014 00:00:00,
 * //   Wed Oct 08 2014 00:00:00,
 * //   Thu Oct 09 2014 00:00:00,
 * //   Fri Oct 10 2014 00:00:00
 * // ]
 */

/**
 * @name endOfDay
 * @category Day Helpers
 * @summary Return the end of a day for the given date.
 *
 * @description
 * Return the end of a day for the given date.
 * The result will be in the local timezone.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the original date
 * @returns {Date} the end of a day
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // The end of a day for 2 September 2014 11:55:00:
 * var result = endOfDay(new Date(2014, 8, 2, 11, 55, 0))
 * //=> Tue Sep 02 2014 23:59:59.999
 */

/**
 * @name endOfMonth
 * @category Month Helpers
 * @summary Return the end of a month for the given date.
 *
 * @description
 * Return the end of a month for the given date.
 * The result will be in the local timezone.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the original date
 * @returns {Date} the end of a month
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // The end of a month for 2 September 2014 11:55:00:
 * var result = endOfMonth(new Date(2014, 8, 2, 11, 55, 0))
 * //=> Tue Sep 30 2014 23:59:59.999
 */

/**
 * @name endOfWeek
 * @category Week Helpers
 * @summary Return the end of a week for the given date.
 *
 * @description
 * Return the end of a week for the given date.
 * The result will be in the local timezone.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the original date
 * @param {Object} [options] - an object with options.
 * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
 * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
 * @returns {Date} the end of a week
 * @throws {TypeError} 1 argument required
 * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
 *
 * @example
 * // The end of a week for 2 September 2014 11:55:00:
 * var result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0))
 * //=> Sat Sep 06 2014 23:59:59.999
 *
 * @example
 * // If the week starts on Monday, the end of the week for 2 September 2014 11:55:00:
 * var result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })
 * //=> Sun Sep 07 2014 23:59:59.999
 */

/**
 * @name endOfYear
 * @category Year Helpers
 * @summary Return the end of a year for the given date.
 *
 * @description
 * Return the end of a year for the given date.
 * The result will be in the local timezone.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the original date
 * @returns {Date} the end of a year
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // The end of a year for 2 September 2014 11:55:00:
 * var result = endOfYear(new Date(2014, 8, 2, 11, 55, 00))
 * //=> Wed Dec 31 2014 23:59:59.999
 */

/**
 * @name format
 * @category Common Helpers
 * @summary Format the date.
 *
 * @description
 * Return the formatted date string in the given format. The result may vary by locale.
 *
 * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.
 * > See: https://git.io/fxCyr
 *
 * The characters wrapped between two single quotes characters (') are escaped.
 * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.
 * (see the last example)
 *
 * Format of the string is based on Unicode Technical Standard #35:
 * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table
 * with a few additions (see note 7 below the table).
 *
 * Accepted patterns:
 * | Unit                            | Pattern | Result examples                   | Notes |
 * |---------------------------------|---------|-----------------------------------|-------|
 * | Era                             | G..GGG  | AD, BC                            |       |
 * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |
 * |                                 | GGGGG   | A, B                              |       |
 * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |
 * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |
 * |                                 | yy      | 44, 01, 00, 17                    | 5     |
 * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |
 * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |
 * |                                 | yyyyy   | ...                               | 3,5   |
 * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |
 * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |
 * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |
 * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |
 * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |
 * |                                 | YYYYY   | ...                               | 3,5   |
 * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |
 * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |
 * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |
 * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |
 * |                                 | RRRRR   | ...                               | 3,5,7 |
 * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |
 * |                                 | uu      | -43, 01, 1900, 2017               | 5     |
 * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |
 * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |
 * |                                 | uuuuu   | ...                               | 3,5   |
 * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |
 * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |
 * |                                 | QQ      | 01, 02, 03, 04                    |       |
 * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |
 * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |
 * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |
 * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |
 * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |
 * |                                 | qq      | 01, 02, 03, 04                    |       |
 * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |
 * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |
 * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |
 * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |
 * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |
 * |                                 | MM      | 01, 02, ..., 12                   |       |
 * |                                 | MMM     | Jan, Feb, ..., Dec                |       |
 * |                                 | MMMM    | January, February, ..., December  | 2     |
 * |                                 | MMMMM   | J, F, ..., D                      |       |
 * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |
 * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |
 * |                                 | LL      | 01, 02, ..., 12                   |       |
 * |                                 | LLL     | Jan, Feb, ..., Dec                |       |
 * |                                 | LLLL    | January, February, ..., December  | 2     |
 * |                                 | LLLLL   | J, F, ..., D                      |       |
 * | Local week of year              | w       | 1, 2, ..., 53                     |       |
 * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |
 * |                                 | ww      | 01, 02, ..., 53                   |       |
 * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |
 * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |
 * |                                 | II      | 01, 02, ..., 53                   | 7     |
 * | Day of month                    | d       | 1, 2, ..., 31                     |       |
 * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |
 * |                                 | dd      | 01, 02, ..., 31                   |       |
 * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |
 * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |
 * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |
 * |                                 | DDD     | 001, 002, ..., 365, 366           |       |
 * |                                 | DDDD    | ...                               | 3     |
 * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |
 * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |
 * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |
 * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |
 * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |
 * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |
 * |                                 | ii      | 01, 02, ..., 07                   | 7     |
 * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |
 * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |
 * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |
 * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 7     |
 * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |
 * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |
 * |                                 | ee      | 02, 03, ..., 01                   |       |
 * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |
 * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |
 * |                                 | eeeee   | M, T, W, T, F, S, S               |       |
 * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |
 * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |
 * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |
 * |                                 | cc      | 02, 03, ..., 01                   |       |
 * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |
 * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |
 * |                                 | ccccc   | M, T, W, T, F, S, S               |       |
 * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |
 * | AM, PM                          | a..aaa  | AM, PM                            |       |
 * |                                 | aaaa    | a.m., p.m.                        | 2     |
 * |                                 | aaaaa   | a, p                              |       |
 * | AM, PM, noon, midnight          | b..bbb  | AM, PM, noon, midnight            |       |
 * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |
 * |                                 | bbbbb   | a, p, n, mi                       |       |
 * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |
 * |                                 | BBBB    | at night, in the morning, ...     | 2     |
 * |                                 | BBBBB   | at night, in the morning, ...     |       |
 * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |
 * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |
 * |                                 | hh      | 01, 02, ..., 11, 12               |       |
 * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |
 * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |
 * |                                 | HH      | 00, 01, 02, ..., 23               |       |
 * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |
 * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |
 * |                                 | KK      | 01, 02, ..., 11, 00               |       |
 * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |
 * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |
 * |                                 | kk      | 24, 01, 02, ..., 23               |       |
 * | Minute                          | m       | 0, 1, ..., 59                     |       |
 * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |
 * |                                 | mm      | 00, 01, ..., 59                   |       |
 * | Second                          | s       | 0, 1, ..., 59                     |       |
 * |                                 | so      | 0th, 1st, ..., 59th               | 7     |
 * |                                 | ss      | 00, 01, ..., 59                   |       |
 * | Fraction of second              | S       | 0, 1, ..., 9                      |       |
 * |                                 | SS      | 00, 01, ..., 99                   |       |
 * |                                 | SSS     | 000, 0001, ..., 999               |       |
 * |                                 | SSSS    | ...                               | 3     |
 * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |
 * |                                 | XX      | -0800, +0530, Z                   |       |
 * |                                 | XXX     | -08:00, +05:30, Z                 |       |
 * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |
 * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |
 * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |
 * |                                 | xx      | -0800, +0530, +0000               |       |
 * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |
 * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |
 * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |
 * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |
 * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |
 * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |
 * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |
 * | Seconds timestamp               | t       | 512969520                         | 7     |
 * |                                 | tt      | ...                               | 3,7   |
 * | Milliseconds timestamp          | T       | 512969520900                      | 7     |
 * |                                 | TT      | ...                               | 3,7   |
 * | Long localized date             | P       | 05/29/1453                        | 7     |
 * |                                 | PP      | May 29, 1453                      | 7     |
 * |                                 | PPP     | May 29th, 1453                    | 7     |
 * |                                 | PPPP    | Sunday, May 29th, 1453            | 2,7   |
 * | Long localized time             | p       | 12:00 AM                          | 7     |
 * |                                 | pp      | 12:00:00 AM                       | 7     |
 * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |
 * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |
 * | Combination of date and time    | Pp      | 05/29/1453, 12:00 AM              | 7     |
 * |                                 | PPpp    | May 29, 1453, 12:00:00 AM         | 7     |
 * |                                 | PPPppp  | May 29th, 1453 at ...             | 7     |
 * |                                 | PPPPpppp| Sunday, May 29th, 1453 at ...     | 2,7   |
 * Notes:
 * 1. "Formatting" units (e.g. formatting quarter) in the default en-US locale
 *    are the same as "stand-alone" units, but are different in some languages.
 *    "Formatting" units are declined according to the rules of the language
 *    in the context of a date. "Stand-alone" units are always nominative singular:
 *
 *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`
 *
 *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`
 *
 * 2. Any sequence of the identical letters is a pattern, unless it is escaped by
 *    the single quote characters (see below).
 *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)
 *    the output will be the same as default pattern for this unit, usually
 *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units
 *    are marked with "2" in the last column of the table.
 *
 *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`
 *
 *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`
 *
 *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`
 *
 *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`
 *
 *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`
 *
 * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).
 *    The output will be padded with zeros to match the length of the pattern.
 *
 *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`
 *
 * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.
 *    These tokens represent the shortest form of the quarter.
 *
 * 5. The main difference between `y` and `u` patterns are B.C. years:
 *
 *    | Year | `y` | `u` |
 *    |------|-----|-----|
 *    | AC 1 |   1 |   1 |
 *    | BC 1 |   1 |   0 |
 *    | BC 2 |   2 |  -1 |
 *
 *    Also `yy` always returns the last two digits of a year,
 *    while `uu` pads single digit years to 2 characters and returns other years unchanged:
 *
 *    | Year | `yy` | `uu` |
 *    |------|------|------|
 *    | 1    |   01 |   01 |
 *    | 14   |   14 |   14 |
 *    | 376  |   76 |  376 |
 *    | 1453 |   53 | 1453 |
 *
 *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),
 *    except local week-numbering years are dependent on `options.weekStartsOn`
 *    and `options.firstWeekContainsDate` (compare [getISOWeekYear]{@link https://date-fns.org/docs/getISOWeekYear}
 *    and [getWeekYear]{@link https://date-fns.org/docs/getWeekYear}).
 *
 * 6. Specific non-location timezones are currently unavailable in `date-fns`,
 *    so right now these tokens fall back to GMT timezones.
 *
 * 7. These patterns are not in the Unicode Technical Standard #35:
 *    - `i`: ISO day of week
 *    - `I`: ISO week of year
 *    - `R`: ISO week-numbering year
 *    - `t`: seconds timestamp
 *    - `T`: milliseconds timestamp
 *    - `o`: ordinal number modifier
 *    - `P`: long localized date
 *    - `p`: long localized time
 *
 * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.
 *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr
 *
 * 9. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.
 *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * - The second argument is now required for the sake of explicitness.
 *
 *   ```javascript
 *   // Before v2.0.0
 *   format(new Date(2016, 0, 1))
 *
 *   // v2.0.0 onward
 *   format(new Date(2016, 0, 1), "yyyy-MM-dd'T'HH:mm:ss.SSSxxx")
 *   ```
 *
 * - New format string API for `format` function
 *   which is based on [Unicode Technical Standard #35](https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table).
 *   See [this post](https://blog.date-fns.org/post/unicode-tokens-in-date-fns-v2-sreatyki91jg) for more details.
 *
 * - Characters are now escaped using single quote symbols (`'`) instead of square brackets.
 *
 * @param {Date|Number} date - the original date
 * @param {String} format - the string of tokens
 * @param {Object} [options] - an object with options.
 * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
 * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
 * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is
 * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;
 *   see: https://git.io/fxCyr
 * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;
 *   see: https://git.io/fxCyr
 * @returns {String} the formatted date string
 * @throws {TypeError} 2 arguments required
 * @throws {RangeError} `date` must not be Invalid Date
 * @throws {RangeError} `options.locale` must contain `localize` property
 * @throws {RangeError} `options.locale` must contain `formatLong` property
 * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
 * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7
 * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr
 * @throws {RangeError} use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr
 * @throws {RangeError} use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr
 * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr
 * @throws {RangeError} format string contains an unescaped latin alphabet character
 *
 * @example
 * // Represent 11 February 2014 in middle-endian format:
 * var result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')
 * //=> '02/11/2014'
 *
 * @example
 * // Represent 2 July 2014 in Esperanto:
 * import { eoLocale } from 'date-fns/locale/eo'
 * var result = format(new Date(2014, 6, 2), "do 'de' MMMM yyyy", {
 *   locale: eoLocale
 * })
 * //=> '2-a de julio 2014'
 *
 * @example
 * // Escape string by single quote characters:
 * var result = format(new Date(2014, 6, 2, 15), "h 'o''clock'")
 * //=> "3 o'clock"
 */

/**
 * @name getDaysInMonth
 * @category Month Helpers
 * @summary Get the number of days in a month of the given date.
 *
 * @description
 * Get the number of days in a month of the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the given date
 * @returns {Number} the number of days in a month
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // How many days are in February 2000?
 * var result = getDaysInMonth(new Date(2000, 1))
 * //=> 29
 */

/**
 * @name getHours
 * @category Hour Helpers
 * @summary Get the hours of the given date.
 *
 * @description
 * Get the hours of the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the given date
 * @returns {Number} the hours
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // Get the hours of 29 February 2012 11:45:00:
 * var result = getHours(new Date(2012, 1, 29, 11, 45))
 * //=> 11
 */

/**
 * @name getSeconds
 * @category Second Helpers
 * @summary Get the seconds of the given date.
 *
 * @description
 * Get the seconds of the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the given date
 * @returns {Number} the seconds
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // Get the seconds of 29 February 2012 11:45:05.123:
 * var result = getSeconds(new Date(2012, 1, 29, 11, 45, 5, 123))
 * //=> 5
 */

/**
 * @name getYear
 * @category Year Helpers
 * @summary Get the year of the given date.
 *
 * @description
 * Get the year of the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the given date
 * @returns {Number} the year
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // Which year is 2 July 2014?
 * var result = getYear(new Date(2014, 6, 2))
 * //=> 2014
 */

/**
 * @name isAfter
 * @category Common Helpers
 * @summary Is the first date after the second one?
 *
 * @description
 * Is the first date after the second one?
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date that should be after the other one to return true
 * @param {Date|Number} dateToCompare - the date to compare with
 * @returns {Boolean} the first date is after the second date
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Is 10 July 1989 after 11 February 1987?
 * var result = isAfter(new Date(1989, 6, 10), new Date(1987, 1, 11))
 * //=> true
 */

/**
 * @name isBefore
 * @category Common Helpers
 * @summary Is the first date before the second one?
 *
 * @description
 * Is the first date before the second one?
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date that should be before the other one to return true
 * @param {Date|Number} dateToCompare - the date to compare with
 * @returns {Boolean} the first date is before the second date
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Is 10 July 1989 before 11 February 1987?
 * var result = isBefore(new Date(1989, 6, 10), new Date(1987, 1, 11))
 * //=> false
 */

/**
 * @name isEqual
 * @category Common Helpers
 * @summary Are the given dates equal?
 *
 * @description
 * Are the given dates equal?
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} dateLeft - the first date to compare
 * @param {Date|Number} dateRight - the second date to compare
 * @returns {Boolean} the dates are equal
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Are 2 July 2014 06:30:45.000 and 2 July 2014 06:30:45.500 equal?
 * var result = isEqual(
 *   new Date(2014, 6, 2, 6, 30, 45, 0),
 *   new Date(2014, 6, 2, 6, 30, 45, 500)
 * )
 * //=> false
 */

/**
 * @name isSameDay
 * @category Day Helpers
 * @summary Are the given dates in the same day?
 *
 * @description
 * Are the given dates in the same day?
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} dateLeft - the first date to check
 * @param {Date|Number} dateRight - the second date to check
 * @returns {Boolean} the dates are in the same day
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Are 4 September 06:00:00 and 4 September 18:00:00 in the same day?
 * var result = isSameDay(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 18, 0))
 * //=> true
 */

/**
 * @name isSameHour
 * @category Hour Helpers
 * @summary Are the given dates in the same hour?
 *
 * @description
 * Are the given dates in the same hour?
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} dateLeft - the first date to check
 * @param {Date|Number} dateRight - the second date to check
 * @returns {Boolean} the dates are in the same hour
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Are 4 September 2014 06:00:00 and 4 September 06:30:00 in the same hour?
 * var result = isSameHour(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 6, 30))
 * //=> true
 */

/**
 * @name isSameMonth
 * @category Month Helpers
 * @summary Are the given dates in the same month?
 *
 * @description
 * Are the given dates in the same month?
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} dateLeft - the first date to check
 * @param {Date|Number} dateRight - the second date to check
 * @returns {Boolean} the dates are in the same month
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Are 2 September 2014 and 25 September 2014 in the same month?
 * var result = isSameMonth(new Date(2014, 8, 2), new Date(2014, 8, 25))
 * //=> true
 */

/**
 * @name isSameYear
 * @category Year Helpers
 * @summary Are the given dates in the same year?
 *
 * @description
 * Are the given dates in the same year?
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} dateLeft - the first date to check
 * @param {Date|Number} dateRight - the second date to check
 * @returns {Boolean} the dates are in the same year
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Are 2 September 2014 and 25 September 2014 in the same year?
 * var result = isSameYear(new Date(2014, 8, 2), new Date(2014, 8, 25))
 * //=> true
 */

/**
 * @name isValid
 * @category Common Helpers
 * @summary Is the given date valid?
 *
 * @description
 * Returns false if argument is Invalid Date and true otherwise.
 * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
 * Invalid Date is a Date, whose time value is NaN.
 *
 * Time value of Date: http://es5.github.io/#x15.9.1.1
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * - Now `isValid` doesn't throw an exception
 *   if the first argument is not an instance of Date.
 *   Instead, argument is converted beforehand using `toDate`.
 *
 *   Examples:
 *
 *   | `isValid` argument        | Before v2.0.0 | v2.0.0 onward |
 *   |---------------------------|---------------|---------------|
 *   | `new Date()`              | `true`        | `true`        |
 *   | `new Date('2016-01-01')`  | `true`        | `true`        |
 *   | `new Date('')`            | `false`       | `false`       |
 *   | `new Date(1488370835081)` | `true`        | `true`        |
 *   | `new Date(NaN)`           | `false`       | `false`       |
 *   | `'2016-01-01'`            | `TypeError`   | `false`       |
 *   | `''`                      | `TypeError`   | `false`       |
 *   | `1488370835081`           | `TypeError`   | `true`        |
 *   | `NaN`                     | `TypeError`   | `false`       |
 *
 *   We introduce this change to make *date-fns* consistent with ECMAScript behavior
 *   that try to coerce arguments to the expected type
 *   (which is also the case with other *date-fns* functions).
 *
 * @param {*} date - the date to check
 * @returns {Boolean} the date is valid
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // For the valid date:
 * var result = isValid(new Date(2014, 1, 31))
 * //=> true
 *
 * @example
 * // For the value, convertable into a date:
 * var result = isValid(1393804800000)
 * //=> true
 *
 * @example
 * // For the invalid date:
 * var result = isValid(new Date(''))
 * //=> false
 */

/**
 * @name parse
 * @category Common Helpers
 * @summary Parse the date.
 *
 * @description
 * Return the date parsed from string using the given format string.
 *
 * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.
 * > See: https://git.io/fxCyr
 *
 * The characters in the format string wrapped between two single quotes characters (') are escaped.
 * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.
 *
 * Format of the format string is based on Unicode Technical Standard #35:
 * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table
 * with a few additions (see note 5 below the table).
 *
 * Not all tokens are compatible. Combinations that don't make sense or could lead to bugs are prohibited
 * and will throw `RangeError`. For example usage of 24-hour format token with AM/PM token will throw an exception:
 *
 * ```javascript
 * parse('23 AM', 'HH a', new Date())
 * //=> RangeError: The format string mustn't contain `HH` and `a` at the same time
 * ```
 *
 * See the compatibility table: https://docs.google.com/spreadsheets/d/e/2PACX-1vQOPU3xUhplll6dyoMmVUXHKl_8CRDs6_ueLmex3SoqwhuolkuN3O05l4rqx5h1dKX8eb46Ul-CCSrq/pubhtml?gid=0&single=true
 *
 * Accepted format string patterns:
 * | Unit                            |Prior| Pattern | Result examples                   | Notes |
 * |---------------------------------|-----|---------|-----------------------------------|-------|
 * | Era                             | 140 | G..GGG  | AD, BC                            |       |
 * |                                 |     | GGGG    | Anno Domini, Before Christ        | 2     |
 * |                                 |     | GGGGG   | A, B                              |       |
 * | Calendar year                   | 130 | y       | 44, 1, 1900, 2017, 9999           | 4     |
 * |                                 |     | yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |
 * |                                 |     | yy      | 44, 01, 00, 17                    | 4     |
 * |                                 |     | yyy     | 044, 001, 123, 999                | 4     |
 * |                                 |     | yyyy    | 0044, 0001, 1900, 2017            | 4     |
 * |                                 |     | yyyyy   | ...                               | 2,4   |
 * | Local week-numbering year       | 130 | Y       | 44, 1, 1900, 2017, 9000           | 4     |
 * |                                 |     | Yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |
 * |                                 |     | YY      | 44, 01, 00, 17                    | 4,6   |
 * |                                 |     | YYY     | 044, 001, 123, 999                | 4     |
 * |                                 |     | YYYY    | 0044, 0001, 1900, 2017            | 4,6   |
 * |                                 |     | YYYYY   | ...                               | 2,4   |
 * | ISO week-numbering year         | 130 | R       | -43, 1, 1900, 2017, 9999, -9999   | 4,5   |
 * |                                 |     | RR      | -43, 01, 00, 17                   | 4,5   |
 * |                                 |     | RRR     | -043, 001, 123, 999, -999         | 4,5   |
 * |                                 |     | RRRR    | -0043, 0001, 2017, 9999, -9999    | 4,5   |
 * |                                 |     | RRRRR   | ...                               | 2,4,5 |
 * | Extended year                   | 130 | u       | -43, 1, 1900, 2017, 9999, -999    | 4     |
 * |                                 |     | uu      | -43, 01, 99, -99                  | 4     |
 * |                                 |     | uuu     | -043, 001, 123, 999, -999         | 4     |
 * |                                 |     | uuuu    | -0043, 0001, 2017, 9999, -9999    | 4     |
 * |                                 |     | uuuuu   | ...                               | 2,4   |
 * | Quarter (formatting)            | 120 | Q       | 1, 2, 3, 4                        |       |
 * |                                 |     | Qo      | 1st, 2nd, 3rd, 4th                | 5     |
 * |                                 |     | QQ      | 01, 02, 03, 04                    |       |
 * |                                 |     | QQQ     | Q1, Q2, Q3, Q4                    |       |
 * |                                 |     | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |
 * |                                 |     | QQQQQ   | 1, 2, 3, 4                        | 4     |
 * | Quarter (stand-alone)           | 120 | q       | 1, 2, 3, 4                        |       |
 * |                                 |     | qo      | 1st, 2nd, 3rd, 4th                | 5     |
 * |                                 |     | qq      | 01, 02, 03, 04                    |       |
 * |                                 |     | qqq     | Q1, Q2, Q3, Q4                    |       |
 * |                                 |     | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |
 * |                                 |     | qqqqq   | 1, 2, 3, 4                        | 3     |
 * | Month (formatting)              | 110 | M       | 1, 2, ..., 12                     |       |
 * |                                 |     | Mo      | 1st, 2nd, ..., 12th               | 5     |
 * |                                 |     | MM      | 01, 02, ..., 12                   |       |
 * |                                 |     | MMM     | Jan, Feb, ..., Dec                |       |
 * |                                 |     | MMMM    | January, February, ..., December  | 2     |
 * |                                 |     | MMMMM   | J, F, ..., D                      |       |
 * | Month (stand-alone)             | 110 | L       | 1, 2, ..., 12                     |       |
 * |                                 |     | Lo      | 1st, 2nd, ..., 12th               | 5     |
 * |                                 |     | LL      | 01, 02, ..., 12                   |       |
 * |                                 |     | LLL     | Jan, Feb, ..., Dec                |       |
 * |                                 |     | LLLL    | January, February, ..., December  | 2     |
 * |                                 |     | LLLLL   | J, F, ..., D                      |       |
 * | Local week of year              | 100 | w       | 1, 2, ..., 53                     |       |
 * |                                 |     | wo      | 1st, 2nd, ..., 53th               | 5     |
 * |                                 |     | ww      | 01, 02, ..., 53                   |       |
 * | ISO week of year                | 100 | I       | 1, 2, ..., 53                     | 5     |
 * |                                 |     | Io      | 1st, 2nd, ..., 53th               | 5     |
 * |                                 |     | II      | 01, 02, ..., 53                   | 5     |
 * | Day of month                    |  90 | d       | 1, 2, ..., 31                     |       |
 * |                                 |     | do      | 1st, 2nd, ..., 31st               | 5     |
 * |                                 |     | dd      | 01, 02, ..., 31                   |       |
 * | Day of year                     |  90 | D       | 1, 2, ..., 365, 366               | 7     |
 * |                                 |     | Do      | 1st, 2nd, ..., 365th, 366th       | 5     |
 * |                                 |     | DD      | 01, 02, ..., 365, 366             | 7     |
 * |                                 |     | DDD     | 001, 002, ..., 365, 366           |       |
 * |                                 |     | DDDD    | ...                               | 2     |
 * | Day of week (formatting)        |  90 | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |
 * |                                 |     | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |
 * |                                 |     | EEEEE   | M, T, W, T, F, S, S               |       |
 * |                                 |     | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |
 * | ISO day of week (formatting)    |  90 | i       | 1, 2, 3, ..., 7                   | 5     |
 * |                                 |     | io      | 1st, 2nd, ..., 7th                | 5     |
 * |                                 |     | ii      | 01, 02, ..., 07                   | 5     |
 * |                                 |     | iii     | Mon, Tue, Wed, ..., Sun           | 5     |
 * |                                 |     | iiii    | Monday, Tuesday, ..., Sunday      | 2,5   |
 * |                                 |     | iiiii   | M, T, W, T, F, S, S               | 5     |
 * |                                 |     | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 5     |
 * | Local day of week (formatting)  |  90 | e       | 2, 3, 4, ..., 1                   |       |
 * |                                 |     | eo      | 2nd, 3rd, ..., 1st                | 5     |
 * |                                 |     | ee      | 02, 03, ..., 01                   |       |
 * |                                 |     | eee     | Mon, Tue, Wed, ..., Sun           |       |
 * |                                 |     | eeee    | Monday, Tuesday, ..., Sunday      | 2     |
 * |                                 |     | eeeee   | M, T, W, T, F, S, S               |       |
 * |                                 |     | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |
 * | Local day of week (stand-alone) |  90 | c       | 2, 3, 4, ..., 1                   |       |
 * |                                 |     | co      | 2nd, 3rd, ..., 1st                | 5     |
 * |                                 |     | cc      | 02, 03, ..., 01                   |       |
 * |                                 |     | ccc     | Mon, Tue, Wed, ..., Sun           |       |
 * |                                 |     | cccc    | Monday, Tuesday, ..., Sunday      | 2     |
 * |                                 |     | ccccc   | M, T, W, T, F, S, S               |       |
 * |                                 |     | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |
 * | AM, PM                          |  80 | a..aaa  | AM, PM                            |       |
 * |                                 |     | aaaa    | a.m., p.m.                        | 2     |
 * |                                 |     | aaaaa   | a, p                              |       |
 * | AM, PM, noon, midnight          |  80 | b..bbb  | AM, PM, noon, midnight            |       |
 * |                                 |     | bbbb    | a.m., p.m., noon, midnight        | 2     |
 * |                                 |     | bbbbb   | a, p, n, mi                       |       |
 * | Flexible day period             |  80 | B..BBB  | at night, in the morning, ...     |       |
 * |                                 |     | BBBB    | at night, in the morning, ...     | 2     |
 * |                                 |     | BBBBB   | at night, in the morning, ...     |       |
 * | Hour [1-12]                     |  70 | h       | 1, 2, ..., 11, 12                 |       |
 * |                                 |     | ho      | 1st, 2nd, ..., 11th, 12th         | 5     |
 * |                                 |     | hh      | 01, 02, ..., 11, 12               |       |
 * | Hour [0-23]                     |  70 | H       | 0, 1, 2, ..., 23                  |       |
 * |                                 |     | Ho      | 0th, 1st, 2nd, ..., 23rd          | 5     |
 * |                                 |     | HH      | 00, 01, 02, ..., 23               |       |
 * | Hour [0-11]                     |  70 | K       | 1, 2, ..., 11, 0                  |       |
 * |                                 |     | Ko      | 1st, 2nd, ..., 11th, 0th          | 5     |
 * |                                 |     | KK      | 01, 02, ..., 11, 00               |       |
 * | Hour [1-24]                     |  70 | k       | 24, 1, 2, ..., 23                 |       |
 * |                                 |     | ko      | 24th, 1st, 2nd, ..., 23rd         | 5     |
 * |                                 |     | kk      | 24, 01, 02, ..., 23               |       |
 * | Minute                          |  60 | m       | 0, 1, ..., 59                     |       |
 * |                                 |     | mo      | 0th, 1st, ..., 59th               | 5     |
 * |                                 |     | mm      | 00, 01, ..., 59                   |       |
 * | Second                          |  50 | s       | 0, 1, ..., 59                     |       |
 * |                                 |     | so      | 0th, 1st, ..., 59th               | 5     |
 * |                                 |     | ss      | 00, 01, ..., 59                   |       |
 * | Seconds timestamp               |  40 | t       | 512969520                         |       |
 * |                                 |     | tt      | ...                               | 2     |
 * | Fraction of second              |  30 | S       | 0, 1, ..., 9                      |       |
 * |                                 |     | SS      | 00, 01, ..., 99                   |       |
 * |                                 |     | SSS     | 000, 0001, ..., 999               |       |
 * |                                 |     | SSSS    | ...                               | 2     |
 * | Milliseconds timestamp          |  20 | T       | 512969520900                      |       |
 * |                                 |     | TT      | ...                               | 2     |
 * | Timezone (ISO-8601 w/ Z)        |  10 | X       | -08, +0530, Z                     |       |
 * |                                 |     | XX      | -0800, +0530, Z                   |       |
 * |                                 |     | XXX     | -08:00, +05:30, Z                 |       |
 * |                                 |     | XXXX    | -0800, +0530, Z, +123456          | 2     |
 * |                                 |     | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |
 * | Timezone (ISO-8601 w/o Z)       |  10 | x       | -08, +0530, +00                   |       |
 * |                                 |     | xx      | -0800, +0530, +0000               |       |
 * |                                 |     | xxx     | -08:00, +05:30, +00:00            | 2     |
 * |                                 |     | xxxx    | -0800, +0530, +0000, +123456      |       |
 * |                                 |     | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |
 * | Long localized date             |  NA | P       | 05/29/1453                        | 5,8   |
 * |                                 |     | PP      | May 29, 1453                      |       |
 * |                                 |     | PPP     | May 29th, 1453                    |       |
 * |                                 |     | PPPP    | Sunday, May 29th, 1453            | 2,5,8 |
 * | Long localized time             |  NA | p       | 12:00 AM                          | 5,8   |
 * |                                 |     | pp      | 12:00:00 AM                       |       |
 * | Combination of date and time    |  NA | Pp      | 05/29/1453, 12:00 AM              |       |
 * |                                 |     | PPpp    | May 29, 1453, 12:00:00 AM         |       |
 * |                                 |     | PPPpp   | May 29th, 1453 at ...             |       |
 * |                                 |     | PPPPpp  | Sunday, May 29th, 1453 at ...     | 2,5,8 |
 * Notes:
 * 1. "Formatting" units (e.g. formatting quarter) in the default en-US locale
 *    are the same as "stand-alone" units, but are different in some languages.
 *    "Formatting" units are declined according to the rules of the language
 *    in the context of a date. "Stand-alone" units are always nominative singular.
 *    In `format` function, they will produce different result:
 *
 *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`
 *
 *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`
 *
 *    `parse` will try to match both formatting and stand-alone units interchangably.
 *
 * 2. Any sequence of the identical letters is a pattern, unless it is escaped by
 *    the single quote characters (see below).
 *    If the sequence is longer than listed in table:
 *    - for numerical units (`yyyyyyyy`) `parse` will try to match a number
 *      as wide as the sequence
 *    - for text units (`MMMMMMMM`) `parse` will try to match the widest variation of the unit.
 *      These variations are marked with "2" in the last column of the table.
 *
 * 3. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.
 *    These tokens represent the shortest form of the quarter.
 *
 * 4. The main difference between `y` and `u` patterns are B.C. years:
 *
 *    | Year | `y` | `u` |
 *    |------|-----|-----|
 *    | AC 1 |   1 |   1 |
 *    | BC 1 |   1 |   0 |
 *    | BC 2 |   2 |  -1 |
 *
 *    Also `yy` will try to guess the century of two digit year by proximity with `referenceDate`:
 *
 *    `parse('50', 'yy', new Date(2018, 0, 1)) //=> Sat Jan 01 2050 00:00:00`
 *
 *    `parse('75', 'yy', new Date(2018, 0, 1)) //=> Wed Jan 01 1975 00:00:00`
 *
 *    while `uu` will just assign the year as is:
 *
 *    `parse('50', 'uu', new Date(2018, 0, 1)) //=> Sat Jan 01 0050 00:00:00`
 *
 *    `parse('75', 'uu', new Date(2018, 0, 1)) //=> Tue Jan 01 0075 00:00:00`
 *
 *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),
 *    except local week-numbering years are dependent on `options.weekStartsOn`
 *    and `options.firstWeekContainsDate` (compare [setISOWeekYear]{@link https://date-fns.org/docs/setISOWeekYear}
 *    and [setWeekYear]{@link https://date-fns.org/docs/setWeekYear}).
 *
 * 5. These patterns are not in the Unicode Technical Standard #35:
 *    - `i`: ISO day of week
 *    - `I`: ISO week of year
 *    - `R`: ISO week-numbering year
 *    - `o`: ordinal number modifier
 *    - `P`: long localized date
 *    - `p`: long localized time
 *
 * 6. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.
 *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr
 *
 * 7. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.
 *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr
 *
 * 8. `P+` tokens do not have a defined priority since they are merely aliases to other tokens based
 *    on the given locale.
 *
 *    using `en-US` locale: `P` => `MM/dd/yyyy`
 *    using `en-US` locale: `p` => `hh:mm a`
 *    using `pt-BR` locale: `P` => `dd/MM/yyyy`
 *    using `pt-BR` locale: `p` => `HH:mm`
 *
 * Values will be assigned to the date in the descending order of its unit's priority.
 * Units of an equal priority overwrite each other in the order of appearance.
 *
 * If no values of higher priority are parsed (e.g. when parsing string 'January 1st' without a year),
 * the values will be taken from 3rd argument `referenceDate` which works as a context of parsing.
 *
 * `referenceDate` must be passed for correct work of the function.
 * If you're not sure which `referenceDate` to supply, create a new instance of Date:
 * `parse('02/11/2014', 'MM/dd/yyyy', new Date())`
 * In this case parsing will be done in the context of the current date.
 * If `referenceDate` is `Invalid Date` or a value not convertible to valid `Date`,
 * then `Invalid Date` will be returned.
 *
 * The result may vary by locale.
 *
 * If `formatString` matches with `dateString` but does not provides tokens, `referenceDate` will be returned.
 *
 * If parsing failed, `Invalid Date` will be returned.
 * Invalid Date is a Date, whose time value is NaN.
 * Time value of Date: http://es5.github.io/#x15.9.1.1
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * - Old `parse` was renamed to `toDate`.
 *   Now `parse` is a new function which parses a string using a provided format.
 *
 *   ```javascript
 *   // Before v2.0.0
 *   parse('2016-01-01')
 *
 *   // v2.0.0 onward
 *   toDate('2016-01-01')
 *   parse('2016-01-01', 'yyyy-MM-dd', new Date())
 *   ```
 *
 * @param {String} dateString - the string to parse
 * @param {String} formatString - the string of tokens
 * @param {Date|Number} referenceDate - defines values missing from the parsed dateString
 * @param {Object} [options] - an object with options.
 * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
 * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
 * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year
 * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;
 *   see: https://git.io/fxCyr
 * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;
 *   see: https://git.io/fxCyr
 * @returns {Date} the parsed date
 * @throws {TypeError} 3 arguments required
 * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
 * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7
 * @throws {RangeError} `options.locale` must contain `match` property
 * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr
 * @throws {RangeError} use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr
 * @throws {RangeError} use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr
 * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr
 * @throws {RangeError} format string contains an unescaped latin alphabet character
 *
 * @example
 * // Parse 11 February 2014 from middle-endian format:
 * var result = parse('02/11/2014', 'MM/dd/yyyy', new Date())
 * //=> Tue Feb 11 2014 00:00:00
 *
 * @example
 * // Parse 28th of February in Esperanto locale in the context of 2010 year:
 * import eo from 'date-fns/locale/eo'
 * var result = parse('28-a de februaro', "do 'de' MMMM", new Date(2010, 0, 1), {
 *   locale: eo
 * })
 * //=> Sun Feb 28 2010 00:00:00
 */

/**
 * @name parseISO
 * @category Common Helpers
 * @summary Parse ISO string
 *
 * @description
 * Parse the given string in ISO 8601 format and return an instance of Date.
 *
 * Function accepts complete ISO 8601 formats as well as partial implementations.
 * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601
 *
 * If the argument isn't a string, the function cannot parse the string or
 * the values are invalid, it returns Invalid Date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * - The previous `parse` implementation was renamed to `parseISO`.
 *
 *   ```javascript
 *   // Before v2.0.0
 *   parse('2016-01-01')
 *
 *   // v2.0.0 onward
 *   parseISO('2016-01-01')
 *   ```
 *
 * - `parseISO` now validates separate date and time values in ISO-8601 strings
 *   and returns `Invalid Date` if the date is invalid.
 *
 *   ```javascript
 *   parseISO('2018-13-32')
 *   //=> Invalid Date
 *   ```
 *
 * - `parseISO` now doesn't fall back to `new Date` constructor
 *   if it fails to parse a string argument. Instead, it returns `Invalid Date`.
 *
 * @param {String} argument - the value to convert
 * @param {Object} [options] - an object with options.
 * @param {0|1|2} [options.additionalDigits=2] - the additional number of digits in the extended year format
 * @returns {Date} the parsed date in the local time zone
 * @throws {TypeError} 1 argument required
 * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
 *
 * @example
 * // Convert string '2014-02-11T11:30:30' to date:
 * var result = parseISO('2014-02-11T11:30:30')
 * //=> Tue Feb 11 2014 11:30:30
 *
 * @example
 * // Convert string '+02014101' to date,
 * // if the additional number of digits in the extended year format is 1:
 * var result = parseISO('+02014101', { additionalDigits: 1 })
 * //=> Fri Apr 11 2014 00:00:00
 */

/**
 * @name setHours
 * @category Hour Helpers
 * @summary Set the hours to the given date.
 *
 * @description
 * Set the hours to the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} hours - the hours of the new date
 * @returns {Date} the new date with the hours set
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Set 4 hours to 1 September 2014 11:30:00:
 * var result = setHours(new Date(2014, 8, 1, 11, 30), 4)
 * //=> Mon Sep 01 2014 04:30:00
 */

/**
 * @name setMinutes
 * @category Minute Helpers
 * @summary Set the minutes to the given date.
 *
 * @description
 * Set the minutes to the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} minutes - the minutes of the new date
 * @returns {Date} the new date with the minutes set
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Set 45 minutes to 1 September 2014 11:30:40:
 * var result = setMinutes(new Date(2014, 8, 1, 11, 30, 40), 45)
 * //=> Mon Sep 01 2014 11:45:40
 */

/**
 * @name setMonth
 * @category Month Helpers
 * @summary Set the month to the given date.
 *
 * @description
 * Set the month to the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} month - the month of the new date
 * @returns {Date} the new date with the month set
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Set February to 1 September 2014:
 * var result = setMonth(new Date(2014, 8, 1), 1)
 * //=> Sat Feb 01 2014 00:00:00
 */

/**
 * @name setSeconds
 * @category Second Helpers
 * @summary Set the seconds to the given date.
 *
 * @description
 * Set the seconds to the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} seconds - the seconds of the new date
 * @returns {Date} the new date with the seconds set
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Set 45 seconds to 1 September 2014 11:30:40:
 * var result = setSeconds(new Date(2014, 8, 1, 11, 30, 40), 45)
 * //=> Mon Sep 01 2014 11:30:45
 */

/**
 * @name setYear
 * @category Year Helpers
 * @summary Set the year to the given date.
 *
 * @description
 * Set the year to the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} year - the year of the new date
 * @returns {Date} the new date with the year set
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Set year 2013 to 1 September 2014:
 * var result = setYear(new Date(2014, 8, 1), 2013)
 * //=> Sun Sep 01 2013 00:00:00
 */

/**
 * @name startOfDay
 * @category Day Helpers
 * @summary Return the start of a day for the given date.
 *
 * @description
 * Return the start of a day for the given date.
 * The result will be in the local timezone.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the original date
 * @returns {Date} the start of a day
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // The start of a day for 2 September 2014 11:55:00:
 * var result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))
 * //=> Tue Sep 02 2014 00:00:00
 */

/**
 * @name startOfHour
 * @category Hour Helpers
 * @summary Return the start of an hour for the given date.
 *
 * @description
 * Return the start of an hour for the given date.
 * The result will be in the local timezone.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the original date
 * @returns {Date} the start of an hour
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // The start of an hour for 2 September 2014 11:55:00:
 * var result = startOfHour(new Date(2014, 8, 2, 11, 55))
 * //=> Tue Sep 02 2014 11:00:00
 */

/**
 * @name startOfMonth
 * @category Month Helpers
 * @summary Return the start of a month for the given date.
 *
 * @description
 * Return the start of a month for the given date.
 * The result will be in the local timezone.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the original date
 * @returns {Date} the start of a month
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // The start of a month for 2 September 2014 11:55:00:
 * var result = startOfMonth(new Date(2014, 8, 2, 11, 55, 0))
 * //=> Mon Sep 01 2014 00:00:00
 */

/**
 * @name startOfWeek
 * @category Week Helpers
 * @summary Return the start of a week for the given date.
 *
 * @description
 * Return the start of a week for the given date.
 * The result will be in the local timezone.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the original date
 * @param {Object} [options] - an object with options.
 * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
 * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
 * @returns {Date} the start of a week
 * @throws {TypeError} 1 argument required
 * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
 *
 * @example
 * // The start of a week for 2 September 2014 11:55:00:
 * var result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))
 * //=> Sun Aug 31 2014 00:00:00
 *
 * @example
 * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:
 * var result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })
 * //=> Mon Sep 01 2014 00:00:00
 */

/**
 * @name startOfYear
 * @category Year Helpers
 * @summary Return the start of a year for the given date.
 *
 * @description
 * Return the start of a year for the given date.
 * The result will be in the local timezone.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the original date
 * @returns {Date} the start of a year
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // The start of a year for 2 September 2014 11:55:00:
 * var result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))
 * //=> Wed Jan 01 2014 00:00:00
 */

/**
 * @name subMilliseconds
 * @category Millisecond Helpers
 * @summary Subtract the specified number of milliseconds from the given date.
 *
 * @description
 * Subtract the specified number of milliseconds from the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of milliseconds to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
 * @returns {Date} the new date with the milliseconds subtracted
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:
 * var result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)
 * //=> Thu Jul 10 2014 12:45:29.250
 */

/**
 * @name toDate
 * @category Common Helpers
 * @summary Convert the given argument to an instance of Date.
 *
 * @description
 * Convert the given argument to an instance of Date.
 *
 * If the argument is an instance of Date, the function returns its clone.
 *
 * If the argument is a number, it is treated as a timestamp.
 *
 * If the argument is none of the above, the function returns Invalid Date.
 *
 * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.
 *
 * @param {Date|Number} argument - the value to convert
 * @returns {Date} the parsed date in the local time zone
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // Clone the date:
 * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))
 * //=> Tue Feb 11 2014 11:30:30
 *
 * @example
 * // Convert the timestamp to date:
 * const result = toDate(1392098430000)
 * //=> Tue Feb 11 2014 11:30:30
 */

/**
 * @param {any} obj The object to inspect.
 * @returns {boolean} True if the argument appears to be a plain object.
 */

/**
 * @param {function} Component
 * @param {string} fallback
 * @returns {string | undefined}
 */

/**
 * @param {string|Array} props
 * @param {object} param
 * @param {string} param.prop
 * @param {number} param.duration
 * @param {string} param.easing
 * @param {number} param.delay
 */

/**
 * @see @link{https://material.io/design/typography/the-type-system.html}
 * @see @link{https://material.io/design/typography/understanding-typography.html}
 */

/**
 * A <Link> wrapper that knows if it's "active" or not.
 */

/**
 * A `CancelToken` is an object that can be used to request cancellation of an operation.
 *
 * @class
 * @param {Function} executor The executor function.
 */

/**
 * A `Cancel` is an object that is thrown when an operation is canceled.
 *
 * @class
 * @param {string=} message The message.
 */

/**
 * A better abstraction over CSS.
 *
 * @copyright Oleg Isonen (Slobodskoi) / Isonen 2014-present
 * @website https://github.com/cssinjs/jss
 * @license MIT
 */

/**
 * A class to parse color values
 * @author Stoyan Stefanov <sstoo@gmail.com>
 * {@link   http://www.phpied.com/rgb-color-parser-in-javascript/}
 * @license Use it if you like it
 */

/**
 * A hook to access the redux `dispatch` function.
 *
 * @returns {any|function} redux store's `dispatch` function
 *
 * @example
 *
 * import React, { useCallback } from 'react'
 * import { useDispatch } from 'react-redux'
 *
 * export const CounterComponent = ({ value }) => {
 *   const dispatch = useDispatch()
 *   const increaseCounter = useCallback(() => dispatch({ type: 'increase-counter' }), [])
 *   return (
 *     <div>
 *       <span>{value}</span>
 *       <button onClick={increaseCounter}>Increase counter</button>
 *     </div>
 *   )
 * }
 */

/**
 * A hook to access the redux store's state. This hook takes a selector function
 * as an argument. The selector is called with the store state.
 *
 * This hook takes an optional equality comparison function as the second parameter
 * that allows you to customize the way the selected state is compared to determine
 * whether the component needs to be re-rendered.
 *
 * @param {Function} selector the selector function
 * @param {Function=} equalityFn the function that will be used to determine equality
 *
 * @returns {any} the selected state
 *
 * @example
 *
 * import React from 'react'
 * import { useSelector } from 'react-redux'
 *
 * export const CounterComponent = () => {
 *   const counter = useSelector(state => state.counter)
 *   return <div>{counter}</div>
 * }
 */

/**
 * A hook to access the redux store.
 *
 * @returns {any} the redux store
 *
 * @example
 *
 * import React from 'react'
 * import { useStore } from 'react-redux'
 *
 * export const ExampleComponent = () => {
 *   const store = useStore()
 *   return <div>{store.getState()}</div>
 * }
 */

/**
 * A hook to access the value of the `ReactReduxContext`. This is a low-level
 * hook that you should usually not need to call directly.
 *
 * @returns {any} the value of the `ReactReduxContext`
 *
 * @example
 *
 * import React from 'react'
 * import { useReduxContext } from 'react-redux'
 *
 * export const CounterComponent = ({ value }) => {
 *   const { store } = useReduxContext()
 *   return <div>{store.getState()}</div>
 * }
 */

/**
 * A permanently displayed menu following https://www.w3.org/TR/wai-aria-practices/#menubutton.
 * It's exposed to help customization of the [`Menu`](/api/menu/) component. If you
 * use it separately you need to move focus into the component manually. Once
 * the focus is placed inside the component it is fully keyboard accessible.
 */

/**
 * A public higher-order component to access the imperative API
 */

/**
 * A simple wrapper to apply `List` styles to an `Icon` or `SvgIcon`.
 */

/**
 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the raw `toStringTag`.
 */

/**
 * Accepts varargs expecting each argument to be an object, then
 * immutably merges the properties of each object and returns result.
 *
 * When multiple objects contain the same key the later object in
 * the arguments list will take precedence.
 *
 * Example:
 *
 * ```js
 * var result = merge({foo: 123}, {foo: 456});
 * console.log(result.foo); // outputs 456
 * ```
 *
 * @param {Object} obj1 Object to merge
 * @returns {Object} Result of all merge properties
 */

/**
 * Add a new interceptor to the stack
 *
 * @param {Function} fulfilled The function to handle `then` for a `Promise`
 * @param {Function} rejected The function to handle `reject` for a `Promise`
 *
 * @return {Number} An ID used to remove interceptor later
 */

/**
 * Add unit to numeric values.
 */

/**
 * Add vendor prefix to a property name when needed.
 *
 * @api public
 */

/**
 * Allow camel cased property names by converting them back to dasherized.
 *
 * @param {Rule} rule
 */

/**
 * Attach the keys as a property of the regexp.
 *
 * @param  {!RegExp} re
 * @param  {Array}   keys
 * @return {!RegExp}
 */

/**
 * Based on the jquery plugin https://github.com/othree/jquery.rtl-scroll-type
 *
 * Types of scrollLeft, assiming scrollWidth=100 and direction is rtl.
 *
 * Browser        | Type          | <- Most Left | Most Right -> | Initial
 * -------------- | ------------- | ------------ | ------------- | -------
 * WebKit         | default       | 0            | 100           | 100
 * Firefox/Opera  | negative      | -100         | 0             | 0
 * IE/Edge        | reverse       | 100          | 0             | 0
 */

/**
 * Build a URL by appending params to the end
 *
 * @param {string} url The base of the url (e.g., http://www.google.com)
 * @param {object} [params] The params to be appended
 * @returns {string} The formatted url
 */

/**
 * Calculate the column widths
 */

/**
 * Calculates the contrast ratio between two colors.
 *
 * Formula: https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests
 *
 * @param {string} foreground - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
 * @param {string} background - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
 * @returns {number} A contrast ratio value in the range 0 - 21.
 */

/**
 * Check if the given element is fixed or is inside a fixed parent
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @argument {Element} customContainer
 * @returns {Boolean} answer to "isFixed?"
 */

/**
 * Check if the given variable is a function
 * @method
 * @memberof Popper.Utils
 * @argument {Any} functionToCheck - variable to check
 * @returns {Boolean} answer to: is a function?
 */

/**
 * Checks if `value` is classified as a `Symbol` primitive or object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
 * @example
 *
 * _.isSymbol(Symbol.iterator);
 * // => true
 *
 * _.isSymbol('abc');
 * // => false
 */

/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */

/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */

/**
 * Chips represent complex entities in small blocks, such as a contact.
 */

/**
 * Clones the object and adds a camel cased property version.
 */

/**
 * Compile a string to a template function for the path.
 *
 * @param  {string}             str
 * @param  {Object=}            options
 * @return {!function(Object=, Object=)}
 */

/**
 * Composes single-argument functions from right to left. The rightmost
 * function can take multiple arguments as it provides the signature for
 * the resulting composite function.
 *
 * @param {...Function} funcs The functions to compose.
 * @returns {Function} A function obtained by composing the argument functions
 * from right to left. For example, compose(f, g, h) is identical to doing
 * (...args) => f(g(h(...args))).
 */

/**
 * Computed the boundaries limits and return them
 * @method
 * @memberof Popper.Utils
 * @param {HTMLElement} popper
 * @param {HTMLElement} reference
 * @param {number} padding
 * @param {HTMLElement} boundariesElement - Element used to define the boundaries
 * @param {Boolean} fixedPosition - Is in fixed position mode
 * @returns {Object} Coordinates of the boundaries
 */

/**
 * Config-specific merge-function which creates a new config-object
 * by merging two configuration objects together.
 *
 * @param {Object} config1
 * @param {Object} config2
 * @returns {Object} New object resulting from merging config2 to config1
 */

/**
 * Convert array of 16 byte values to UUID string format of the form:
 * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX
 */

/**
 * Convert camel cased property names to dash separated.
 *
 * @param {Object} style
 * @return {Object}
 */

/**
 * Convert dash separated strings to camel-cased.
 *
 * @param {String} str
 * @return {String}
 * @api private
 */

/**
 * Convert dash separated strings to pascal cased.
 *
 * @param {String} str
 * @return {String}
 * @api private
 */

/**
 * Convert nested rules to separate, remove them from original styles.
 *
 * @param {Rule} rule
 * @api public
 */

/**
 * Converts `value` to a number.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to process.
 * @returns {number} Returns the number.
 * @example
 *
 * _.toNumber(3.2);
 * // => 3.2
 *
 * _.toNumber(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toNumber(Infinity);
 * // => Infinity
 *
 * _.toNumber('3.2');
 * // => 3.2
 */

/**
 * Converts `value` to a string using `Object.prototype.toString`.
 *
 * @private
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 */

/**
 * Converts a Rule to CSS string.
 */

/**
 * Converts a color from CSS hex format to CSS rgb format.
 *
 * @param {string} color - Hex color, i.e. #nnn or #nnnnnn
 * @returns {string} A CSS rgb color string
 */

/**
 * Converts a color from CSS rgb format to CSS hex format.
 *
 * @param {string} color - RGB color, i.e. rgb(n, n, n)
 * @returns {string} A CSS rgb color string, i.e. #nnnnnn
 */

/**
 * Converts a color from hsl format to rgb format.
 *
 * @param {string} color - HSL color values
 * @returns {string} rgb color values
 */

/**
 * Converts a color object with type and values to a string.
 *
 * @param {object} color - Decomposed color
 * @param {string} color.type - One of: 'rgb', 'rgba', 'hsl', 'hsla'
 * @param {array} color.values - [n,n,n] or [n,n,n,n]
 * @returns {string} A CSS color string
 */

/**
 * Converts a string containing value + unit into a px value number
 * @function
 * @memberof {modifiers~offset}
 * @private
 * @argument {String} str - Value + unit string
 * @argument {String} measurement - `height` or `width`
 * @argument {Object} popperOffsets
 * @argument {Object} referenceOffsets
 * @returns {Number|String}
 * Value in pixels, or original string if no values were extracted
 */

/**
 * Converts array values to string.
 *
 * `margin: [['5px', '10px']]` > `margin: 5px 10px;`
 * `border: ['1px', '2px']` > `border: 1px, 2px;`
 * `margin: [['5px', '10px'], '!important']` > `margin: 5px 10px !important;`
 * `color: ['red', !important]` > `color: red !important;`
 */

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

/**
 * Copyright 2015, Yahoo! Inc.
 * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
 */

/**
 * Create a new instance of Axios
 *
 * @param {Object} instanceConfig The default config for the instance
 */

/**
 * Create a path regexp from string input.
 *
 * @param  {string}  path
 * @param  {!Array}  keys
 * @param  {!Object} options
 * @return {!RegExp}
 */

/**
 * Create a rule instance.
 */

/**
 * Create an Error with the specified message, config, error code, request and response.
 *
 * @param {string} message The error message.
 * @param {Object} config The config.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 * @returns {Error} The created error.
 */

/**
 * Create an instance of Axios
 *
 * @param {Object} defaultConfig The default config for the instance
 * @return {Axios} A new instance of Axios
 */

/**
 * Creates a Redux store that holds the state tree.
 * The only way to change the data in the store is to call `dispatch()` on it.
 *
 * There should only be a single store in your app. To specify how different
 * parts of the state tree respond to actions, you may combine several reducers
 * into a single reducer function by using `combineReducers`.
 *
 * @param {Function} reducer A function that returns the next state tree, given
 * the current state tree and the action to handle.
 *
 * @param {any} [preloadedState] The initial state. You may optionally specify it
 * to hydrate the state from the server in universal apps, or to restore a
 * previously serialized user session.
 * If you use `combineReducers` to produce the root reducer function, this must be
 * an object with the same shape as `combineReducers` keys.
 *
 * @param {Function} [enhancer] The store enhancer. You may optionally specify it
 * to enhance the store with third-party capabilities such as middleware,
 * time travel, persistence, etc. The only store enhancer that ships with Redux
 * is `applyMiddleware()`.
 *
 * @returns {Store} A Redux store that lets you read the state, dispatch actions
 * and subscribe to changes.
 */

/**
 * Creates a debounced function that delays invoking `func` until after `wait`
 * milliseconds have elapsed since the last time the debounced function was
 * invoked. The debounced function comes with a `cancel` method to cancel
 * delayed `func` invocations and a `flush` method to immediately invoke them.
 * Provide `options` to indicate whether `func` should be invoked on the
 * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
 * with the last arguments provided to the debounced function. Subsequent
 * calls to the debounced function return the result of the last `func`
 * invocation.
 *
 * **Note:** If `leading` and `trailing` options are `true`, `func` is
 * invoked on the trailing edge of the timeout only if the debounced function
 * is invoked more than once during the `wait` timeout.
 *
 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
 * until to the next tick, similar to `setTimeout` with a timeout of `0`.
 *
 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
 * for details over the differences between `_.debounce` and `_.throttle`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to debounce.
 * @param {number} [wait=0] The number of milliseconds to delay.
 * @param {Object} [options={}] The options object.
 * @param {boolean} [options.leading=false]
 *  Specify invoking on the leading edge of the timeout.
 * @param {number} [options.maxWait]
 *  The maximum time `func` is allowed to be delayed before it's invoked.
 * @param {boolean} [options.trailing=true]
 *  Specify invoking on the trailing edge of the timeout.
 * @returns {Function} Returns the new debounced function.
 * @example
 *
 * // Avoid costly calculations while the window size is in flux.
 * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
 *
 * // Invoke `sendMail` when clicked, debouncing subsequent calls.
 * jQuery(element).on('click', _.debounce(sendMail, 300, {
 *   'leading': true,
 *   'trailing': false
 * }));
 *
 * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
 * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
 * var source = new EventSource('/stream');
 * jQuery(source).on('message', debounced);
 *
 * // Cancel the trailing debounced invocation.
 * jQuery(window).on('popstate', debounced.cancel);
 */

/**
 * Creates a history object that stores locations in memory.
 */

/**
 * Creates a history object that uses the HTML5 history API including
 * pushState, replaceState, and the popstate event.
 */

/**
 * Creates a new URL by combining the baseURL with the requestedURL,
 * only when the requestedURL is not already an absolute URL.
 * If the requestURL is absolute, this function returns the requestedURL untouched.
 *
 * @param {string} baseURL The base URL
 * @param {string} requestedURL Absolute or relative URL to combine
 * @returns {string} The combined full path
 */

/**
 * Creates a new URL by combining the specified URLs
 *
 * @param {string} baseURL The base URL
 * @param {string} relativeURL The relative URL
 * @returns {string} The combined URL
 */

/**
 * Creates a store enhancer that applies middleware to the dispatch method
 * of the Redux store. This is handy for a variety of tasks, such as expressing
 * asynchronous actions in a concise manner, or logging every action payload.
 *
 * See `redux-thunk` package as an example of the Redux middleware.
 *
 * Because middleware is potentially asynchronous, this should be the first
 * store enhancer in the composition chain.
 *
 * Note that each middleware will be given the `dispatch` and `getState` functions
 * as named arguments.
 *
 * @param {...Function} middlewares The middleware chain to be applied.
 * @returns {Function} A store enhancer applying the middleware.
 */

/**
 * Creates a throttled function that only invokes `func` at most once per
 * every `wait` milliseconds. The throttled function comes with a `cancel`
 * method to cancel delayed `func` invocations and a `flush` method to
 * immediately invoke them. Provide `options` to indicate whether `func`
 * should be invoked on the leading and/or trailing edge of the `wait`
 * timeout. The `func` is invoked with the last arguments provided to the
 * throttled function. Subsequent calls to the throttled function return the
 * result of the last `func` invocation.
 *
 * **Note:** If `leading` and `trailing` options are `true`, `func` is
 * invoked on the trailing edge of the timeout only if the throttled function
 * is invoked more than once during the `wait` timeout.
 *
 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
 * until to the next tick, similar to `setTimeout` with a timeout of `0`.
 *
 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
 * for details over the differences between `_.throttle` and `_.debounce`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to throttle.
 * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
 * @param {Object} [options={}] The options object.
 * @param {boolean} [options.leading=true]
 *  Specify invoking on the leading edge of the timeout.
 * @param {boolean} [options.trailing=true]
 *  Specify invoking on the trailing edge of the timeout.
 * @returns {Function} Returns the new throttled function.
 * @example
 *
 * // Avoid excessively updating the position while scrolling.
 * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
 *
 * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
 * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
 * jQuery(element).on('click', throttled);
 *
 * // Cancel the trailing throttled invocation.
 * jQuery(window).on('popstate', throttled.cancel);
 */

/**
 * Darken or lighten a color, depending on its luminance.
 * Light colors are darkened, dark colors are lightened.
 *
 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
 * @param {number} coefficient=0.15 - multiplier in the range 0 - 1
 * @returns {string} A CSS color string. Hex input values are returned as rgb
 */

/**
 * Darkens a color.
 *
 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
 * @param {number} coefficient - multiplier in the range 0 - 1
 * @returns {string} A CSS color string. Hex input values are returned as rgb
 */

/**
 * Default options provided to Popper.js constructor.<br />
 * These can be overridden using the `options` argument of Popper.js.<br />
 * To override an option, simply pass an object with the same
 * structure of the `options` object, as the 3rd argument. For example:
 * ```
 * new Popper(ref, pop, {
 *   modifiers: {
 *     preventOverflow: { enabled: false }
 *   }
 * })
 * ```
 * @type {Object}
 * @static
 * @memberof Popper
 */

/**
 * Destroys the popper.
 * @method
 * @memberof Popper
 */

/**
 * Determine if a value is a Blob
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Blob, otherwise false
 */

/**
 * Determine if a value is a Buffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Buffer, otherwise false
 */

/**
 * Determine if a value is a Date
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Date, otherwise false
 */

/**
 * Determine if a value is a File
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a File, otherwise false
 */

/**
 * Determine if a value is a FormData
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an FormData, otherwise false
 */

/**
 * Determine if a value is a Function
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Function, otherwise false
 */

/**
 * Determine if a value is a Number
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Number, otherwise false
 */

/**
 * Determine if a value is a Stream
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Stream, otherwise false
 */

/**
 * Determine if a value is a String
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a String, otherwise false
 */

/**
 * Determine if a value is a URLSearchParams object
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a URLSearchParams object, otherwise false
 */

/**
 * Determine if a value is a plain Object
 *
 * @param {Object} val The value to test
 * @return {boolean} True if value is a plain Object, otherwise false
 */

/**
 * Determine if a value is a view on an ArrayBuffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false
 */

/**
 * Determine if a value is an Array
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Array, otherwise false
 */

/**
 * Determine if a value is an ArrayBuffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an ArrayBuffer, otherwise false
 */

/**
 * Determine if a value is an Object
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Object, otherwise false
 */

/**
 * Determine if a value is undefined
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if the value is undefined, otherwise false
 */

/**
 * Determine if we're running in a standard browser environment
 *
 * This allows axios to run in a web worker, and react-native.
 * Both environments support XMLHttpRequest, but not fully standard globals.
 *
 * web workers:
 *  typeof window -> undefined
 *  typeof document -> undefined
 *
 * react-native:
 *  navigator.product -> 'ReactNative'
 * nativescript
 *  navigator.product -> 'NativeScript' or 'NS'
 */

/**
 * Determines if the browser is Internet Explorer
 * @method
 * @memberof Popper.Utils
 * @param {Number} version to check
 * @returns {Boolean} isIE
 */

/**
 * Determines whether the specified URL is absolute
 *
 * @param {string} url The URL to test
 * @returns {boolean} True if the specified URL is absolute, otherwise false
 */

/**
 * Dialog will responsively be full screen *at or below* the given breakpoint
 * (defaults to 'sm' for mobile devices).
 * Notice that this Higher-order Component is incompatible with server-side rendering.
 */

/**
 * Dispatch a request
 *
 * @param {Object} config The config specific for this request (merged with this.defaults)
 */

/**
 * Dispatch a request to the server using the configured adapter.
 *
 * @param {object} config The config that is to be used for the request
 * @returns {Promise} The Promise to be fulfilled
 */

/**
 * Distribute resizeWidth on passed resizable columns
 */

/**
 * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.
 *
 * @param  {string}
 * @return {string}
 */

/**
 * Escape a regular expression string.
 *
 * @param  {string} str
 * @return {string}
 */

/**
 * Escape the capturing group by escaping special characters and meaning.
 *
 * @param  {string} group
 * @return {string}
 */

/**
 * Export a constant indicating if this browser has CSSTOM support.
 * https://developers.google.com/web/updates/2018/03/cssom
 */

/**
 * Expose `pathToRegexp`.
 */

/**
 * Expose a function for taking tokens and returning a RegExp.
 *
 * @param  {!Array}          tokens
 * @param  {(Array|Object)=} keys
 * @param  {Object=}         options
 * @return {!RegExp}
 */

/**
 * Expose a method for transforming tokens into the path function.
 */

/**
 * Extends object a by mutably adding to it the properties of object b.
 *
 * @param {Object} a The object to be extended
 * @param {Object} b The object to copy properties from
 * @param {Object} thisArg The object to bind function to
 * @return {Object} The resulting value of object a
 */

/**
 * Extracts a styles object with only props that contain function values.
 */

/**
 * Find a comment with "jss" inside.
 */

/**
 * Find a node before which we can insert the sheet.
 */

/**
 * Find attached sheet with an index higher than the passed one.
 */

/**
 * Find attached sheet with the highest index.
 */

/**
 * Finds the first parent of an element that has a transformed property defined
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Element} first transformed parent or documentElement
 */

/**
 * Finds the offset parent common to the two provided nodes
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element1
 * @argument {Element} element2
 * @returns {Element} common offset parent
 */

/**
 * Finds the root node (document, shadowDOM root) of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} node
 * @returns {Element} root node
 */

/**
 * Get CSS computed property of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Eement} element
 * @argument {String} property
 */

/**
 * Get a style property value.
 */

/**
 * Get bounding client rect of given element
 * @method
 * @memberof Popper.Utils
 * @param {HTMLElement} element
 * @return {Object} client rect
 */

/**
 * Get offsets to the popper
 * @method
 * @memberof Popper.Utils
 * @param {Object} position - CSS position the Popper will get applied
 * @param {HTMLElement} popper - the popper element
 * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)
 * @param {String} placement - one of the valid placement options
 * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper
 */

/**
 * Get offsets to the reference element
 * @method
 * @memberof Popper.Utils
 * @param {Object} state
 * @param {Element} popper - the popper element
 * @param {Element} reference - the reference element (the popper will be relative to this)
 * @param {Element} fixedPosition - is in fixed position mode
 * @returns {Object} An object containing the offsets which will be applied to the popper
 */

/**
 * Get the flags for a regexp from the options.
 *
 * @param  {Object} options
 * @return {string}
 */

/**
 * Get the opposite placement of the given one
 * @method
 * @memberof Popper.Utils
 * @argument {String} placement
 * @returns {String} flipped placement
 */

/**
 * Get the opposite placement variation of the given one
 * @method
 * @memberof Popper.Utils
 * @argument {String} placement variation
 * @returns {String} flipped placement variation
 */

/**
 * Get the outer sizes of the given element (offset size + margins)
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Object} object containing width and height properties
 */

/**
 * Get the prefixed supported property name
 * @method
 * @memberof Popper.Utils
 * @argument {String} property (camelCase)
 * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)
 */

/**
 * Get the window associated with the element
 * @argument {Element} element
 * @returns {Window}
 */

/**
 * Gets the `head` element upon the first call and caches it.
 * We assume it can't be null.
 */

/**
 * Gets the scroll value of the given element in the given side (top and left)
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @argument {String} side `top` or `left`
 * @returns {number} amount of scrolled pixels
 */

/**
 * Gets the timestamp of the number of milliseconds that have elapsed since
 * the Unix epoch (1 January 1970 00:00:00 UTC).
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Date
 * @returns {number} Returns the timestamp.
 * @example
 *
 * _.defer(function(stamp) {
 *   console.log(_.now() - stamp);
 * }, _.now());
 * // => Logs the number of milliseconds it took for the deferred invocation.
 */

/**
 * Given `this.props.children`, return an object mapping key to child.
 *
 * @param {*} children `this.props.children`
 * @return {object} Mapping of key to child
 */

/**
 * Given an initial placement, returns all the subsequent placements
 * clockwise (or counter-clockwise).
 *
 * @method
 * @memberof Popper.Utils
 * @argument {String} placement - A valid placement (it accepts variations)
 * @argument {Boolean} counter - Set to true to walk the placements counterclockwise
 * @returns {Array} placements including their variations
 */

/**
 * Given element offsets, generate an output similar to getBoundingClientRect
 * @method
 * @memberof Popper.Utils
 * @argument {Object} offsets
 * @returns {Object} ClientRect like output
 */

/**
 * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.
 * They usually appear for dates that denote time before the timezones were introduced
 * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891
 * and GMT+01:00:00 after that date)
 *
 * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,
 * which would lead to incorrect calculations.
 *
 * This function returns the timezone offset in milliseconds that takes seconds in account.
 */

/**
 * Helper used to know if the given modifier depends from another one.<br />
 * It checks if the needed modifier is listed and enabled.
 * @method
 * @memberof Popper.Utils
 * @param {Array} modifiers - list of modifiers
 * @param {String} requestingName - name of requesting modifier
 * @param {String} requestedName - name of requested modifier
 * @returns {Boolean}
 */

/**
 * Helper used to know if the given modifier is enabled.
 * @method
 * @memberof Popper.Utils
 * @returns {Boolean}
 */

/**
 * Hook factory, which creates a `useDispatch` hook bound to a given context.
 *
 * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.
 * @returns {Function} A `useDispatch` hook bound to the specified context.
 */

/**
 * Hook factory, which creates a `useSelector` hook bound to a given context.
 *
 * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.
 * @returns {Function} A `useSelector` hook bound to the specified context.
 */

/**
 * Hook factory, which creates a `useStore` hook bound to a given context.
 *
 * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.
 * @returns {Function} A `useStore` hook bound to the specified context.
 */

/**
 * If at any point a user clicks with a pointing device, ensure that we change
 * the modality away from keyboard.
 * This avoids the situation where a user presses a key on an already focused
 * element, and then clicks on a different element, focusing it with a
 * pointing device, while we still think we're in keyboard modality.
 */

/**
 * Improved text function with halign and valign support
 * Inspiration from: http://stackoverflow.com/questions/28327510/align-text-right-using-jspdf/28433113#28433113
 */

/**
 * Indent a string.
 * http://jsperf.com/array-join-vs-for
 */

/**
 * Insert style element into the DOM.
 */

/**
 * It will add resize/scroll events and start recalculating
 * position of the popper element when they are triggered.
 * @method
 * @memberof Popper
 */

/**
 * It will remove resize/scroll events and won't recalculate popper position
 * when they are triggered. It also won't trigger `onUpdate` callback anymore,
 * unless you call `update` method manually.
 * @method
 * @memberof Popper
 */

/**
 * Iterate over all the registered interceptors
 *
 * This method is particularly useful for skipping over any
 * interceptors that may have become `null` calling `eject`.
 *
 * @param {Function} fn The function to call for each interceptor
 */

/**
 * Iterate over an Array or an Object invoking a function for each item.
 *
 * If `obj` is an Array callback will be called passing
 * the value, index, and complete array for each item.
 *
 * If 'obj' is an Object callback will be called passing
 * the value, key, and complete object for each property.
 *
 * @param {Object|Array} obj The object to iterate
 * @param {Function} fn The callback to invoke for each item
 */

/**
 * Keep track of our keyboard modality state with `hadKeyboardEvent`.
 * If the most recent user interaction was via the keyboard;
 * and the key press did not include a meta, alt/option, or control key;
 * then the modality is keyboard. Otherwise, the modality is not keyboard.
 * @param {KeyboardEvent} event
 */

/**
 * Kickstart an elegant, consistent, and simple baseline to build upon.
 */

/**
 * Lightens a color.
 *
 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
 * @param {number} coefficient - multiplier in the range 0 - 1
 * @returns {string} A CSS color string. Hex input values are returned as rgb
 */

/**
 * List of accepted placements to use as values of the `placement` option.<br />
 * Valid placements are:
 * - `auto`
 * - `top`
 * - `right`
 * - `bottom`
 * - `left`
 *
 * Each placement can have a variation from this list:
 * - `-start`
 * - `-end`
 *
 * Variations are interpreted easily if you think of them as the left to right
 * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`
 * is right.<br />
 * Vertically (`left` and `right`), `start` is top and `end` is bottom.
 *
 * Some valid examples are:
 * - `top-end` (on top of reference, right aligned)
 * - `right-start` (on right of reference, top aligned)
 * - `bottom` (on bottom, centered)
 * - `auto-end` (on the side with more space available, alignment depends by placement)
 *
 * @static
 * @type {Array}
 * @enum {String}
 * @readonly
 * @method placements
 * @memberof Popper
 */

/**
 * Listen for click events that occur somewhere in the document, outside of the element itself.
 * For instance, if you need to hide a menu when people click anywhere else on your page.
 */

/**
 * Loop trough the list of modifiers and run them in order,
 * each of them will then edit the data object.
 * @method
 * @memberof Popper.Utils
 * @param {dataObject} data
 * @param {Array} modifiers
 * @param {String} ends - Optional modifier name used as stopper
 * @returns {dataObject}
 */

/**
 * Mimics the `find` method of Array
 * @method
 * @memberof Popper.Utils
 * @argument {Array} arr
 * @argument prop
 * @argument value
 * @returns index or -1
 */

/**
 * Modifier function, each modifier can have a function of this type assigned
 * to its `fn` property.<br />
 * These functions will be called on each update, this means that you must
 * make sure they are performant enough to avoid performance bottlenecks.
 *
 * @function ModifierFn
 * @argument {dataObject} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {dataObject} The data object, properly modified
 */

/**
 * Modifiers are plugins used to alter the behavior of your poppers.<br />
 * Popper.js uses a set of 9 modifiers to provide all the basic functionalities
 * needed by the library.
 *
 * Usually you don't want to override the `order`, `fn` and `onLoad` props.
 * All the other properties are configurations that could be tweaked.
 * @namespace modifiers
 */

/**
 * Must be used as the last child of ListItem to function properly.
 */

/**
 * NoSsr purposely removes components from the subject of Server Side Rendering (SSR).
 *
 * This component can be useful in a variety of situations:
 * - Escape hatch for broken dependencies not supporting SSR.
 * - Improve the time-to-first paint on the client by only rendering above the fold.
 * - Reduce the rendering time on the server.
 * - Under too heavy server load, you can turn on service degradation.
 */

/**
 * Normalize the given path string, returning a regular expression.
 *
 * An empty array can be passed in for the keys, which will hold the
 * placeholder key descriptions. For example, using `/user/:id`, `keys` will
 * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.
 *
 * @param  {(string|RegExp|Array)} path
 * @param  {(Array|Object)=}       keys
 * @param  {Object=}               options
 * @return {!RegExp}
 */

/**
 * Parse a string for the raw tokens.
 *
 * @param  {string}  str
 * @param  {Object=} options
 * @return {!Array}
 */

/**
 * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.
 * @function
 * @memberof {modifiers~offset}
 * @private
 * @argument {String} offset
 * @argument {Object} popperOffsets
 * @argument {Object} referenceOffsets
 * @argument {String} basePlacement
 * @returns {Array} a two cells array with x and y offsets in numbers
 */

/**
 * Parse headers into an object
 *
 * ```
 * Date: Wed, 27 Aug 2014 08:58:49 GMT
 * Content-Type: application/json
 * Connection: keep-alive
 * Transfer-Encoding: chunked
 * ```
 *
 * @param {String} headers Headers needing to be parsed
 * @returns {Object} Headers parsed into an object
 */

/**
 * Portals provide a first-class way to render children into a DOM node
 * that exists outside the DOM hierarchy of the parent component.
 */

/**
 * Prettier encoding of URI path segments.
 *
 * @param  {string}
 * @return {string}
 */

/**
 * Prints a warning in the console if it exists.
 *
 * @param {String} message The warning message.
 * @returns {void}
 */

/**
 * Private module reserved for @material-ui/x packages.
 */

/**
 * Public API for matching a URL pathname to a path.
 */

/**
 * Pull out keys from a regexp.
 *
 * @param  {!RegExp} path
 * @param  {!Array}  keys
 * @return {!RegExp}
 */

/**
 * Ratio between font size and font height. The number comes from jspdf's source code
 */

/**
 * React Google Analytics Module
 *
 * @package react-ga
 * @author  Adam Lofting <adam@mozillafoundation.org>
 *          Atul Varma <atul@mozillafoundation.org>
 */

/**
 * Read jss nonce setting from the page if the user has set it.
 */

/**
 * Recursive deep style passing function
 */

/**
 * Remove a style property.
 */

/**
 * Remove an interceptor from the stack
 *
 * @param {Number} id The ID that was returned by `use`
 */

/**
 * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)
 *
 * @param {string} content with BOM
 * @return {string} content value without BOM
 */

/**
 * Remove event listeners used to update the popper position
 * @method
 * @memberof Popper.Utils
 * @private
 */

/**
 * Replaces the letter with the capital letter
 *
 * @param {String} match
 * @param {String} c
 * @return {String}
 * @api private
 */

/**
 * Resolve or reject a Promise based on response status.
 *
 * @param {Function} resolve A function that resolves the promise.
 * @param {Function} reject A function that rejects the promise.
 * @param {object} response The response.
 */

/**
 * Responsively hides children based on the selected implementation.
 */

/**
 * Return the index of the matching object
 * @method
 * @memberof Popper.Utils
 * @argument {Array} arr
 * @argument prop
 * @argument value
 * @returns index or -1
 */

/**
 * Returns a function, that, as long as it continues to be invoked, will not
 * be triggered. The function will be called after it stops being called for
 * N milliseconds. If `immediate` is passed, trigger the function on the
 * leading edge, instead of the trailing. The function also has a property 'clear' 
 * that is a function which will clear the timer to prevent previously scheduled executions. 
 *
 * @source underscore.js
 * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/
 * @param {Function} function to wrap
 * @param {Number} timeout in ms (`100`)
 * @param {Boolean} whether to execute at the beginning (`false`)
 * @api public
 */

/**
 * Returns a number whose value is limited to the given range.
 *
 * @param {number} value The value to be clamped
 * @param {number} min The lower boundary of the output range
 * @param {number} max The upper boundary of the output range
 * @returns {number} A number in the range [min, max]
 */

/**
 * Returns an object that contains a new `CancelToken` and a function that, when called,
 * cancels the `CancelToken`.
 */

/**
 * Returns an object with the type and values of a color.
 *
 * Note: Does not support rgb % values.
 *
 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
 * @returns {object} - A MUI color object: {type: string, values: number[]}
 */

/**
 * Returns prefixed value if needed. Returns `false` if value is not supported.
 *
 * @param {String} property
 * @param {String} value
 * @return {String|Boolean}
 * @api public
 */

/**
 * Returns prefixed value transition/transform if needed.
 *
 * @param {String} match
 * @param {String} p1
 * @param {String} p2
 * @return {String}
 * @api private
 */

/**
 * Returns the offset parent of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Element} offset parent
 */

/**
 * Returns the parentNode or the host of the element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Element} parent
 */

/**
 * Returns the reference node of the reference object, or the reference object itself.
 * @method
 * @memberof Popper.Utils
 * @param {Element|Object} reference - the reference element (the popper will be relative to this)
 * @returns {Element} parent
 */

/**
 * Returns the scrolling parent of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Element} scroll parent
 */

/**
 * Returns true if a given popstate event is an extraneous WebKit event.
 * Accounts for the fact that Chrome on iOS fires real popstate events
 * containing undefined state when pressing the back button.
 */

/**
 * Returns true if the HTML5 history API is supported. Taken from Modernizr.
 *
 * https://github.com/Modernizr/Modernizr/blob/master/LICENSE
 * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js
 * changed to avoid false negatives for Windows Phones: https://github.com/reactjs/react-router/issues/586
 */

/**
 * Safe chained function
 *
 * Will only create a new function if needed,
 * otherwise will pass back existing functions or null.
 *
 * @param {function} functions to chain
 * @returns {function|null}
 */

/**
 * Set a style property.
 */

/**
 * Set the absolute transparency of a color.
 * Any existing alpha values are overwritten.
 *
 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
 * @param {number} value - value to set the alpha channel to in the range 0 -1
 * @returns {string} A CSS color string. Hex input values are returned as rgb
 */

/**
 * Set the attributes to the given popper
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element - Element to apply the attributes to
 * @argument {Object} styles
 * Object with a list of properties and values which will be applied to the element
 */

/**
 * Set the selector.
 */

/**
 * Set the style to the given popper
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element - Element to apply the style to
 * @argument {Object} styles
 * Object with a list of properties and values which will be applied to the element
 */

/**
 * Set the x-placement attribute before everything else because it could be used
 * to add margins to the popper margins needs to be calculated to get the
 * correct popper offsets.
 * @method
 * @memberof Popper.modifiers
 * @param {HTMLElement} reference - The reference element used to position the popper
 * @param {HTMLElement} popper - The HTML element used as popper
 * @param {Object} options - Popper.js options
 */

/**
 * Setup needed event listeners used to update the popper position
 * @method
 * @memberof Popper.Utils
 * @private
 */

/**
 * SheetsManager is like a WeakMap which is designed to count StyleSheet
 * instances and attach/detach automatically.
 */

/**
 * Should be called if a blur event is fired on a focus-visible element
 */

/**
 * Sort props by length.
 */

/**
 * Syntactic sugar for invoking a function and expanding an array for arguments.
 *
 * Common use case would be to use `Function.prototype.apply`.
 *
 *  ```js
 *  function f(x, y, z) {}
 *  var args = [1, 2, 3];
 *  f.apply(null, args);
 *  ```
 *
 * With `spread` this example can be re-written.
 *
 *  ```js
 *  spread(function(x, y, z) {})([1, 2, 3]);
 *  ```
 *
 * @param {Function} callback
 * @returns {Function}
 */

/**
 * Tells if a given input is a number
 * @method
 * @memberof Popper.Utils
 * @param {*} input to check
 * @return {Boolean}
 */

/**
 * Test if a keyframe at-rule should be prefixed or not
 *
 * @param {String} vendor prefix string for the current browser.
 * @return {String}
 * @api public
 */

/**
 * Test if a property is supported, returns supported property with vendor
 * prefix if required. Returns `false` if not supported.
 *
 * @param {String} prop dash separated
 * @param {Object} [options]
 * @return {String|Boolean}
 * @api public
 */

/**
 * The Grow transition is used by the [Tooltip](/components/tooltips/) and
 * [Popover](/components/popover/) components.
 * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.
 */

/**
 * The Slide transition is used by the [Drawer](/components/drawers/) component.
 * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.
 */

/**
 * The `dataObject` is an object containing all the information used by Popper.js.
 * This object is passed to modifiers and to the `onCreate` and `onUpdate` callbacks.
 * @name dataObject
 * @property {Object} data.instance The Popper.js instance
 * @property {String} data.placement Placement applied to popper
 * @property {String} data.originalPlacement Placement originally defined on init
 * @property {Boolean} data.flipped True if popper has been flipped by flip modifier
 * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper
 * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier
 * @property {Object} data.styles Any CSS property defined here will be applied to the popper. It expects the JavaScript nomenclature (eg. `marginBottom`)
 * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow. It expects the JavaScript nomenclature (eg. `marginBottom`)
 * @property {Object} data.boundaries Offsets of the popper boundaries
 * @property {Object} data.offsets The measurements of popper, reference and arrow elements
 * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values
 * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values
 * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0
 */

/**
 * The `referenceObject` is an object that provides an interface compatible with Popper.js
 * and lets you use it as replacement of a real DOM node.<br />
 * You can use this method to position a popper relatively to a set of coordinates
 * in case you don't have a DOM node to use as reference.
 *
 * ```
 * new Popper(referenceObject, popperNode);
 * ```
 *
 * NB: This feature isn't supported in Internet Explorer 10.
 * @name referenceObject
 * @property {Function} data.getBoundingClientRect
 * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.
 * @property {number} data.clientWidth
 * An ES6 getter that will return the width of the virtual reference element.
 * @property {number} data.clientHeight
 * An ES6 getter that will return the height of the virtual reference element.
 */

/**
 * The base implementation of `getTag` without fallbacks for buggy environments.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */

/**
 * The main path matching regexp utility.
 *
 * @type {RegExp}
 */

/**
 * The props of the [Modal](/api/modal/) component are available
 * when `variant="temporary"` is set.
 */

/**
 * The public API for a <Router> that stores location in memory.
 */

/**
 * The public API for a <Router> that uses HTML5 history.
 */

/**
 * The public API for a <Router> that uses window.location.hash.
 */

/**
 * The public API for matching a single path and rendering.
 */

/**
 * The public API for prompting the user before navigating away from a screen.
 */

/**
 * The public API for rendering a history-aware <a>.
 */

/**
 * The public API for rendering the first <Route> that matches.
 */

/**
 * The public top-level API for a "static" <Router>, so-called because it
 * can't actually change the current location. Instead, it just records
 * location changes in a context object. Useful mainly in testing and
 * server-rendering scenarios.
 */

/**
 * The relative brightness of any point in a color space,
 * normalized to 0 for darkest black and 1 for lightest white.
 *
 * Formula: https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests
 *
 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
 * @returns {number} The relative brightness of the color in the range 0 - 1
 */

/**
 * These are private action types reserved by Redux.
 * For any unknown actions, you must return the current state.
 * If the current state is undefined, you must return the initial state.
 * Do not reference these action types directly in your code.
 */

/**
 * This component takes a `theme` prop.
 * It makes the `theme` available down the React tree thanks to React context.
 * This component should preferably be used at **the root of your component tree**.
 */

/**
 * This is the list of the style rule name we use as drop in replacement for the built-in
 * pseudo classes (:checked, :disabled, :focused, etc.).
 *
 * Why do they exist in the first place?
 * These classes are used at a specificity of 2.
 * It allows them to override previously definied styles as well as
 * being untouched by simple user overrides.
 */

/**
 * Throws a `Cancel` if cancellation has been requested.
 */

/**
 * To Title Case 2.1 - http://individed.com/code/to-title-case/
 * Copyright 2008-2013 David Gouch. Licensed under the MIT License.
 * https://github.com/gouch/to-title-case
 */

/**
 * Transform an array into a regexp.
 *
 * @param  {!Array}  path
 * @param  {Array}   keys
 * @param  {!Object} options
 * @return {!RegExp}
 */

/**
 * Transform the data for a request or a response
 *
 * @param {Object|String} data The data to be transformed
 * @param {Array} headers The headers for the request or response
 * @param {Array|Function} fns A single function or Array of functions
 * @returns {*} The resulting transformed data
 */

/**
 * Trim excess whitespace off the beginning and end of a string
 *
 * @param {String} str The String to trim
 * @returns {String} The String freed of excess whitespace
 */

/**
 * Turns an object whose values are action creators, into an object with the
 * same keys, but with every function wrapped into a `dispatch` call so they
 * may be invoked directly. This is just a convenience method, as you can call
 * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.
 *
 * For convenience, you can also pass an action creator as the first argument,
 * and get a dispatch wrapped function in return.
 *
 * @param {Function|Object} actionCreators An object whose values are action
 * creator functions. One handy way to obtain it is to use ES6 `import * as`
 * syntax. You may also pass a single function.
 *
 * @param {Function} dispatch The `dispatch` function available on your Redux
 * store.
 *
 * @returns {Function|Object} The object mimicking the original object, but with
 * every action creator wrapped into the `dispatch` call. If you passed a
 * function as `actionCreators`, the return value will also be a single
 * function.
 */

/**
 * Turns an object whose values are different reducer functions, into a single
 * reducer function. It will call every child reducer, and gather their results
 * into a single state object, whose keys correspond to the keys of the passed
 * reducer functions.
 *
 * @param {Object} reducers An object whose values correspond to different
 * reducer functions that need to be combined into one. One handy way to obtain
 * it is to use ES6 `import * as reducers` syntax. The reducers may never return
 * undefined for any action. Instead, they should return their initial state
 * if the state passed to them was undefined, and the current state for any
 * unrecognized action.
 *
 * @returns {Function} A reducer function that invokes every reducer inside the
 * passed object, and builds a state object with the same shape.
 */

/**
 * Update an Error with the specified config, error code, and response.
 *
 * @param {Error} error The error to update.
 * @param {Object} config The config.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 * @returns {Error} The error.
 */

/**
 * Updates the position of the popper, computing the new offsets and applying
 * the new style.<br />
 * Prefer `scheduleUpdate` over `update` because of performance reasons.
 * @method
 * @memberof Popper
 */

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */

/**
 * Utilities
 */

/**
 * Utility component that locks focus inside the component.
 */

/**
 * Utility used to transform the `auto` placement to the placement with more
 * available space.
 * @method
 * @memberof Popper.Utils
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */

/**
 * Vendor prefix string for the current browser.
 *
 * @type {{js: String, css: String, vendor: String, browser: String}}
 * @api public
 */

/**
 * WARNING: Don't import this directly.
 * Use `MuiError` from `@material-ui/utils/macros/MuiError.macro` instead.
 * @param {number} code
 */

/**
 * When you're adding or removing children some may be added or removed in the
 * same render pass. We want to show *both* since we want to simultaneously
 * animate elements in and out. This function takes a previous set of keys
 * and a new set of keys and merges them with its best guess of the correct
 * ordering. In the future we may expose some of the utilities in
 * ReactMultiChild to make this easy, but for now React itself does not
 * directly have this concept of the union of prevChildren and nextChildren
 * so we implement it here.
 *
 * @param {object} prev prev children as returned from
 * `ReactTransitionChildMapping.getChildMapping()`.
 * @param {object} next next children as returned from
 * `ReactTransitionChildMapping.getChildMapping()`.
 * @return {object} a key set that contains all keys in `prev` and all keys
 * in `next` in a reasonable order.
 */

/**
 * `ButtonBase` contains as few styles as possible.
 * It aims to be a simple building block for creating a button.
 * It contains a load of style reset and some focus/ripple logic.
 */

/**
 * cherry-pick from
 * https://github.com/facebook/react/blob/769b1f270e1251d9dbdce0fcbd9e92e502d059b8/packages/shared/getComponentName.js
 * originally forked from recompose/getDisplayName with added IE 11 support
 *
 * @param {React.ReactType} Component
 * @returns {string | undefined}
 */

/**
 * event:
 * GA event tracking
 * @param args.category {String} required
 * @param args.action {String} required
 * @param args.label {String} optional
 * @param args.value {Int} optional
 * @param args.nonInteraction {boolean} optional
 * @param args.transport {string} optional
 * @param {{action: string, category: string}} trackerNames - (optional) a list of extra trackers to run the command on
 */

/**
 * exception:
 * GA exception tracking
 * @param args.description {String} optional
 * @param args.fatal {boolean} optional
 * @param {Array} trackerNames - (optional) a list of extra trackers to run the command on
 */

/**
 * ga:
 * Returns the original GA object.
 */

/**
 * generate a responsive version of a given CSS property
 * @example
 * responsiveProperty({
 *   cssProperty: 'fontSize',
 *   min: 15,
 *   max: 20,
 *   unit: 'px',
 *   breakpoints: [300, 600],
 * })
 *
 * // this returns
 *
 * {
 *   fontSize: '15px',
 *   '@media (min-width:300px)': {
 *     fontSize: '17.5px',
 *   },
 *   '@media (min-width:600px)': {
 *     fontSize: '20px',
 *   },
 * }
 *
 * @param {Object} params
 * @param {string} params.cssProperty - The CSS property to be made responsive
 * @param {number} params.min - The smallest value of the CSS property
 * @param {number} params.max - The largest value of the CSS property
 * @param {string} [params.unit] - The unit to be used for the CSS property
 * @param {Array.number} [params.breakpoints]  - An array of breakpoints
 * @param {number} [params.alignStep] - Round scaled value to fall under this grid
 * @returns {Object} responsive styles for {params.cssProperty}
 */

/**
 * https://github.com/facebook/react/issues/14099#issuecomment-440013892
 *
 * @param {function} fn
 */

/**
 * modalview:
 * a proxy to basic GA pageview tracking to consistently track
 * modal views that are an equivalent UX to a traditional pageview
 * @param  {String} modalName e.g. 'add-or-edit-club'
 * @param {Array} trackerNames - (optional) a list of extra trackers to run the command on
 */

/**
 * outboundLink:
 * GA outboundLink tracking
 * @param args.label {String} e.g. url, or 'Create an Account'
 * @param {function} hitCallback - Called after processing a hit.
 */

/**
 * pageview:
 * Basic GA pageview tracking
 * @param  {String} path - the current page page e.g. '/about'
 * @param {Array} trackerNames - (optional) a list of extra trackers to run the command on
 * @param {String} title - (optional) the page title e. g. 'My Website'
 */

/**
 * send:
 * Clone of the low level `ga.send` method
 * WARNING: No validations will be applied to this
 * @param  {Object} fieldObject - field object for tracking different analytics
 * @param  {Array} trackerNames - trackers to send the command to
 * @param {Array} trackerNames - (optional) a list of extra trackers to run the command on
 */

/**
 * set:
 * GA tracker set method
 * @param {Object} fieldsObject - a field/value pair or a group of field/value pairs on the tracker
 * @param {Array} trackerNames - (optional) a list of extra trackers to run the command on
 */

/**
 * timing:
 * GA timing
 * @param args.category {String} required
 * @param args.variable {String} required
 * @param args.value  {Int}  required
 * @param args.label  {String} required
 * @param {Array} trackerNames - (optional) a list of extra trackers to run the command on
 */

/**
 * ⚠️⚠️⚠️
 * If you want the DOM element of a Material-UI component check out
 * [FAQ: How can I access the DOM element?](/getting-started/faq/#how-can-i-access-the-dom-element)
 * first.
 *
 * This component uses `findDOMNode` which is deprecated in React.StrictMode.
 *
 * Helper component to allow attaching a ref to a
 * wrapped element to access the underlying DOM element.
 *
 * It's highly inspired by https://github.com/facebook/react/issues/11401#issuecomment-340543801.
 * For example:
 * ```jsx
 * import React from 'react';
 * import RootRef from '@material-ui/core/RootRef';
 *
 * function MyComponent() {
 *   const domRef = React.useRef();
 *
 *   React.useEffect(() => {
 *     console.log(domRef.current); // DOM node
 *   }, []);
 *
 *   return (
 *     <RootRef rootRef={domRef}>
 *       <SomeChildComponent />
 *     </RootRef>
 *   );
 * }
 * ```
 */

/**
* Create a debounced version of a method, that's asynchronously deferred
* but called in the minimum time possible.
*
* @method
* @memberof Popper.Utils
* @argument {Function} fn
* @returns {Function}
*/

/** ====================================================================
 * @license
 * jsPDF XMP metadata plugin
 * Copyright (c) 2016 Jussi Utunen, u-jussi@suomi24.fi
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 * ====================================================================
 */

/** @class */

/** @license
   * Copyright (c) 2017 Dominik Homberger

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

https://webpjs.appspot.com
WebPRiffParser dominikhlbg@gmail.com
*/

/** @license
 *
 * jsPDF - PDF Document creation from JavaScript
 * Version 2.1.0 Built on 2020-08-25T16:02:38.141Z
 *                      CommitID 00000000
 *
 * Copyright (c) 2010-2020 James Hall <james@parall.ax>, https://github.com/MrRio/jsPDF
 *               2015-2020 yWorks GmbH, http://www.yworks.com
 *               2015-2020 Lukas Holländer <lukas.hollaender@yworks.com>, https://github.com/HackbrettXXX
 *               2016-2018 Aras Abbasi <aras.abbasi@gmail.com>
 *               2010 Aaron Spike, https://github.com/acspike
 *               2012 Willow Systems Corporation, willow-systems.com
 *               2012 Pablo Hess, https://github.com/pablohess
 *               2012 Florian Jenett, https://github.com/fjenett
 *               2013 Warren Weckesser, https://github.com/warrenweckesser
 *               2013 Youssef Beddad, https://github.com/lifof
 *               2013 Lee Driscoll, https://github.com/lsdriscoll
 *               2013 Stefan Slonevskiy, https://github.com/stefslon
 *               2013 Jeremy Morel, https://github.com/jmorel
 *               2013 Christoph Hartmann, https://github.com/chris-rock
 *               2014 Juan Pablo Gaviria, https://github.com/juanpgaviria
 *               2014 James Makes, https://github.com/dollaruw
 *               2014 Diego Casorran, https://github.com/diegocr
 *               2014 Steven Spungin, https://github.com/Flamenco
 *               2014 Kenneth Glassey, https://github.com/Gavvers
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 * Contributor(s):
 *    siefkenj, ahwolf, rickygu, Midnith, saintclair, eaparango,
 *    kim3er, mfo, alnorth, Flamenco
 */

/** @license
 * Copyright (c) 2012 Willow Systems Corporation, willow-systems.com
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 * ====================================================================
 */

/** @license
 * MIT license.
 * Copyright (c) 2012 Willow Systems Corporation, willow-systems.com
 *               2014 Diego Casorran, https://github.com/diegocr
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 * ====================================================================
 */

/** @license
 * jsPDF addImage plugin
 * Copyright (c) 2012 Jason Siefken, https://github.com/siefkenj/
 *               2013 Chris Dowling, https://github.com/gingerchris
 *               2013 Trinh Ho, https://github.com/ineedfat
 *               2013 Edwin Alejandro Perez, https://github.com/eaparango
 *               2013 Norah Smith, https://github.com/burnburnrocket
 *               2014 Diego Casorran, https://github.com/diegocr
 *               2014 James Robb, https://github.com/jamesbrobb
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

/** @license
 jsPDF standard_fonts_metrics plugin
 * Copyright (c) 2012 Willow Systems Corporation, willow-systems.com
 * MIT license.
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 * 
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 * ====================================================================
 */

/** @license Material-UI v4.10.2
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

/** @license Material-UI v4.11.0
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

/** @license Material-UI v4.9.14
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

/** @license React v0.20.1
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

/** @license React v17.0.1
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

/** @license React v17.0.1
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

/** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */

/** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */

/** @prop {Function} */

/** @prop {ModifierFn} */

/** @prop {Number|String} offset=0
     * The offset value as described in the modifier description
     */

/** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */

/** @prop {number} order=100 - Index used to define the order of execution */

/** @prop {number} order=200 - Index used to define the order of execution */

/** @prop {number} order=300 - Index used to define the order of execution */

/** @prop {number} order=400 - Index used to define the order of execution */

/** @prop {number} order=500 - Index used to define the order of execution */

/** @prop {number} order=600 - Index used to define the order of execution */

/** @prop {number} order=700 - Index used to define the order of execution */

/** @prop {number} order=800 - Index used to define the order of execution */

/** @prop {number} order=850 - Index used to define the order of execution */

/** @prop {number} order=900 - Index used to define the order of execution */

/** @type {!Array} */

/** @type {!Object} */

/** @type {string} */

/** Built-in value references. */

/** Detect free variable `global` from Node.js. */

/** Detect free variable `self`. */

/** Error message constants. */

/** Use it instead of .includes method for IE support */

/** Used as references for various `Number` constants. */

/** Used for built-in method references. */

/** `Object#toString` result references. */

/************************************************************************/

/******/

/***/

/*eslint func-names:0*/

/*eslint no-param-reassign:0*/

/*global toString:true*/

//

//                    True when adorned at the start.

//                    True when any number or string with length.

//           'Material-UI: Theme.mixins.gutters() is deprecated.',

//           'You can use the source of the mixin directly:',

//           `

//         [

//         ].join('\n'),

//         false,

//         nextStatus = ENTERING

//         nextStatus = EXITING

//       );

//       if (status !== ENTERING && status !== ENTERED) {

//       if (status === ENTERING || status === ENTERED) {

//       return merge(acc, handlers[prop](props));

//       warning(

//       }

//     'Material-UI: createStyles from @material-ui/core/styles is deprecated.',

//     'Please use @material-ui/styles/createStyles',

//     acc[prop] = style;

//     const { status } = this.state

//     if (handlers[prop]) {

//     if (this.props.in) {

//     return acc;

//     }

//     } else {

//    is used by selectorFactory to decide if it should reinvoke on props changes.

//    new function as the true mapToProps for subsequent calls.

//    the developer that their mapToProps function is not returning a valid result.

//   (one of the certain letters followed by `o`)

//   If there is no matching single quote

//   Two quote characters do not end the sequence.

//   [

//   ].join('\n'),

//   container,

//   except a single quote symbol, which ends the sequence.

//   if (prevProps !== this.props) {

//   let nextStatus = null

//   modals: [],

//   paddingLeft: theme.spacing(3),

//   paddingRight: theme.spacing(3),

//   restore: null,

//   return !equal(nextProps, this.props) || !equal(nextState, this.state);

//   return Object.keys(props).reduce((acc, prop) => {

//   return acc;

//   return { nextStatus }

//   style.filterProps.forEach(prop => {

//   then the sequence will continue until the end of the string.

//   var options = dirtyOptions || {}

//   var unit = String(options.unit)

//   warnOnce,

//   }

//   });

//   }, {});

//  * Detects whether the mapToProps function being called depends on props, which

//  * On first call, handles mapToProps if returns another function, and treats that

//  * On first call, verifies the first result is a plain object, in order to warn

//  |-----|-----||-----||-x----|

//  |-----|-----||-----||xxxx-|

//  |-----|---x-||-----||-----|

//  |xxxxx|xxxxx||-----||-----|

// != the default value

// "/*"            => ["/", undefined, undefined, undefined, undefined, "*"]

// "/:test(\\d+)?" => ["/", "test", "\d+", undefined, "?", undefined]

// "/route(\\d+)"  => [undefined, undefined, undefined, "\d+", undefined, undefined]

// "the first render", or "memo dropped the value"

// "undefined" in the uuid)

// #StrictMode ready

// $FlowFixMe

// $FlowIgnore

// && instead of & is a workaround for https://github.com/cssinjs/jss/issues/1045

// 'day', 'hour', 'minute', 'second'

// (e.g. it's different in the week of the daylight saving time clock shift)

// );

// -  represents a light background

// - '' matches two quote characters in a row

// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),

// - (\w)\1* matches any sequences of the same letter

// - . matches any single character unmatched by previous parts of the RegExps

// - However, we may have gotten new wrapper props after that

// - Invalid input values for the RFC `version` or `variant` fields

// - No support for border spacing

// - No support for transparency

// - One or more input array values don't map to a hex octet (leading to

// - This render may have been triggered by a Redux store update that produced new child props

// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token

// -1 -> 2 BC

// .mui-fixed is a global helper.

// .offsetParent will return the closest TH, TD or TABLE in case

// 0 -> 1 BC

// 0 means "already installed".

// 01, 02, ..., 12

// 01, 02, 03, 04

// 02

// 03

// 1 -> 1 AC

// 1, 2, ..., 12

// 1, 2, 3, 4

// 1, 2, 3, 4 (narrow quarter; could be not numerical)

// 1. IE 11 support, which trigger the handleClickAway even after the unbind

// 1.5.3 so we need to silence potential errors to support using for example

// 1st quarter, 2nd quarter, ...

// 1st, 2nd, ..., 12th

// 1st, 2nd, ..., 7th

// 1st, 2nd, 3rd, 4th

// 2

// 2. The child might render null.

// 2nd

// 3

// 3. Behave like a blur listener.

// 3rd

// 9 = Tab

// :focus-ring CSS pseudo-class will help.

// @inheritedComponent IconButton

// @param SSR

// @param obj

// @param value

// @returns {boolean} False when no adornments.

// @returns {boolean} False when not present or empty string.

// @returns {boolean} true if string (including '') or number (including zero)

// @see https://facebook.github.io/react/docs/forms.html#controlled-components

// @ts-ignore

// A URL is considered absolute if it begins with "<scheme>://" or "//" (protocol-relative URL).

// A change of the browser zoom change the scrollbar size.

// A collection of common colors.

// A few bytes payload overhead when lodash/debounce is ~3 kB and debounce ~300 B.

// A hashchange doesn't always == location change.

// A length of one signals that mapToProps does not depend on props from the parent component.

// A length of zero is assumed to mean mapToProps is getting args via arguments or ...args and

// A modal manager used to track and manage the state of open Modals.

// A new class name generator

// A number that uniquely identifies the current finger in the touch session.

// A strict capitalization should uppercase the first letter of each word a the sentence.

// A, B

// AD, BC

// AM or PM

// AM, PM, midnight

// AM, PM, midnight, noon

// About 1.5x faster than the two-arg version of Array#splice()

// Absolute number of the current year:

// Actually run the selector with the most recent store state and wrapper props

// Actually subscribe to the nearest connected ancestor (or store)

// Adapted from https://github.com/oliviertassinari/react-swipeable-views/blob/7666de1dba253b896911adf2790ce51467670856/packages/react-swipeable-views/src/SwipeableViews.js#L129

// Adapted from https://github.com/oliviertassinari/react-swipeable-views/blob/7666de1dba253b896911adf2790ce51467670856/packages/react-swipeable-views/src/SwipeableViews.js#L175

// Add !important, because it was ignored.

// Add all rows initially

// Add headers to the request

// Add iOS momentum scrolling.

// Add one pt to textSpace to fix rounding error

// Add paddings

// Add position, width and height to our offsets object

// Add properties to offsets to make them a complete clientRect object

// Add responseType to request if needed

// Add some space to avoid collision as `ListItemSecondaryAction`

// Add support for document.body.requestFullScreen().

// Add to body both if parent is tbody or table

// Add user content just before adding new page ensure it will

// Add withCredentials to request if needed

// Add xsrf header

// Adds compatibility for ES modules

// Align the top

// Alignment properties

// All the browsers Material-UI support have this built-in.

// Allow `only` to be combined with other props. If already hidden, no need to check others.

// Allow empty style in this case, because properties will be added dynamically.

// Allow for axios('example/url'[, config]) a la fetch API

// Allow injecting another batching function later

// Allow use of default import syntax in TypeScript

// Already transformed.

// Also `yy` always returns the last two digits of a year,

// Alternative approach that doesn't yield any performance gain.

// An alternative is to use the `initialWidth` property.

// Animation name ref replacer.

// Animation properties

// Anno Domini, Before Christ

// Antialiasing.

// Any reducers that existed in both the new and old rootReducer

// Apply `position` to popper before anything else because

// Apply babel-plugin-transform-template-literals in loose mode

// Apply fallbacks first.

// Array syntax {fallbacks: [{prop: value}]}

// Assign false to enable `doc.lastAutoTable.finalY || 40` sugar

// At least one element clogs the drawer interaction zone.

// At some point, it would be better to keep it for keyboard users.

// Attach marginTop and marginLeft because in some circumstances we may need them

// Attributes

// Avoid bugs when hasOwnProperty is shadowed

// Avoid failures from read-only properties

// Avoid nesting of li > li.

// Avoid performing a layout computation in the render method.

// Avoid prototype pollution

// Avoid unnecessary DOM access if visibility hasn't changed

// Avoids applying same plugin twice, at least based on ref.

// Axios

// BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!

// Background properties

// Backward compatibility, to remove in v5.

// Base style for all themes

// Based on https://stackoverflow.com/a/24394376

// Based on the previous check, one of these must be true

// Be aware, modifiers could override the properties defined in the previous

// Black for versions of jspdf without getTextColor

// Block the scroll even if no scrollbar is visible to account for mobile keyboard

// Bootstrap: https://github.com/twbs/bootstrap/blob/1d6e3710dd447de1a200f29e8fa521f8a0908f70/scss/_functions.scss#L59

// Border Properties

// Both nodes are inside #document

// Bundle may contain multiple JSS versions at the same time. In order to identify

// But it seems this is the best public API for this use case.

// But, if we have new wrapper props, those might change the child props, so we have to recalculate things.

// But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.

// By explicitly using `prop-types` you are opting into new production behavior.

// CONCATENATED MODULE: ./client/components/about/about.js

// CONCATENATED MODULE: ./client/components/adminPanel/usersPanel/userList/userList.js

// CONCATENATED MODULE: ./client/components/adminPanel/usersPanel/usersPanel.js

// CONCATENATED MODULE: ./client/components/adminPanel/usersPanel/usersPanel.reducer.js

// CONCATENATED MODULE: ./client/components/authCheck.js

// CONCATENATED MODULE: ./client/components/login/login.action.js

// CONCATENATED MODULE: ./client/components/login/login.js

// CONCATENATED MODULE: ./client/components/login/login.reducer.js

// CONCATENATED MODULE: ./client/components/main.js

// CONCATENATED MODULE: ./client/components/nav/nav.js

// CONCATENATED MODULE: ./client/components/register/register.action.js

// CONCATENATED MODULE: ./client/components/register/register.js

// CONCATENATED MODULE: ./client/components/register/register.reducer.js

// CONCATENATED MODULE: ./client/components/userPanel/userEditProfile/userEditProfile.action.js

// CONCATENATED MODULE: ./client/components/userPanel/userEditProfile/userEditProfile.js

// CONCATENATED MODULE: ./client/components/userPanel/userEditProfile/userEditProfile.reducer.js

// CONCATENATED MODULE: ./client/configureStore.js

// CONCATENATED MODULE: ./client/index.js

// CONCATENATED MODULE: ./client/localStorage.js

// CONCATENATED MODULE: ./client/reducers.js

// CONCATENATED MODULE: ./client/utils.js

// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js

// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/inherits.js

// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js

// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js

// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js

// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/slicedToArray.js

// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/toArray.js

// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js

// CONCATENATED MODULE: ./node_modules/@date-io/date-fns/build/index.esm.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/Accordion/Accordion.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/Accordion/AccordionContext.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/AccordionActions/AccordionActions.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/AccordionDetails/AccordionDetails.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/AppBar/AppBar.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/Badge/Badge.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/BottomNavigation/BottomNavigation.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/BottomNavigationAction/BottomNavigationAction.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/Box/index.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/Breadcrumbs/BreadcrumbCollapsed.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/Breadcrumbs/Breadcrumbs.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/ButtonBase/ButtonBase.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/ButtonBase/TouchRipple.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/ButtonGroup/ButtonGroup.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/Card/Card.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/CardActionArea/CardActionArea.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/CardActions/CardActions.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/CardContent/CardContent.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/CardHeader/CardHeader.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/CardMedia/CardMedia.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/ClickAwayListener/ClickAwayListener.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/Container/Container.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/CssBaseline/CssBaseline.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/DialogTitle/DialogTitle.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/Divider/Divider.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/Drawer/Drawer.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/ExpansionPanel/ExpansionPanel.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/ExpansionPanel/ExpansionPanelContext.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/ExpansionPanelActions/ExpansionPanelActions.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/ExpansionPanelDetails/ExpansionPanelDetails.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/ExpansionPanelSummary/ExpansionPanelSummary.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/Fab/Fab.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/GridListTile/GridListTile.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/GridListTileBar/GridListTileBar.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/Hidden/Hidden.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/Hidden/HiddenJs.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/ListItemIcon/ListItemIcon.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/ListItemSecondaryAction/ListItemSecondaryAction.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/ListSubheader/ListSubheader.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/Modal/Modal.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/Modal/index.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/OutlinedInput/OutlinedInput.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/Popper/Popper.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/Radio/RadioButtonIcon.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/RootRef/RootRef.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/Select/SelectInput.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/Slide/Slide.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/Slider/Slider.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/Slider/ValueLabel.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/Snackbar/Snackbar.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/SnackbarContent/SnackbarContent.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/Step/Step.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/StepButton/StepButton.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/StepConnector/StepConnector.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/StepContent/StepContent.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/StepIcon/StepIcon.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/StepLabel/StepLabel.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/Stepper/Stepper.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/SwipeableDrawer/SwipeArea.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/SwipeableDrawer/SwipeableDrawer.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/Switch/Switch.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/TablePagination/TablePagination.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/Tabs/ScrollbarSize.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/Zoom/Zoom.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/colors/amber.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/colors/blueGrey.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/colors/brown.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/colors/cyan.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/colors/deepOrange.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/colors/deepPurple.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/colors/index.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/colors/lightGreen.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/colors/lime.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/colors/teal.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/colors/yellow.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/index.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/internal/animate.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/internal/svg-icons/ArrowDownward.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/internal/svg-icons/Cancel.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/internal/svg-icons/CheckCircle.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/internal/svg-icons/MoreHoriz.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/internal/svg-icons/Person.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/internal/svg-icons/RadioButtonChecked.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/internal/svg-icons/RadioButtonUnchecked.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/styles/createMixins.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/styles/createMuiStrictModeTheme.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/styles/createMuiTheme.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/styles/createSpacing.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/styles/createTypography.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/styles/cssUtils.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/styles/responsiveFontSizes.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/styles/shadows.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/styles/shape.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/useScrollTrigger/useScrollTrigger.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/utils/deprecatedPropType.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/utils/requirePropFactory.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/utils/unsupportedProp.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/withMobileDialog/withMobileDialog.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/withWidth/index.js

// CONCATENATED MODULE: ./node_modules/@material-ui/pickers/esm/Calendar-11ae61f6.js

// CONCATENATED MODULE: ./node_modules/@material-ui/pickers/esm/DatePicker.js

// CONCATENATED MODULE: ./node_modules/@material-ui/pickers/esm/Picker-ccd9ba90.js

// CONCATENATED MODULE: ./node_modules/@material-ui/pickers/esm/TimePicker.js

// CONCATENATED MODULE: ./node_modules/@material-ui/pickers/esm/TimePickerToolbar-81100fab.js

// CONCATENATED MODULE: ./node_modules/@material-ui/pickers/esm/Wrapper-241966d7.js

// CONCATENATED MODULE: ./node_modules/@material-ui/pickers/esm/index.js

// CONCATENATED MODULE: ./node_modules/@material-ui/pickers/esm/makePickerWithState-5a79cb8a.js

// CONCATENATED MODULE: ./node_modules/@material-ui/styles/esm/getStylesCreator/getStylesCreator.js

// CONCATENATED MODULE: ./node_modules/@material-ui/styles/esm/getStylesCreator/noopTheme.js

// CONCATENATED MODULE: ./node_modules/@material-ui/styles/esm/jssPreset/jssPreset.js

// CONCATENATED MODULE: ./node_modules/@material-ui/styles/esm/makeStyles/makeStyles.js

// CONCATENATED MODULE: ./node_modules/@material-ui/system/esm/spacing.js

// CONCATENATED MODULE: ./node_modules/@material-ui/utils/esm/HTMLElementType.js

// CONCATENATED MODULE: ./node_modules/@material-ui/utils/esm/chainPropTypes.js

// CONCATENATED MODULE: ./node_modules/@material-ui/utils/esm/elementTypeAcceptingRef.js

// CONCATENATED MODULE: ./node_modules/@material-ui/utils/esm/index.js

// CONCATENATED MODULE: ./node_modules/@material-ui/utils/esm/ponyfillGlobal.js

// CONCATENATED MODULE: ./node_modules/@material-ui/utils/esm/refType.js

// CONCATENATED MODULE: ./node_modules/date-fns/esm/_lib/addLeadingZeros/index.js

// CONCATENATED MODULE: ./node_modules/date-fns/esm/_lib/assign/index.js

// CONCATENATED MODULE: ./node_modules/date-fns/esm/_lib/format/lightFormatters/index.js

// CONCATENATED MODULE: ./node_modules/date-fns/esm/_lib/getUTCDayOfYear/index.js

// CONCATENATED MODULE: ./node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js

// CONCATENATED MODULE: ./node_modules/date-fns/esm/_lib/getUTCWeek/index.js

// CONCATENATED MODULE: ./node_modules/date-fns/esm/_lib/setUTCDay/index.js

// CONCATENATED MODULE: ./node_modules/date-fns/esm/_lib/setUTCISODay/index.js

// CONCATENATED MODULE: ./node_modules/date-fns/esm/_lib/setUTCISOWeek/index.js

// CONCATENATED MODULE: ./node_modules/date-fns/esm/_lib/setUTCWeek/index.js

// CONCATENATED MODULE: ./node_modules/date-fns/esm/_lib/startOfUTCISOWeekYear/index.js

// CONCATENATED MODULE: ./node_modules/date-fns/esm/_lib/startOfUTCWeekYear/index.js

// CONCATENATED MODULE: ./node_modules/date-fns/esm/addDays/index.js

// CONCATENATED MODULE: ./node_modules/date-fns/esm/addMilliseconds/index.js

// CONCATENATED MODULE: ./node_modules/date-fns/esm/addMonths/index.js

// CONCATENATED MODULE: ./node_modules/date-fns/esm/addYears/index.js

// CONCATENATED MODULE: ./node_modules/date-fns/esm/differenceInMilliseconds/index.js

// CONCATENATED MODULE: ./node_modules/date-fns/esm/eachDayOfInterval/index.js

// CONCATENATED MODULE: ./node_modules/date-fns/esm/endOfDay/index.js

// CONCATENATED MODULE: ./node_modules/date-fns/esm/endOfMonth/index.js

// CONCATENATED MODULE: ./node_modules/date-fns/esm/endOfWeek/index.js

// CONCATENATED MODULE: ./node_modules/date-fns/esm/endOfYear/index.js

// CONCATENATED MODULE: ./node_modules/date-fns/esm/getDaysInMonth/index.js

// CONCATENATED MODULE: ./node_modules/date-fns/esm/getHours/index.js

// CONCATENATED MODULE: ./node_modules/date-fns/esm/getSeconds/index.js

// CONCATENATED MODULE: ./node_modules/date-fns/esm/getYear/index.js

// CONCATENATED MODULE: ./node_modules/date-fns/esm/isAfter/index.js

// CONCATENATED MODULE: ./node_modules/date-fns/esm/isBefore/index.js

// CONCATENATED MODULE: ./node_modules/date-fns/esm/isEqual/index.js

// CONCATENATED MODULE: ./node_modules/date-fns/esm/isSameDay/index.js

// CONCATENATED MODULE: ./node_modules/date-fns/esm/isSameHour/index.js

// CONCATENATED MODULE: ./node_modules/date-fns/esm/isSameMonth/index.js

// CONCATENATED MODULE: ./node_modules/date-fns/esm/isSameYear/index.js

// CONCATENATED MODULE: ./node_modules/date-fns/esm/locale/_lib/buildFormatLongFn/index.js

// CONCATENATED MODULE: ./node_modules/date-fns/esm/locale/_lib/buildLocalizeFn/index.js

// CONCATENATED MODULE: ./node_modules/date-fns/esm/locale/_lib/buildMatchFn/index.js

// CONCATENATED MODULE: ./node_modules/date-fns/esm/locale/en-US/_lib/formatDistance/index.js

// CONCATENATED MODULE: ./node_modules/date-fns/esm/locale/en-US/_lib/formatLong/index.js

// CONCATENATED MODULE: ./node_modules/date-fns/esm/locale/en-US/_lib/formatRelative/index.js

// CONCATENATED MODULE: ./node_modules/date-fns/esm/locale/en-US/_lib/localize/index.js

// CONCATENATED MODULE: ./node_modules/date-fns/esm/locale/en-US/_lib/match/index.js

// CONCATENATED MODULE: ./node_modules/date-fns/esm/parse/index.js

// CONCATENATED MODULE: ./node_modules/date-fns/esm/setHours/index.js

// CONCATENATED MODULE: ./node_modules/date-fns/esm/setMinutes/index.js

// CONCATENATED MODULE: ./node_modules/date-fns/esm/setMonth/index.js

// CONCATENATED MODULE: ./node_modules/date-fns/esm/setSeconds/index.js

// CONCATENATED MODULE: ./node_modules/date-fns/esm/setYear/index.js

// CONCATENATED MODULE: ./node_modules/date-fns/esm/startOfDay/index.js

// CONCATENATED MODULE: ./node_modules/date-fns/esm/startOfHour/index.js

// CONCATENATED MODULE: ./node_modules/date-fns/esm/startOfMonth/index.js

// CONCATENATED MODULE: ./node_modules/date-fns/esm/startOfWeek/index.js

// CONCATENATED MODULE: ./node_modules/date-fns/esm/startOfYear/index.js

// CONCATENATED MODULE: ./node_modules/date-fns/esm/subMilliseconds/index.js

// CONCATENATED MODULE: ./node_modules/dom-helpers/esm/addClass.js

// CONCATENATED MODULE: ./node_modules/dom-helpers/esm/hasClass.js

// CONCATENATED MODULE: ./node_modules/dom-helpers/esm/removeClass.js

// CONCATENATED MODULE: ./node_modules/history/esm/history.js

// CONCATENATED MODULE: ./node_modules/hyphenate-style-name/index.js

// CONCATENATED MODULE: ./node_modules/jss-plugin-camel-case/dist/jss-plugin-camel-case.esm.js

// CONCATENATED MODULE: ./node_modules/jss-plugin-default-unit/dist/jss-plugin-default-unit.esm.js

// CONCATENATED MODULE: ./node_modules/jss-plugin-global/dist/jss-plugin-global.esm.js

// CONCATENATED MODULE: ./node_modules/jss-plugin-nested/dist/jss-plugin-nested.esm.js

// CONCATENATED MODULE: ./node_modules/jss-plugin-props-sort/dist/jss-plugin-props-sort.esm.js

// CONCATENATED MODULE: ./node_modules/jss-plugin-rule-value-function/dist/jss-plugin-rule-value-function.esm.js

// CONCATENATED MODULE: ./node_modules/jss-plugin-vendor-prefixer/dist/jss-plugin-vendor-prefixer.esm.js

// CONCATENATED MODULE: ./node_modules/memoize-one/dist/memoize-one.esm.js

// CONCATENATED MODULE: ./node_modules/mini-create-react-context/dist/esm/index.js

// CONCATENATED MODULE: ./node_modules/raf-schd/dist/raf-schd.esm.js

// CONCATENATED MODULE: ./node_modules/react-beautiful-dnd/dist/react-beautiful-dnd.esm.js

// CONCATENATED MODULE: ./node_modules/react-ga/dist/esm/components/OutboundLink.js

// CONCATENATED MODULE: ./node_modules/react-ga/dist/esm/core.js

// CONCATENATED MODULE: ./node_modules/react-ga/dist/esm/index.js

// CONCATENATED MODULE: ./node_modules/react-ga/dist/esm/utils/console/log.js

// CONCATENATED MODULE: ./node_modules/react-ga/dist/esm/utils/format.js

// CONCATENATED MODULE: ./node_modules/react-ga/dist/esm/utils/loadGA.js

// CONCATENATED MODULE: ./node_modules/react-ga/dist/esm/utils/mightBeEmail.js

// CONCATENATED MODULE: ./node_modules/react-ga/dist/esm/utils/redactEmail.js

// CONCATENATED MODULE: ./node_modules/react-ga/dist/esm/utils/removeLeadingSlash.js

// CONCATENATED MODULE: ./node_modules/react-ga/dist/esm/utils/testModeAPI.js

// CONCATENATED MODULE: ./node_modules/react-ga/dist/esm/utils/toTitleCase.js

// CONCATENATED MODULE: ./node_modules/react-ga/dist/esm/utils/trim.js

// CONCATENATED MODULE: ./node_modules/react-redux/es/components/Provider.js

// CONCATENATED MODULE: ./node_modules/react-redux/es/connect/connect.js

// CONCATENATED MODULE: ./node_modules/react-redux/es/connect/mapDispatchToProps.js

// CONCATENATED MODULE: ./node_modules/react-redux/es/connect/mapStateToProps.js

// CONCATENATED MODULE: ./node_modules/react-redux/es/connect/mergeProps.js

// CONCATENATED MODULE: ./node_modules/react-redux/es/connect/selectorFactory.js

// CONCATENATED MODULE: ./node_modules/react-redux/es/connect/verifySubselectors.js

// CONCATENATED MODULE: ./node_modules/react-redux/es/connect/wrapMapToProps.js

// CONCATENATED MODULE: ./node_modules/react-redux/es/hooks/useDispatch.js

// CONCATENATED MODULE: ./node_modules/react-redux/es/hooks/useReduxContext.js

// CONCATENATED MODULE: ./node_modules/react-redux/es/hooks/useSelector.js

// CONCATENATED MODULE: ./node_modules/react-redux/es/hooks/useStore.js

// CONCATENATED MODULE: ./node_modules/react-redux/es/index.js

// CONCATENATED MODULE: ./node_modules/react-redux/es/utils/batch.js

// CONCATENATED MODULE: ./node_modules/react-redux/es/utils/reactBatchedUpdates.js

// CONCATENATED MODULE: ./node_modules/react-redux/es/utils/shallowEqual.js

// CONCATENATED MODULE: ./node_modules/react-redux/es/utils/verifyPlainObject.js

// CONCATENATED MODULE: ./node_modules/react-router-dom/esm/react-router-dom.js

// CONCATENATED MODULE: ./node_modules/react-transition-group/esm/CSSTransition.js

// CONCATENATED MODULE: ./node_modules/react-transition-group/esm/Transition.js

// CONCATENATED MODULE: ./node_modules/react-transition-group/esm/TransitionGroup.js

// CONCATENATED MODULE: ./node_modules/react-transition-group/esm/config.js

// CONCATENATED MODULE: ./node_modules/react-transition-group/esm/utils/ChildMapping.js

// CONCATENATED MODULE: ./node_modules/redux-thunk/es/index.js

// CONCATENATED MODULE: ./node_modules/resolve-pathname/esm/resolve-pathname.js

// CONCATENATED MODULE: ./node_modules/symbol-observable/es/index.js

// CONCATENATED MODULE: ./node_modules/symbol-observable/es/ponyfill.js

// CONCATENATED MODULE: ./node_modules/use-memo-one/dist/use-memo-one.esm.js

// CONCATENATED MODULE: ./node_modules/uuid/dist/esm-browser/regex.js

// CONCATENATED MODULE: ./node_modules/uuid/dist/esm-browser/rng.js

// CONCATENATED MODULE: ./node_modules/uuid/dist/esm-browser/stringify.js

// CONCATENATED MODULE: ./node_modules/uuid/dist/esm-browser/v4.js

// CONCATENATED MODULE: ./node_modules/uuid/dist/esm-browser/validate.js

// CONCATENATED MODULE: external "{\"minMillisecondToSaveState\":5000,\"usersInPage\":5}"

// Cache for the finalized classes value.

// Cache for the last used classes prop pointer.

// Cache for the last used rendered classes pointer.

// Calculate element positioning

// Calculate transition duration to match swipe speed

// Capture values for checking if and when this component unmounts

// Center vertically

// Certain fonts which overflow the line height will cause the textarea

// Change from `box-sizing: content-box` so that `width`

// Check if 'transition' or 'transform' natively supported in browser.

// Check if date is Invalid Date because Date.prototype.setFullYear ignores the value of Invalid Date

// Check if key is already down to avoid repeats being counted as multiple activations

// Check if module is in cache

// Check if the horizontal axis needs shifting

// Check if the parent has requested anchoring on an inner content node

// Check if the remaining input contains something other than whitespace

// Check if the vertical axis needs shifting

// Check the input state on mount, in case it was filled by the user

// Chrome fix for https://bugs.chromium.org/p/chromium/issues/detail?id=820541

// Chrome's autofill feature gives the input field a yellow background.

// Clean up request

// Clone the date

// Close to the bootstrap implementation:

// Column properties

// Common issue for uses with was that the default bold in headers

// Compensate for the part of the drawer displayed on touch start.

// Compensation for the `Input.inputDense` style.

// Compile all the patterns before compilation.

// Compile all the tokens into regexps.

// Compute the sideValue using the updated popper offsets

// Compute the size before applying overflow hidden to avoid any scroll jumps.

// Consistency between these values is important.

// Consistency check for valid UUID.  If this throws, it's likely due to one

// Controlled input accepts its current value as a prop.

// Convert any CSS <length> or <percentage> value to any another.

// Convert between css lengths e.g. em->px or px->rem

// Convert input length to pixels.

// Convert length in pixels to the output unit

// Convert the date in system timezone to the same date in UTC+00:00 timezone.

// Convert the values with units to absolute pixels to allow our computations

// Copy axios.prototype to instance

// Copy bytes to buffer, if provided

// Copy context to instance

// Correctly detect the Edge browser.

// Correctly detect the Safari browser.

// Corresponds to 10 frames at 60 Hz.

// Could probably be improved upon however.

// Create a new layer, increase the isolation of the computed values

// Create a new module (and put it into the cache)

// Create cache key for current value.

// Create the default instance to be exported

// Credit https://github.com/twbs/bootstrap/blob/3ffe3a5d82f6f561b82ff78d82b32a7d14aed558/js/src/modal.js#L512-L519

// Currently works in chrome only.

// Cut token from string, or, if string doesn't match the token, return Invalid Date

// DCE check should happen before ReactDOM bundle executes so that

// Day of the month

// Day of week

// Day of year

// Deep merge modifiers options

// Default CSS values

// Default to a dummy "batch" implementation that just runs the callback

// Delay the execution of the ripple effect.

// Deprecated

// Deprecated, use pageNumber instead

// Detect buggy property enumeration order in older V8 versions.

// Determine if an Input is adorned on start.

// Determine if field is empty or filled.

// Determine if we are going backward or forward.

// DevTools can report bad minification during injection.

// Disable link interactions

// Disable the hover effect for the IconButton,

// Disable the vendor prefixer server-side, it does nothing.

// Disabled text have even lower visual prominence.

// Distinguish between actual "data" props that were passed to the wrapper component,

// Do not act if user performed touchmove

// Doing the other way around crash on IE 11 "''" https://github.com/cssinjs/jss/issues/242

// Don't block pointer events on the select under the icon.

// Don't bother if no value provided

// Don't do anything if the value has not changed.

// Don't insert rule directly if there is no stringified version yet.

// E.g. rules inside of @media container

// E.g., shift from Red 500 to Red 300 or Red 700.

// ESM COMPAT FLAG

// EXPORTS

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/defineProperty.js

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/iterableToArray.js

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/slicedToArray.js + 1 modules

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js + 2 modules

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/typeof.js

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js

// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/Backdrop/Backdrop.js

// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/Button/Button.js

// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/ButtonBase/ButtonBase.js + 2 modules

// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/Checkbox/Checkbox.js + 3 modules

// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/Chip/Chip.js + 1 modules

// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/CircularProgress/CircularProgress.js

// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/Dialog/Dialog.js

// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/DialogActions/DialogActions.js

// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/Fade/Fade.js

// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/FilledInput/FilledInput.js

// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/FormControl/formControlState.js

// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/FormControl/useFormControl.js

// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/Grid/Grid.js

// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/Grow/Grow.js

// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/Hidden/Hidden.js + 2 modules

// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/IconButton/IconButton.js

// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/List/List.js

// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/ListItem/ListItem.js

// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/ListItemText/ListItemText.js

// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/Menu/Menu.js

// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/MenuItem/MenuItem.js

// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/Modal/Modal.js + 1 modules

// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/Modal/ModalManager.js

// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/NativeSelect/NativeSelect.js

// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/OutlinedInput/OutlinedInput.js + 1 modules

// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/Paper/Paper.js

// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/Popover/Popover.js

// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/Portal/Portal.js

// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/RadioGroup/RadioGroup.js

// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/Select/Select.js + 1 modules

// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/SvgIcon/SvgIcon.js

// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/Tab/Tab.js

// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/TabScrollButton/TabScrollButton.js

// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/Table/Table.js

// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/TableFooter/TableFooter.js

// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/TableHead/TableHead.js

// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/TextField/TextField.js

// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/Typography/Typography.js

// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/colors/blue.js

// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/colors/common.js

// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/colors/green.js

// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/colors/grey.js

// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/colors/indigo.js

// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/colors/orange.js

// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/colors/red.js

// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/internal/SwitchBase.js

// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/styles/colorManipulator.js

// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/styles/createMuiTheme.js + 6 modules

// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/styles/createStyles.js

// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/styles/defaultTheme.js

// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/styles/makeStyles.js

// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/styles/transitions.js

// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/styles/useTheme.js

// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/styles/withStyles.js

// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/styles/zIndex.js

// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/utils/capitalize.js

// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/utils/isMuiElement.js

// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/utils/ownerDocument.js

// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/utils/setRef.js

// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/utils/unstable_useId.js

// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/utils/useControlled.js

// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/utils/useEventCallback.js

// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/withWidth/withWidth.js

// EXTERNAL MODULE: ./node_modules/@material-ui/icons/HourglassEmpty.js

// EXTERNAL MODULE: ./node_modules/@material-ui/icons/LinkedIn.js

// EXTERNAL MODULE: ./node_modules/@material-ui/icons/MenuRounded.js

// EXTERNAL MODULE: ./node_modules/@material-ui/styles/esm/StylesProvider/StylesProvider.js

// EXTERNAL MODULE: ./node_modules/@material-ui/styles/esm/createGenerateClassName/createGenerateClassName.js

// EXTERNAL MODULE: ./node_modules/@material-ui/styles/esm/createStyles/createStyles.js

// EXTERNAL MODULE: ./node_modules/@material-ui/styles/esm/getThemeProps/getThemeProps.js

// EXTERNAL MODULE: ./node_modules/@material-ui/styles/esm/jssPreset/jssPreset.js + 9 modules

// EXTERNAL MODULE: ./node_modules/@material-ui/styles/esm/styled/styled.js

// EXTERNAL MODULE: ./node_modules/@material-ui/styles/esm/useTheme/useTheme.js

// EXTERNAL MODULE: ./node_modules/@material-ui/system/esm/breakpoints.js

// EXTERNAL MODULE: ./node_modules/@material-ui/system/esm/compose.js

// EXTERNAL MODULE: ./node_modules/@material-ui/system/esm/css.js

// EXTERNAL MODULE: ./node_modules/@material-ui/system/esm/spacing.js + 1 modules

// EXTERNAL MODULE: ./node_modules/@material-ui/utils/esm/deepmerge.js

// EXTERNAL MODULE: ./node_modules/@material-ui/utils/esm/formatMuiErrorMessage.js

// EXTERNAL MODULE: ./node_modules/date-fns/esm/_lib/format/longFormatters/index.js

// EXTERNAL MODULE: ./node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js

// EXTERNAL MODULE: ./node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js + 1 modules

// EXTERNAL MODULE: ./node_modules/date-fns/esm/_lib/getUTCISOWeekYear/index.js

// EXTERNAL MODULE: ./node_modules/date-fns/esm/_lib/getUTCWeek/index.js + 1 modules

// EXTERNAL MODULE: ./node_modules/date-fns/esm/_lib/requiredArgs/index.js

// EXTERNAL MODULE: ./node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js

// EXTERNAL MODULE: ./node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js

// EXTERNAL MODULE: ./node_modules/date-fns/esm/_lib/toInteger/index.js

// EXTERNAL MODULE: ./node_modules/date-fns/esm/format/index.js + 4 modules

// EXTERNAL MODULE: ./node_modules/date-fns/esm/isValid/index.js

// EXTERNAL MODULE: ./node_modules/date-fns/esm/locale/en-US/index.js + 9 modules

// EXTERNAL MODULE: ./node_modules/date-fns/esm/toDate/index.js

// EXTERNAL MODULE: ./node_modules/is-in-browser/dist/module.js

// EXTERNAL MODULE: ./node_modules/jss/dist/jss.esm.js

// EXTERNAL MODULE: ./node_modules/material-table/dist/index.js

// EXTERNAL MODULE: ./node_modules/prop-types/index.js

// EXTERNAL MODULE: ./node_modules/react-dom/index.js

// EXTERNAL MODULE: ./node_modules/react-redux/es/index.js + 20 modules

// EXTERNAL MODULE: ./node_modules/react-router/node_modules/path-to-regexp/index.js

// EXTERNAL MODULE: ./node_modules/react-transition-group/esm/Transition.js + 1 modules

// EXTERNAL MODULE: ./node_modules/react-transition-group/esm/TransitionGroup.js + 1 modules

// EXTERNAL MODULE: ./node_modules/react-transition-group/esm/TransitionGroupContext.js

// EXTERNAL MODULE: ./node_modules/react/index.js

// EXTERNAL MODULE: ./node_modules/redux-logger/dist/redux-logger.js

// EXTERNAL MODULE: ./node_modules/redux/es/redux.js

// EXTERNAL MODULE: ./node_modules/tiny-invariant/dist/tiny-invariant.esm.js

// Edge

// Either this is the first call, activity has stopped and we're at the

// Empty object will remove all currently defined props

// Emulate the sass function "unit"

// Emulate the sass function "unitless"

// Enable rule without name for inline styles.

// Ensure headers exist

// Ensure the correct width for iOS Safari

// Ensure the hash is encoded properly before doing anything else.

// Ensure we always have a properly-encoded hash.

// Era

// Example of use case: ignore the event if there is a Slider.

// Execute the module function

// Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.

// Experimental export

// Explicitly set the default value to solve a bug on IE 11.

// Expose Axios class to allow class inheritance

// Expose Cancel & CancelToken

// Expose all/spread

// Extend props interface

// Extended year

// Extended year. This is a single number designating the year of this calendar system.

// FUTURE: use evt.nativeEvent.inputType for del event, see comments at onkeydown

// Factory for creating new instances

// Fallback to this default id when possible.

// February is null to handle the leap year (using ||)

// Finally, add the keys which didn't appear before any key in `next`

// Find a plugin for current prefix property.

// Find a position.

// Firefox

// Firefox 19+

// Firefox can even throw an error for invalid properties, e.g., "0".

// Firefox want us to check `-x` and `-y` variations as well

// Fix IE 11 flexbox alignment. To remove at some point.

// Fix IE 11 issue

// Fix IE 11 issue, to remove at some point.

// Fix IE 11 width issue

// Fix IE 11 wobbly

// Fix Popper.js display issue

// Fix a bug on Chrome where the scroll isn't initially 0.

// Fix a bug with IE 11 where the focus/blur events are triggered

// Fix a rendering issue on Edge

// Fix for Edge

// Fix for https://github.com/facebook/react/issues/7769

// Flag the module as loaded

// Flatten headers

// Follow https://material.google.com/motion/duration-easing.html#duration-easing-natural-easing-curves

// Follow https://material.io/guidelines/motion/duration-easing.html#duration-easing-common-durations

// Font and text properties

// Font style needs to be applied before font

// For accessibility and SEO concerns, we render the title to the DOM node when

// For browsers use XHR adapter

// For correct alignment with the text.

// For each key of `next`, the list of keys to insert before that key in

// For now we ignore the minWidth and wrappedWidth of colspan cells when calculating colspan widths.

// For server-side rendering.

// For some reason the animation is broken on Mobile Chrome if the size if even.

// For the auto layouting

// Force a side effect so we don't have any override priority issue.

// Force an array if not already something iterable

// Fraction of second

// From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_Patterns

// From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens

// From https://github.com/KyleAMathews/convert-css-length

// GA strings need to have leading/trailing whitespace trimmed, and not all

// Generate a rich color object.

// Get a function to be used for $ref replacement.

// Get popper node sizes

// Get rid of `auto` `auto-start` and `auto-end`

// Get the offset of of the anchoring element

// Get vertical scroll

// Given developers can stop the propagation of the synthetic event,

// Google analytics

// Grid properties

// HTMLStyleElement needs fixing https://github.com/facebook/flow/issues/2696

// HTTP basic authentication

// Hack to get children with a negative margin to not falsify the height computation.

// Handle browser request cancellation (as opposed to a manual cancellation)

// Handle cancellation

// Handle invocations in a tight loop.

// Handle low level network errors

// Handle non-square image. The property isn't supported by IE 11.

// Handle other cases based on DOM element used as boundaries

// Handle progress if needed

// Handle rules like @font-face, which can have multiple styles in an array

// Handle timeout

// Handle viewport case

// Hardcode test to convert "flex" to "-ms-flexbox" for IE10.

// Headers whose duplicates are ignored by node

// Here we make sure to give as "start" the element that comes first in the DOM

// Hide alt text.

// Hide dimensionless scrollbar on MacOS

// Hide the image broken icon, only works on Chrome.

// Hijack the default focus behavior.

// Hook up interceptors middleware

// Hour [0-11]

// Hour [0-23]

// Hour [1-12]

// Hour [1-24]

// Hours and minutes with `:` delimiter

// Hours and minutes without `:` delimiter

// Hours and optional minutes

// Hours, minutes and optional seconds with `:` delimiter

// Hours, minutes and optional seconds without `:` delimiter

// IE 11

// IE 11 centering bug, to remove from the customization demos once no longer supported

// IE 11 sometimes throws when accessing window.history.state

// IE 11: fieldset with legend does not render

// IE can even throw an error in some cases, for e.g. style.content = 'bar'.

// IE keeps the CSSStyleSheet after style node has been reattached,

// IE may throw if property is unknown.

// IE needs attribute set twice to normalize properties

// IE10 10 FIX: Please, don't ask, the element isn't

// ISO day of week

// ISO week of year

// ISO week-numbering year

// Idempotent

// If 'transition' or 'transition-property' property.

// If 0 months, no-op to avoid changing times in the hour before end of DST

// If React sees the exact same element reference as last time, it bails out of re-rendering

// If an anchor element wasn't provided, just use the parent body element of this Popover

// If divider is found, we divide the list of values and operands to divide

// If it's not a number it's an operator, I guess

// If neither are provided let the Modal take care of choosing the container

// If no head or foot is set, try generating it with content from columns

// If not enough, can use https://github.com/DieterHolvoet/event-propagation-path/blob/master/propagationPath.js

// If offsetParent is the reference element, we really want to

// If ordinal numbers depend on context, for example,

// If pure is true, the selector returned by selectorFactory will memoize its results,

// If selector setter is not implemented, rerender the rule.

// If that was the last modal in a container, clean up the container.

// If the anchorEl prop is provided, use its parent body element as the container

// If the child props _did_ change (or we caught an error), this wrapper component needs to re-render

// If the child props haven't changed, nothing to do here - cascade the subscription update

// If the container prop is provided, use that

// If the modal we are adding is already in the DOM.

// If the path exists, push it onto the end.

// If the render was from a store update, clear out that reference and cascade the subscriber update

// If user specifies an insertion point and it can't be found in the document -

// If we aren't running in "pure" mode, we don't want to memoize values.

// If we don't see a visibility change within 100ms, it's probably a

// If we have a fn values map, it is a rule with function values.

// If we have a style function, the entire rule is dynamic and style object

// If we have new child props, and the same wrapper props, we know we should use the new child props as-is.

// If we're in "pure" mode, ensure our wrapper component only re-renders when incoming props have changed.

// If we're not subscribed to the store, nothing to do here

// Ignore already escaped sequences.

// Ignore events from children of `Chip`.

// Ignore everything but left-click

// Ignore extraneous popstate events in WebKit.

// Ignore the events not coming from the "backdrop"

// Ignore the nodes that have no width.

// Ignore the scroll children if the element has an overflowX hidden

// Ignore the scroll children if the element is absolute positioned.

// Ignore the scrollbar width

// Ignore this change; we already setState in push/replace.

// Important!

// Importing jspdf in nodejs environments does not work as of jspdf

// Improve Gatsby support

// Improve scrollable dialog support.

// Improve type search style.

// In IE 11 it is possible for document.activeElement to be null resulting

// In case it's not rendered with a div.

// In case of HTML, we need a different computation

// In case previous insertion fails, passed index might be wrong

// In case the modal wasn't in the DOM yet.

// In cases where the parent is fixed, we must ignore negative scroll in offset calc

// In non-strict mode we allow a slash at the end of match. If the path to

// In order to preserve the right order, we need to queue all `.addRule` calls,

// In order to prevent blinks and help the reconciliation of the React tree

// In that case, throw the error from here so it doesn't get lost.

// In the case the element node is external and it is already in the DOM.

// In the context of a TransitionGroup all enters are really appears

// In the documentation, we are using `autoprefixer` to solve this problem.

// Increase the specificity to override TableCell.

// Initial children should all be entering, dependent on appear

// Inject custom styles

// Input is 'Z'

// Instead, we just default to 0 for keys we don't know.

// Instead, we just default to 0 for paths we don't know.

// Invalid ISO-formatted string

// Invalid ISO-formatted time

// Invalid ISO-formatted year

// Invoke the leading edge.

// Is a global static MUI style?

// Is a vertical scrollbar displayed?

// Is there another group

// It can't be configured as it's used statically for propTypes.

// It contains the same rule registered by name and by selector.

// It is a rules container like for e.g. ConditionalRule.

// It is a string or a number as a string like '1'.

// It is an at-rule and it has no instance.

// It seems to kick-off the source order specificity algorithm.

// It should to be noted that this function isn't equivalent to `text-transform: capitalize`.

// It will be inserted all together when .attach is called.

// It's a Transition like component

// It's a getter.

// It's allowing us to keep the implementation size minimal.

// It's an alternative API to useTheme().

// It's corresponding to the left with LTR.

// It's inspired by

// It's most likely on issue on userland.

// It's not a shorthand notation.

// It's possible that we caught an error due to a bad mapState function, but the

// It's using scrollParent by default, we can use the viewport when using a portal.

// Iterate over array values

// Iterate over object keys

// Iterate over the tokens and create our regexp string.

// J, F, ..., D

// JSONP chunk loading for javascript

// JSPDF 1.4 uses get functions instead of properties on pageSize

// Jan, Feb, ..., Dec

// January, February, ..., December

// Keep 7 significant numbers.

// Keep elements with a scroll

// Keep in mind that @media is inclusive by the CSS specification.

// Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.

// Key might contain a unique suffix in case the `name` passed by user was duplicate.

// Keyboard accessibility for non interactive elements

// Keyboard navigation assumes that [role="tab"] are siblings

// Keyframes is already prefixed. e.g. key = '@-webkit-keyframes a'

// Lastly we add detail panel icon

// Lastly we add tree data icon

// Later, we gonna translate back the node to his original location

// Lazily create the ref replacer function just once for

// Legends:

// Let's ignore that piece of logic if users are already overriding the width

// Let's keep the focus in the component after expanding.

// Limitations

// Listen for ready state

// Load entry module and return exports

// Local day of week

// Local week of year

// Local week-numbering year

// Long

// Loop trough the offsets arrays and execute the operations

// Low Pass filter.

// Make sure all columns get at least min width even though width calculations are not based on them

// Make sure text is always string[] since user can assign string

// Make sure the event starts and ends on the same DOM element.

// Make sure the next tab starts from the right place.

// Make the flex item shrink with Firefox

// Margin properties

// Mask properties

// Match Express-style parameters and un-named parameters with a prefix

// Match any characters still remaining.

// Match escaped characters that would otherwise appear in future matches.

// Material Design layouts are visually balanced. Most measurements align to an 8dp grid applied, which aligns both spacing and the overall layout.

// Measure height of a textarea with a single row

// Memoize the check that determines which context instance we should use.

// Microsoft

// Milliseconds timestamp

// Mimic the behavior of DOM histories by

// Minute

// Modals don't open on the server so this won't conflict with concurrent requests.

// Month

// Most of the logic is implemented in `NativeSelectInput`.

// Most of the logic is implemented in `SelectInput`.

// Most of the time, the match media logic isn't central to people tests.

// Most of the units rely on the orientation of the popper

// Motion properties

// Move to the next element.

// Mozilla

// NAMESPACE OBJECT: ./node_modules/@material-ui/core/esm/colors/index.js

// NAMESPACE OBJECT: ./node_modules/react-ga/dist/esm/core.js

// NOTE: 1 DOM access here

// NOTE: DOM access here

// Name the function so it is clearer in the documentation

// Native select can't be selected either.

// Need a large enough difference to allow scrolling.

// Need a large enough difference to update the height.

// No need for a media query for the first size.

// No need for transitions when the component is hidden

// No need to display any value if the field is empty.

// No need to prefix IE/Edge. Older browsers will ignore unsupported rules.

// No need to render an empty rule.

// Not all browsers support upload events

// Not all elements in IE 11 have a focus method.

// Not existing properties.

// Not using getter since:

// Note that this is not perfect for now since for example row and table styles are

// Note that we do this because on renders _not_ caused by store updates, we need the latest store state

// Note: Be careful editing this code!  It's been tuned for performance

// Note: date-fns input types are more lenient than this adapter, so we need to expose our more

// Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets

// Now that all that's done, we can finally try to actually render the child component.

// Numerical value (Nth day of week with current locale or weekStartsOn)

// Numerical value (same as in `e`)

// Object syntax {fallbacks: {prop: value}}

// Object.prototype.hasOwnProperty.call

// Objects enter the screen at full velocity from off-screen and

// Objects leave the screen at full velocity. They do not decelerate when off-screen.

// Once IE 11 support is dropped the focus() call can be unconditional.

// Once tested, result is cached. It gives us up to 70% perf boost.

// One-arg form: push(location)

// Only convert the first 3 values to int (i.e. not alpha)

// Only invoke if we have `lastArgs` which means `func` has been

// Only special HTML elements have these default behaviors.

// Optimize for cases where `from` and `to` units are accidentally the same.

// Optional Fields

// Options has been already created, now we only increase index.

// Order is important, because we can't use insertRule API if style element is not attached.

// Order matters. We need to check Webkit the last one because

// Ordinal number

// Original styles object.

// Other elements, if background transparent, are not supported.

// Otherwise add header to the request

// Otherwise handleExited will call this.

// Otherwise insert after the last attached.

// Otherwise make sure the next top modal is visible to a screen reader.

// Otherwise, put this component's subscription instance into context, so that

// Otherwise, the UX would be confusing.

// Otherwise, we now know that setting the original day-of-month value won't

// Our re-subscribe logic only runs when the store/subscription setup changes

// Outline properties

// Padded numerical value

// Padding

// Padding properties

// Pause the timer when the user is interacting with the Snackbar

// Per 4.4, set bits for version and `clock_seq_hi_and_reserved`

// Perform in the willUpdate

// Perform the calculations only when direction is rtl to avoid messing up the ltr bahavior

// Performance shortcut

// Perspective properties

// Place conditional right after the parent rule to ensure right ordering.

// Plugins can create rules.

// Ported from Compass

// Position properties

// Preact support, target is read only property on a native event.

// Preact uses an empty array as children by

// Prefill cache with known css properties to reduce amount of

// Prepare the response

// Prepare the ripple effect.

// Prepend partial segment prefixes.

// Preserve <br> tags as line breaks in the pdf

// Prevent infinite loop.

// Prevent padding issue with fullWidth.

// Prevent padding issue with the Modal and fixed positioned AppBar.

// Prevent scroll of the page

// Prevent the app bar to be visible on each printed page.

// Prevents scroll issue, waiting for Popper.js to add this style once initiated.

// Promise = chunk loading, 0 = chunk loaded

// Propagate any mapState/mapDispatch errors upwards

// Properties that cannot be correctly detected using the

// Provide a fake value as Chrome might not let you access it for security reasons.

// Provide aliases for supported request methods

// Provide default props

// Provide the theme object as a prop to the input component.

// Provide the theme to the wrapped component.

// Public interface

// Pull data from the store after first render in case the store has

// Push the current path onto the tokens.

// Q1, Q2, Q3, Q4

// Quarter

// RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed

// Re-create this selector whenever the store changes.

// Re-evaluate trigger when dependencies change

// Reach 42px touch target, about ~8mm on screen.

// React 15 compat

// React v16.11 and below

// React v16.12 and above

// Real errors are hidden from us by the browser

// Refactoring modifiers' list (Object => Array)

// Remove Content-Type if data is undefined

// Remove IE 11 arrow

// Remove `button` border

// Remove `button` padding

// Remove cache for benchmark tests or return property from the cache.

// Remove cache for benchmark tests or return value from cache.

// Remove extra space and line breaks in markup to make it more similar to

// Remove from the content flow

// Remove props.

// Remove resize event listener on window

// Remove scroll event listener on scroll parents

// Remove the margin in Safari

// Remove the padding in Firefox

// Remove the padding when type=search.

// Remove the title ahead of time.

// Removes the alpha (sets it to 1), and lightens or darkens the theme color.

// Rename ref to inputRef as we don't know the

// Render above the focus ripple.

// Render the badge on top of potential ripples.

// Renderable is defined if StyleSheet option `link` is true.

// Replace all $refs.

// Replace all & by the parent or prefix & with the parent.

// Replace two single quote characters with one single quote character

// Required Fields

// Required for select\text-field height consistency

// Reset

// Reset (19px), match the native input line-height

// Reset Firefox invalid required input style

// Reset any `maxWait` timer.

// Reset browser default style.

// Reset default value

// Reset fieldset default style.

// Reset for Safari

// Reset on touch devices, it doesn't add specificity

// Reset state

// Reset styles for current property.

// Reset the position, the swipe was aborted.

// Reset the stacking context.

// Resets for multpile select with chips

// Resize event listener on window

// Resolve default props, code borrow from React source.

// Resolve incomplete/relative pathname relative to current location.

// Respect cellWidth set in columnStyles even if there is no cells for this column

// Response determines if label is presented above field or as placeholder.

// Restart the timer when the user is no longer interacting with the Snackbar

// Restart the timer.

// Result is tuple (date, flags)

// Return already prefixed value without prefixing.

// Return body, `getScroll` will take care to get the correct `scrollTop` from it

// Return custom CSS variable without prefixing.

// Return false from a transition hook to cancel the transition.

// Return false if setter was not successful.

// Return false if value not supported.

// Return the exports of the module

// Returns 1 for 1 BC (which is year 0 in JavaScript)

// Returns a function which generates unique class names based on counters.

// Ripple is used for user feedback (e.g. click or press) so we want to apply styles with the highest priority

// Round the number of days to the nearest integer

// Rules registry for access by .get() method.

// Run the resizer again if there's remaining width needs

// Same logic as the LinearProgress track color

// Same logic as useAutocomplete.js

// Same reset as ButtonBase.root

// Save printer ink.

// Save references to the new child props.  Note that we track the "child props from store update"

// Say we render `open={false}` -> `open={true}` but never commit.

// Scroll event listener on scroll parents

// Second

// Secondary text.

// Seconds timestamp

// See Option 3. https://github.com/facebook/react/issues/14476#issuecomment-471199055

// See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/37

// See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376

// See https://github.com/ReactTraining/history/pull/289

// See if s could be an email address. We don't want to send personal data like email.

// See issue: https://github.com/date-fns/date-fns/issues/376

// Send the request

// Send to GA

// Set config.method

// Set initial width

// Set the baseFontSize for your project. Defaults to 16px (also the browser default).

// Set the last day of the new month

// Set the request timeout in MS

// Set the width of the inner div to the first child's

// Set up refs to coordinate values between the subscription effect and the render logic

// Shadow properties

// Shift the starting point.

// Short

// Should also take into account that head and foot is not

// Show and hide the placeholder logic

// Show that it's not an text input

// Simple Validation

// Since the input field is behind the label in the HTML tree,

// Skip configuration where the position is screen size invariant.

// Skip hidden elements which don't have an offsetParent

// Skip over if undefined or null

// Smaller components, such as icons and type, can align to a 4dp grid.

// So copying it here would give us the same result in the wrapper as well.

// So it doesn't collapse.

// So the animation always start from the start.

// So we don't have to use the `withTheme()` Higher-order Component.

// So we only render active snackbars.

// So we see the popover when it's empty.

// So we take precedent over the style of a native <a /> element.

// So, we'll use the child props from store update only if the wrapper props are the same as last time.

// Some default value that looks fine waiting for the animation to kicks in.

// Some random properties

// Sorted ASC by size. That's important.

// Specifically not if we're in a web worker, or react-native.

// Stand-alone local day of week

// Stand-alone month

// Stand-alone quarter

// Standard

// Standard browser envs have full support of the APIs needed to test

// Start the timer for the trailing edge.

// Stop the event from bubbling up to the `Chip`

// Stringify 0 and false, but not undefined or null

// Subset of jss-preset-default with only the plugins the Material-UI components are using.

// Subtract margins of documentElement in case it's being used as parent

// Sum the scrollTop between two elements.

// Support CSSTOM.

// Support IOS safari

// Support space separated values via `[['5px', '10px']]`.

// Supports determination of isControlled().

// Swallow the event, in case someone is listening for the escape key on the body.

// T

// TODO We're reading the store directly in render() here. Bad idea?

// TODO can we remove it?

// TODO v5: `.selectRoot` should be merged with `.input`

// TODO v5: consider to make it private

// TODO v5: merge root and select

// TODO v5: remove

// TODO v5: remove the second argument.

// TODO: Add more comments

// TODO: If another transition starts while we're still confirming

// TODO: We could probably make this more reliable by

// TODO: remove fallback for next major

// Table can't get smaller due to custom-width or minWidth restrictions

// Take first and add as last

// Take last and add as first

// Take the box sizing into account for applying this value as a style.

// Takes a background color and returns the text color that maximizes the contrast.

// Test if weekStartsOn is between 0 and 6 _and_ is not NaN

// Test if weekStartsOn is between 1 and 7 _and_ is not NaN

// Test prefixed value.

// Test value as it is.

// Text hints.

// That's why we use a singleton here.

// The JS Date object supports date math by accepting out-of-bounds values for

// The `Select` component is a simple API wrapper to expose something better to play with.

// The autoFocus of React might trigger the event before the componentDidMount.

// The background color of a disabled action.

// The background colors used to style the surfaces.

// The blur won't fire when the disabled state is set on a focused input.

// The child props selector needs the store reference as an input.

// The chunk loading function for additional chunks

// The clicked element received the focus but gets removed from the DOM.

// The color of a disabled action.

// The color of a selected action.

// The color of an active action like an icon button.

// The color of an hovered action.

// The color used to divide different elements.

// The colors used to indicate the successful completion of an action that user triggered.

// The colors used to present information to the user that is neutral and not necessarily important.

// The colors used to represent interface elements that the user should be made aware of.

// The colors used to represent potentially dangerous actions or important messages.

// The colors used to represent primary interface elements for a user.

// The colors used to represent secondary interface elements for a user.

// The colors used to style the action elements.

// The colors used to style the text.

// The component is uncontrolled, so we need to give it its own state.

// The element was already mounted.

// The grey colors.

// The handler doesn't take event.defaultPrevented into account:

// The height of the outer content

// The id is required for proper a11y

// The main difference between `y` and `u` localizers are B.C. years:

// The modal might be closed before it had the chance to be mounted in the DOM.

// The module cache

// The most important text.

// The mouseover event will trigger for every nested element in the tooltip.

// The native select doesn't respond to enter on MacOS, but it's recommended by

// The palette type, can be light or dark.

// The primary input mechanism of the device includes a pointing device of limited accuracy.

// The ref may be null when a parent component updates while swiping.

// The regex match should only return at maximum two array elements.

// The request errored out and we didn't get a response, this will be

// The require function

// The sharp curve is used by objects that may return to the screen at any time.

// The swipe wasn't started.

// The touch interaction occurs too quickly.

// The value is most likely not a valid HTML attribute.

// The way the read on `nodeToRestore` is setup could make this actually safe.

// The whatwg spec defines how the browser should behave but does not explicitly mention any events:

// The wrapper receives only user supplied props, which could be a subset of

// Then we add detail panel icon

// There is no point in displaying an empty tooltip.

// There is no sheet when the renderer is used from a standalone StyleRule.

// There was no camel case in place

// This RegExp consists of three parts separated by `|`:

// This Subscription's source should match where store came from: props vs. context. A component

// This action has a similiar effect to ActionTypes.INIT.

// This allows the user to escape special characters that won't transform.

// This check is needed to avoid errors in case one of the elements isn't defined for any reason

// This defends against someone passing weird input, to ensure that if all

// This defensive check is here for simplicity.

// This ensures that when UTC functions will be implemented, locales will be compatible with them.

// This file contains only the entry chunk.

// This function allow to reference all chunks

// This function allow to reference async chunks

// This function will be a part of public API when UTC function will be implemented.

// This handles the case when num is very small (0.00000001), js will turn this into 1e-8.

// This implementation is based heavily on node's url.parse

// This is a bit of a hack. We have to start listening for location

// This is for to force a repaint,

// This is needed in order to deduplicate the injection of CSS in the page.

// This is needed in order to inject the critical CSS.

// This is only done if running in a standard browser environment.

// This is the most common easing curve.

// This is used to make sure we don't warn about the same

// This isn't reproducible in IE10 compatibility mode of IE11

// This prevents a delayed response from GA

// This prevents infinite rendering loop.

// This shouldn't be necessary, but there are weird race conditions with

// This shouldn't happen as long as we do top-down subscriptions correctly, but

// This value is closed to what browsers are using internally to

// This way, we can get a performance boost.

// This will likely cause Bad Things (TM) to happen in Concurrent Mode.

// Throw an exception if start date is after end date or if any date is `Invalid Date`

// Timezone (GMT)

// Timezone (ISO-8601)

// Timezone (ISO-8601. +00:00 is `'Z'`)

// Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)

// Timezone (ISO-8601. If offset is 0, output is always `'Z'`)

// Timezone (specific non-location)

// To avoid conditionally calling hooks, we fall back to a tiny wrapper

// To avoid forwardref boolean children.

// To deprecate in v4.1

// To detect a tab/window switch, we look for a blur event followed

// To maintain the wrapperProps object reference, memoize this destructuring.

// To remove at some point.

// To remove in v5

// To support composition of theme.

// Touche devices

// Tracks if either the rendered classes or classes prop has changed,

// Transform properties

// Transform request data

// Transform response data

// Transition properties

// Translate the node so he can't be seen on the screen.

// Tricky logic here:

// Truncate at 3 digits

// Try to find a comment placeholder if registry is empty.

// Try to insert before the next higher sheet.

// Try webkit fallback.

// Tu

// Tue

// Tuesday

// Two digit year

// Two-arg form: push(path, state)

// UNUSED EXPORTS: ENTERED, ENTERING, EXITED, EXITING, UNMOUNTED

// UNUSED EXPORTS: ReactReduxContext, batch, connectAdvanced, createDispatchHook, createSelectorHook, createStoreHook, shallowEqual, useStore

// UNUSED EXPORTS: styles

// Unique ID creation requires a high quality random # generator. In the browser we therefore

// Unitless following https://meyerweb.com/eric/thoughts/2006/02/08/unitless-line-heights/

// Update `data` attributes, styles and arrowStyles

// Update and add props.

// Update width when window size changes

// Use !important to override the Modal inline-style.

// Use a negative lookahead to match only capturing groups.

// Use a ref so the open value used is always up to date inside useCallback.

// Use computed style, here to get the real padding to add our scrollbar width.

// Use div by default.

// Use height if placement is left or right and index is 0 otherwise use width

// Use side effect over immutability for better performance.

// Use the random value for client-side rendering only.

// Use the same logic as

// Used by `getContrastText()` to maximize the contrast between

// Used by the functions below to shift a color's luminance by approximately

// Used by whenMapStateToPropsIsFunction and whenMapDispatchToPropsIsFunction,

// Used to avoid issues with jss-plugin-expand integration.

// Used to ensure correct rules order.

// Used to filter out mouse emulated events on mobile.

// User for validation

// Users may optionally pass in a custom context instance to use instead of our ReactReduxContext.

// Using a hash computation over an array iteration could be faster, but with only 28 items,

// Using components as a low-level styling construct can be simpler.

// Validation functions

// Value is empty and wasn't defined before.

// Value with a vendor prefix.

// Values from https://github.com/material-components/material-components-web/blob/be8747f94574669cb5e7add1a7c54fa41a89cec7/packages/mdc-elevation/_variables.scss

// Verify that the code above has been dead code eliminated (DCE'd).

// Visibility needed to hide the extra text area on iPads

// WARNING: Potentially unsafe in concurrent mode.

// WARNING: Prevents the instance from being garbage collected. Should only

// Wait for jsdom to support the match media feature.

// We are going to remove this value.

// We are likely to be swiping, let's prevent the scroll event on iOS.

// We are not supposed to handle this touch move because the swipe was started in a scrollable container in the drawer

// We are not supposed to handle this touch move.

// We are open to change the tradeoff.

// We are swiping, let's prevent the scroll event on iOS.

// We are using the mouseover event instead of the mouseenter event to fix a hide/show issue.

// We can only have one node at the time claiming ownership for handling the swipe.

// We can skip rerendering when the tooltip is already open.

// We can use a shorthand class name, we never use the keys to style the components.

// We can't add rules to a detached style node.

// We can't really do much here. Up to user to for example

// We can't use class properties because they don't get listed in the

// We can't use it server-side.

// We can't use window.location.hash here because it's not

// We cannot tell if a hashchange was caused by a PUSH, so we'd

// We cannot tell if a hashchange was caused by a REPLACE, so we'd

// We could have been using a custom modifier like react-popper is doing.

// We disable the focus ring for mouse, touch and keyboard users.

// We do this comparison to avoid unneeded `rule.prop()` calls, since we have the old `style` object here.

// We don't expect any of the above to throw, but better to be safe.

// We don't know yet.

// We don't need to extract functions on each style update, since this can happen only once.

// We don't support function values inside of function rules.

// We don't want to close the dialog when clicking the dialog content.

// We don't want to display the ripple for touch scroll events.

// We don't want to wait for the next render commit.

// We encourage the usage of useTheme() where possible.

// We have now written a state that wasn't committed. But no committed effect

// We memoize the elements for the rendered child component as an optimization.

// We might render an empty child.

// We need the Fragment here to force react-docgen to recognise NoSsr as a component.

// We need this to execute synchronously every time we re-render. However, React warns

// We need to account for this eventuality.

// We need to book keep the focused state manually.

// We need to centralize the zIndex definitions as they work

// We need to clone array because if we modify the index somewhere else during a loop

// We need to do that only once.

// We need to extract function values from the declaration, so that we can keep core unaware of them.

// We need to ignore the next contain as

// We need to iterate through the children and find the Input in order

// We need to release the lock.

// We need to render the container without children first.

// We need to reset the rule counter for SSR for each request.

// We need to run the plugins in case new `style` relies on syntax plugins.

// We need to save the original decl before creating the rule

// We need to update the position of the drawer when the direction change and

// We need to use `force: true` because `rule.style` has been updated during onUpdate hook, so `rule.prop()` will not update the CSSOM rule.

// We only handle the first word.

// We rely on a new `style` ref in case it was mutated during onUpdate hook.

// We render a select. We can ignore the type provided by the `Input`.

// We should not do anything if required serverside.

// We still want to show ripple effect.

// We test every property on vendor prefix requirement.

// We use React.Children.forEach instead of React.Children.toArray().find()

// We use a position absolute over a flexbox in order to forward the pointer events

// We use a timer in order to only show the ripples for touch "click" like events.

// We use the same empty object to ref count the styles that don't need a theme object.

// We want only prefixable values here.

// We want to capture the wrapper props and child props we used for later comparisons

// We will redeploy the sheet once user will attach it.

// We would risk displaying two tooltips at the same time (native + this one).

// Webpack imported jspdf instead of jsPDF for some reason 

// When a store is created, an "INIT" action is dispatched so that every

// When interacting quickly, the text can end up selected.

// When new generator function is created, rule counter is reset.

// When num is bigger than 1 or less than -1 it won't get converted to this notation so it's fine.

// When rendering the component on the server,

// When rule is being stringified before selector was defined.

// When rules are inserted using `insertRule` API, after `sheet.detach().attach()`

// When there is no prior location and pathname is empty, set it to /

// Width and colspan

// Width and height properties

// With Edge, Safari and Firefox, no focus related events are fired when the focused area stops being a focused area

// With one exception: request that using file: protocol, most browsers

// Without it, IE will have a broken source order specificity if we

// Work on cloned node to make sure no changes are applied to html table

// Workaround Safari wrong implementation of matchMedia

// Workaround as Safari has partial support for touchAction: 'none'.

// Workaround for a rendering bug with spanned columns in Chrome 62.0.

// Workaround for https://github.com/facebook/react/issues/7769

// Works with iframes and any node types.

// Write current value to cache.

// Year

// Year values from 0 to 99 map to the years 1900 to 1999

// [date], [time], or [date, time].

// [theme.breakpoints.up('sm')]: {

// __webpack_public_path__

// `,

// `disableHoverListener` is set. This title logic is disabled.

// `notifyNestedSubs` is duplicated to handle the case where the component is unmounted in

// `only` check is faster to get out sooner if used.

// a Promise means "currently loading".

// a border radius. This maintains consistency

// a moving reference to internal objects within obj

// about useLayoutEffect in SSR, so we try to detect environment and fall back to

// add "moreModules" to the modules object,

// add selection action width only for left container div

// add unit if the value is numeric and is one of the following

// alignItems: 'flex-start',

// all chunks have JS

// all nested rules within the sheet.

// allow detectFactoryAndVerify to get ownProps

// allowing connectAdvanced's shouldComponentUpdate to return false if final

// allows for nested Transitions

// and hitting left arrow to move the cursor in a text input etc.

// and material-components-web https://github.com/material-components/material-components-web/blob/ac46b8863c4dab9fc22c4c662dc6bd1b65dd652f/packages/mdc-theme/_functions.scss#L54

// and not the bottom of the html element

// and optional suffixes. Matches appear as:

// and refer to originalPlacement to know the original value

// and values needed to control behavior (forwarded refs, alternate context instances).

// and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434

// any additional property we may add in the future

// any property present in `data.attributes` will be applied to the popper,

// any property present in `data.styles` will be applied to the popper,

// are running

// aria-hidden because the dom element doesn't exist either

// arrow depends on keepTogether in order to work

// as a a11y violation

// as a ref instead of a useState/useReducer because we need a way to determine if that value has

// as soon as a modal is adding its modalRef is undefined. it can't set

// assoc the scrolls

// assure the correct width for iOS Safari

// auto

// avoid mem leaks in IE.

// avoid to make this modifier completely useless and look like broken

// background: isDraggingOver ? 'lightblue' : '#0000000a',

// backwards compat in hooks

// bad specificity issues may appear.

// be drawn above other things on the page

// because a hover effect should apply to the entire Expand button and

// because cache plugin needs to use it as a key to return a cached rule.

// because the number of milliseconds in a week is not constant

// been processed.  If this went into useState/useReducer, we couldn't clear out the value without

// best way to handle this.

// bottom/right side

// boxShadow: '1px 1px 1px 1px rgba(0,0,0,0.2)',

// browsers have String.prototoype.trim().

// browsers not implementing :focus-visible will throw a SyntaxError

// but we can use a longhand property instead.

// but we need it to be parsed in our timezone

// by always having a legend rendered

// by any combination of letters, digits, plus, period, or hyphen.

// c.f. https://nodejs.org/api/http.html#http_message_headers

// cache prefill method.

// call without arguments in case when scrollIntoView works improperly (e.g. Firefox 52-57)

// calling preventDefault in keyUp on a <button> will not dispatch a click event if Space is pressed

// can be removed once we drop support for non ref forwarding class components

// cause an overflow, so set the desired day-of-month. Note that we can't

// causing a render after a cancelled POP.

// causing hitCallback from being fired twice

// changed

// changed since we began.

// changes here in the constructor in case there are any <Redirect>s

// check if column can grow

// check that this isn't another touchstart due to multitouch

// class prototype and break stuff like Sinon stubs

// clicking a checkbox to check it, hitting a button to submit a form,

// cols rows default values are for docs only

// component at different URLs.

// compute auto placement, store placement inside the data object,

// compute center of the popper

// compute reference element offsets

// compute the popper offsets

// connected descendants won't update until after this component is done

// connected to the store via props shouldn't use subscription from context, or vice versa.

// considered in DOM in some circumstances...

// consistent across browsers - Firefox will pre-decode it!

// console.log("S a: " + column.tableData.additionalWidth);

// console.log("S i: " + column.tableData.initialWidth);

// console.log("S w: " + column.tableData.width);

// console.log('entering', key)

// console.log('leaving', key)

// console.log('unchanged', key)

// const fn = props => {

// const handlers = styles.reduce((acc, style) => {

// const propsChanged = Object.entries(this.props).reduce((didChange, prop) => didChange || prop[1] !== prevProps[prop[0]], false);

// convert indexes to properties

// copy over the last transition props;

// create a fake namespace object

// create a new object with ClientRect class props + scrollLeft

// create error before stack unwound to get useful stacktrace later

// createConnect with default args builds the 'official' connect behavior. Calling it with

// dataKey is not used internally no more but keep for

// data[columnDef.field] = value;

// debounced at least once.

// default, so use null if that's the case.

// define __esModule on exports

// define getter function for harmony exports

// define getter functions for harmony exports

// delete when  https://developer.mozilla.org/en-US/docs/Web/API/InputEvent/inputType will be supported by all major browsers

// dependsOnOwnProps is used by createMapToPropsProxy to determine whether to pass props as args

// deprecated in v3

// determine visibility based on the smallest size up

// dialog without title

// different options opens up some testing and extensibility scenarios

// differently when margins are applied to it. The margins are included in

// display: 'inline-block',

// displaying methpds

// do not close picker if needs to show next view

// do not overridable

// do not use `remove` because IE11 doesn't support it

// does not affect the width of columns, setting columnStyles cellWidth enables the

// don't hoist over string (html) components

// e.g. https://bugzilla.mozilla.org/show_bug.cgi?id=559561.

// eslint-disable-line

// eslint-disable-line dot-notation

// eslint-disable-line no-alert

// eslint-disable-line no-new-wrappers

// eslint-disable-line react-hooks/exhaustive-deps

// eslint-disable-next-line @typescript-eslint/no-explicit-any

// eslint-disable-next-line @typescript-eslint/no-var-requires

// eslint-disable-next-line camelcase

// eslint-disable-next-line consistent-this

// eslint-disable-next-line no-param-reassign

// eslint-disable-next-line no-restricted-globals

// eslint-disable-next-line no-unused-expressions

// eslint-disable-next-line no-unused-vars

// eslint-disable-next-line prefer-rest-params

// eslint-disable-next-line prefer-spread

// eslint-disable-next-line react-hooks/exhaustive-deps

// eslint-disable-next-line react-hooks/rules-of-hooks

// eslint-disable-next-line react/no-danger

// event.preventDefault() is meant to stop default behaviours like

// expand the tree for all nodes present after filtering and searching

// export { applyPlugin } didn't export applyPlugin

// expose the module cache

// expose the modules object (__webpack_modules__)

// extends keepTogether behavior making sure the popper and its

// fallback to today if no enabled days

// final column width

// find the complete implementation of crypto (msCrypto) on IE11.

// fire the first update to position the popper in the right place

// first resize attempt: with respect to minReadableWidth and minWidth

// flex: '0 1 auto',

// flexDirection: 'row',

// flexWrap: 'nowrap',

// focusable events only

// fontGrid finds a minimal grid (in rem) for the fontSize values so that the

// for all data rows, restore initial expand if no search term is available and remove items that shouldn't be there

// for all the other DOM elements, this one is good

// forcing another re-render, which we don't want.

// format usually looks better without this

// generators (like Math.random()).

// get a new location before the <Router> is mounted.

// get reference and popper elements (allow jQuery wrappers)

// get the effective start and end considering hidden columns

// getDefaultExport function for compatibility with non-harmony modules

// getRandomValues needs to be invoked in a context where "this" is a Crypto implementation. Also,

// getSnapshotBeforeUpdate(prevProps) {

// go one step up and use the next offsetParent as reference to

// guaranteed to still have the original time.

// half icon

// handled by onerror instead

// height. This ensures a tapable area outside of the simple menu with which to dismiss

// here because toArray adds keys to all child elements and we do not want

// hold a weak ref.

// http://davidwalsh.name/vendor-prefix

// http://fb.me/prop-types-in-prod

// http://jsperf.com/element-style-object-access-vs-plain-object

// https://bugs.chromium.org/p/v8/issues/detail?id=3056

// https://bugs.chromium.org/p/v8/issues/detail?id=4118

// https://caniuse.com/#search=appearance

// https://caniuse.com/#search=color-adjust

// https://caniuse.com/#search=keyframes

// https://caniuse.com/#search=mask

// https://caniuse.com/#search=text-orientation

// https://codesandbox.io/s/button-keyup-preventdefault-dn7f0

// https://css-tricks.com/snippets/css/force-vertical-scrollbar/

// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign

// https://developers.google.com/analytics/devguides/collection/analyticsjs/

// https://gist.github.com/gre/1650294

// https://github.com/Compass/compass/blob/master/core/stylesheets/compass/typography/_units.scss

// https://github.com/cssinjs/jss/blob/4e6a05dd3f7b6572fdd3ab216861d9e446c20331/src/utils/createGenerateClassName.js

// https://github.com/facebook/react/blob/15a8f031838a553e41c0b66eb1bcf1da8448104d/packages/react/src/ReactElement.js#L221

// https://github.com/mui-org/material-ui/pull/17315#issuecomment-528286677

// https://github.com/simonbengtsson/jsPDF-AutoTable/issues/596

// https://github.com/simonbengtsson/jsPDF-AutoTable/issues/632

// https://github.com/simonbengtsson/jsPDF-AutoTable/issues/653

// https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028

// https://html.spec.whatwg.org/multipage/interaction.html#focus-fixup-rule.

// https://material.io/design/layout/understanding-layout.html#usage

// https://stackoverflow.com/questions/41328728/force-casting-in-flow

// https://support.google.com/analytics/answer/2795983?hl=en

// https://www.w3.org/TR/wai-aria-practices/examples/listbox/listbox-collapsible.html

// https://www.wolframalpha.com/input/?i=(4+%2B+15+*+(x+%2F+36+)+**+0.25+%2B+(x+%2F+36)+%2F+5)+*+10

// if `inner` modifier is enabled, we can't use the `flip` modifier

// if an hypothetical scrollbar is detected, we must be sure it's not a `border`

// if arrowElement is a string, suppose it's a CSS selector

// if arrowElement is defined and arrowStyles has some properties

// if arrowElement is not found, don't run the modifier

// if event was handled prevent other side effects (e.g. page scroll)

// if filter or search is enabled, collapse the tree

// if is an explicit pixel unit, we get rid of the unit and keep the value

// if is an implicit unit, it's px, and we return just the value

// if mapStateToProps is falsy, the Connect component doesn't subscribe to store state changes

// if null - do not show error

// if open event.stopImmediatePropagation

// if popper is destroyed, don't perform any further update

// if shift shiftvariation is specified, run the modifier

// if the arrowElement isn't a query selector we must check that the

// if the original date was the last day of the longer month

// if they are different for different grammatical genders,

// if value was changed in closed state - treat it as accepted

// if we are mounting and running this it means appear _must_ be set

// if we ever do those wrong, this throw will surface the error in our tests.

// ignore everything but left clicks

// in case function rule returns a falsy value.

// in nodeToRestore.current being null.

// in non-ending mode, where "/test/" shouldn't match "/test//route".

// in the morning, in the afternoon, in the evening, at night

// in this way the first offset will use an axis and the second one

// in this way we can make the 3rd party modifiers add custom styles to it

// init state

// initial column width (will be resized)

// innerText for ie

// insert rules after we insert the style tag.

// install a JSONP callback for chunk loading

// is absolutely positioned.

// is empty. Make it non-empty to avoid this issue.

// is not affected by `padding` or `border`.

// is re-rendered, the selectors are called again, and

// is that other hash histories in the page will consider it a POP.

// is valid at the end of a path match, not in the middle. This is important

// it as the trailing edge, or we've hit the `maxWait` limit.

// it will try to move the focus back to the rootRef element.

// it's doesn't worth the bundle size.

// it's not behavior of the native <option> and causes

// item and use the first valid item as a fallback

// item hasn't changed transition states

// item is new (entering)

// item is old (exiting)

// items would be shown anyway, we just show all items without the EllipsisItem

// its time changed in the unusual case where where a DST transition was on

// js parsed string assuming it's in UTC timezone

// jsdom doesn't support innerText

// just a random format, mostly always not needed for users

// just set the date of `endOfDesiredMonth` because that object may have had

// just useEffect instead to avoid the warning, since neither will run anyway.

// justifyContent: 'flex-start',

// keeping a list of keys we've seen in sessionStorage.

// keeping a list of paths we've seen in sessionStorage.

// keys multiple times.

// label will inherit this from root, then `clickable` class overrides this for both

// left side of button is out of view

// let warnOnce = false;

// like global values in the browser.

// lineHeight falls under a x pixels grid, 4px in the case of Material Design,

// lines of this modifier!

// loadScript function to load a script via script tag

// log error

// loose mode is safe iff we're concatenating primitives

// made custom fonts not work. For example:

// make it unitless

// make update() debounced, so that it only runs at most once-per-tick

// margin + half icon

// match already ends with a slash, we remove it for consistency. The slash

// mess with these values

// might init navigation

// mode & 1: value is a module id, require it

// mode & 2: merge all properties of value into the ns

// mode & 4: return value when already ns object

// mode & 8|1: behave like require

// modifiers have the ability to execute arbitrary code when Popper.js get inited

// modifiers will be able to edit `placement` if needed

// month and using a date of 0 to back up one day to the end of the desired

// month, day, etc. For example, new Date(2020, 1, 0) returns 31 Dec 2019 and

// month.

// most basic recommended timing

// most browsers create a new CSSStyleSheet, except of all IEs.

// name and withTheme are invariant in the outer scope

// new Date(2020, 13, 1) returns 1 Feb 2021.  This is *almost* the behavior we

// new Date(2020, 13, 31) will return 3 Mar 2021 not 28 Feb 2021 as desired. So

// newValue

// nextStatus will always be ENTERING or EXITING.

// no HMR

// no HMR manifest

// no baseURI

// no deferred startup

// no enter animation skip right to ENTERED

// no exit animation skip right to EXITED

// no need for validFocusTarget check. the user does that by attaching it to

// no offsetParent is present, I hate this job...

// no prefetching

// no preloaded

// node is `undefined` when user provided `nodeRef` prop

// normalized

// not accounted for

// not only to the IconButton.

// object and shouldComponentUpdate will always return true.

// object to store loaded and loading chunks

// of the following:

// of the menu.

// oldValue

// on every page with some settings

// on the initial render. If there are, they will replace/push when

// onClick prevented default

// onEnterXxx and onExitXxx callbacks have a different arguments.length value.

// one of the nodes is inside shadowDOM, find which one

// onerror should only fire if it's a network error

// only for non-users

// only for users

// options object:

// or auto filled by the browser before the hydration (for SSR).

// or if the column only have colspan cells. Since the width of colspan cells

// or when the user hide the window.

// or when the window is shown back.

// other vendors use to add Webkit prefixes to some properties

// otherwise our MenuItems dispatches a click event

// otherwise we will only clear a single timer when unmounting while two

// othwerise, we use the standard `top`, `left`, `bottom` and `right` properties

// padding: '8px 16px',

// paddingLeft: theme.spacing(2),

// paddingRight: theme.spacing(2),

// parent re-rendered without this component and we're about to unmount.

// passed through to selectorFactory

// preserve all children of nodes that are matched by search or filters

// prettier-ignore

// prevent arrowElement from being placed not contiguously to its popper

// prevent the checkbox column from growing

// probably be avoided if Subscription's listeners logic is changed to not call listeners

// properties we need to feature test at runtime.

// props have not changed. If false, the selector will always return a new

// provided DOM node is child of its popper node

// provided `inputComponent` structure.

// px

// rapidly by a visibility change.

// rather setState here and ignore the hashchange. The caveat here

// reach 42px hit target (2 * 15 + thumb diameter)

// react-transition-group#onExit

// react-transition-group#onExited

// recommended when something is entering screen

// recommended when something is leaving screen

// reduce font size, increase page size or remove custom cell widths

// reducer returns their initial state. This effectively populates

// reference have enough pixels in conjunction

// regular focus change.

// remove the popper if user explicitly asked for the deletion on destroy

// repeated next to a DST transition.  So we use `date` instead which is

// require the crypto API and do not support built-in fallback to lower quality random number

// requiring the generation of a new finalized classes object.

// rerender those rules.

// resets the popper's position so that the document size can be calculated excluding

// rest params over-transpile for this case

// restoreLastFocus()

// restores the original style properties after the offsets have been computed

// rethrow might be better if it's not the expected error but do we really

// return url for filenames not based on template

// reuse validation and open/close logic

// right side of button is out of view

// rowData with old value

// run the map function here instead so that the key is the computed one

// run the modifiers

// screensize shrink.

// second resize attempt: ignore minReadableWidth but respect minWidth

// see comment above on filled.zIndex

// see https://babeljs.io/docs/en/babel-plugin-transform-template-literals#loose

// see https://github.com/dmtrKovalenko/material-ui-pickers/pull/267

// seems like flip is trying to loop, probably there's not enough space on any of the flippable sides

// separate value from unit

// set justifyContent to default value to fix IE11 layout bug

// setState callbacks and unmounting in testing, so always make sure that

// setup Promise in chunk cache

// setup event listeners, they will take care of update the position in specific situations

// shouldComponentUpdate(nextProps, nextState){

// simulate autoOk, but do not close the modal

// since we inject focus related props into children we have to do a lookahead

// slight alteration to spec spacing to match visual spec result

// slowly decelerate to a resting point.

// so set year explicitly with setFullYear.

// so this token always has the same output as `XXX`

// so this token always has the same output as `XX`

// so this token always has the same output as `xx`

// so this token always has the same output as `xxx`

// so we need to check if the `renderable` reference the right style sheet and not

// so we use utc values to build date in our timezone.

// some basic styles to make the items look a bit nicer

// space

// specZ: The maximum height of a simple menu should be one or more rows less than the view

// start chunk loading

// store the computed placement inside `originalPlacement`

// strict signature and delegate to the more lenient signature. Otherwise, we have downstream type errors upon usage.

// strip a leading dot

// style.borderWidth only works in chrome (borderTopWidth etc works in firefox and ie as well)

// styled-components's API removes the mapping between components and styles.

// subtract scrollbar size from sizes

// such code is executed in the same order of its modifier

// swap previousItemKey with nextItemKey

// sync with `height` in `legend` styles

// sync with `lineHeight` in `legend` styles

// take popper margin in account because we don't have this info available

// temporary style

// test

// that child, same as if it was wrapped in React.memo() or returned false from shouldComponentUpdate.

// that have been unsubscribed in the  middle of the notification loop.

// that just executes the given callback immediately.

// that were committed on `open={true}`

// the actual props Component might receive due to merging with defaultProps.

// the background and the text.

// the box of the documentElement, in the other cases not.

// the combined list

// the current version with just one short number and use it for classes generation

// the first `update` will call `onCreate` callback

// the initial state tree.

// the input field is drawn last and hides the label with an opaque background color.

// the last day of the month and its local time was in the hour skipped or

// the matched portion of the URL

// the menu.

// the middle of the notification loop, where `subscription` will then be null. This can

// the module.

// the new state tree with any relevant data from the old one.

// the nodejs jspdf dist files with the exported applyPlugin

// the other ones will call `onUpdate` callback

// the path used to match

// the previous one, we may end up in a weird state. Figure out the

// the ref may be null when a parent component updates while swiping

// the select to close immediately since we open on space keydown

// the size of the popper element itself

// the tooltip is hidden. However, we have made a tradeoff when

// them by ofset X and Y.

// then flag all "chunkIds" as loaded and fire callback

// therefore not reporting its length accurately..

// they could add new properties to their options configuration

// they mount and since cDM fires in children before parents, we may

// they will be set as HTML attributes of the element

// this boolean to detect any flip loop

// this function wraps mapToProps in a proxy function which does several things:

// this is to be used in complex animations

// this object contains `position`, we want to preserve it along with

// this.containers[containerIndex] = {

// this.modals[modalIndex] = modal

// though we might warn in the future about nested, interactive elements

// to allow more columns to be reduced in size

// to be distributed and there're columns that can be resized

// to check if there is a `selected` item. We're looking for the last `selected`

// to determine what the child props should be

// to determine what the child props should be.

// to find nulls

// to fully support server-side rendering.

// to index.d.ts for some reason

// to is absolute

// to is relative, drop the filename

// to learn the context in which each easing should be used.

// to learn when use what timing

// to report a different scrollHeight depending on whether the last line

// to the input and to support wrapping tags..

// to the mapToProps function being wrapped. It is also used by makePurePropsSelector to determine

// to trigger an unmount/remount for two <Route>s that render the same

// top/left side

// touch DOM only if `applyStyle` modifier is enabled

// trailing edge, the system time has gone backwards and we're treating

// trigger a native scroll.

// tslint:disable-next-line

// two indexes within its tonal palette.

// undefined = chunk not loaded, null = chunk preloaded/prefetched

// unset defaults from textbox inputs

// urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils

// use 1 for the potential rounding error with browser zooms.

// use `filter` to obtain the same behavior of `find`

// use `find` + `indexOf` if `findIndex` isn't supported

// use `options.unit`:

// use native find if supported

// use native findIndex if supported

// used for row presentation of radio/checkbox

// used in error messages

// used to compute Connect's displayName from the wrapped component's displayName.

// user to at least do it manually.

// utils is a library of generic helper functions non-specific to axios

// variant === temporary

// want except that dates will wrap around the end of a month, meaning that

// want to crash if focus-visible malfunctioned?

// warnOnce = true;

// warning(

// we are not rendering the child component.

// we can cancel any pending setState callbacks after we unmount.

// we can only be confident with a positive value.

// we do this before each modifier to make sure the previous one doesn't

// we do this only on HTML because it's the only element that behaves

// we end up with very hard-to-track-down side effects.

// we have no idea about the client browser screen width.

// we ignore all errors here, since when the component

// we make this check conditional for performance reasons

// we use a counter. Also it is more accurate, because user can manually reevaluate

// we use our own heuristic for those browsers

// we'll default to the end of the desired month by adding 1 to the desired

// webpackBootstrap

// what would be shown in html

// when it's hidden.

// when modal was unmounted before modalRef gets null

// when offsetParent is <html> the positioning is relative to the bottom of the screen (excluding the scrollbar)

// where `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',

// whether mapToProps needs to be invoked when props have changed.

// whether or not we matched exactly

// whether the request URL is of the same origin as current location.

// which happen after the first `rules.add()` call.

// which is necessary in order to transition styles when adding a class name.

// while `uu` pads single digit years to 2 characters and returns other years unchanged.

// while it seemed to work everywhere else.

// while the input is disabled.

// width difference that needs to be distributed

// will be handled in keyUp, otherwise some browsers

// will be returned from that function.

// will read this wrong value. We only read from `nodeToRestore` in effects

// will receive the previous state. This effectively populates

// will return status as 0 even though it's a successful request

// will throw again, if neither props nor store state

// will use the other one

// with `none`.`

// with {} we create a new object with the options inside it

// without changing the relative line height

// without the position applied we can't guarantee correct computations

// x  represents a dark background

// zIndex: 1 will raise the label above opaque background-colors of input.

// | AC 1 |   1 |   1 |

// | AD 1     |     1 | 01 |   001 |  0001 | 00001 |

// | AD 12    |    12 | 12 |   012 |  0012 | 00012 |

// | AD 123   |   123 | 23 |   123 |  0123 | 00123 |

// | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |

// | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |

// | BC 1 |   1 |   0 |

// | BC 2 |   2 |  -1 |

// | Year     |     y | yy |   yyy |  yyyy | yyyyy |

// | Year | `y` | `u` |

// |----------|-------|----|-------|-------|-------|

// |------|-----|-----|

// || represents the viewport

// }

// },

// }, {});

// };

// ⚠️ object-fit is not supported by IE 11.

// ⚠️ sticky is not supported by IE 11.

//# sourceMappingURL=ClockView.js.map

//# sourceMappingURL=DatePicker.js.map

//# sourceMappingURL=DateTimePicker.js.map

//# sourceMappingURL=Day.js.map

//# sourceMappingURL=Picker-ccd9ba90.js.map

//# sourceMappingURL=TimePicker.js.map

//# sourceMappingURL=TimePickerToolbar-81100fab.js.map

//# sourceMappingURL=index.js.map

//# sourceMappingURL=jspdf.es.min.js.map

//# sourceMappingURL=makePickerWithState-5a79cb8a.js.map

//# sourceMappingURL=popper.js.map

//# sourceMappingURL=react-router.js.map

//# sourceMappingURL=useUtils-cfb96ac9.js.map
